"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var ReactComponents_resourceandtaskfinder;
(self["webpackChunkReactComponents_"] = self["webpackChunkReactComponents_"] || []).push([["resourceandtaskfinder"],{

/***/ "./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-npcommon.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleAjaxError\": function() { return /* binding */ handleAjaxError; },\n/* harmony export */   \"hasAltKey\": function() { return /* binding */ hasAltKey; },\n/* harmony export */   \"hasMetaKey\": function() { return /* binding */ hasMetaKey; },\n/* harmony export */   \"insertCover\": function() { return /* binding */ insertCover; },\n/* harmony export */   \"removeCover\": function() { return /* binding */ removeCover; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sharedscripts_sentry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-sentry.js\");\n/* eslint-disable no-unused-vars, func-names */\n/* global ajax request handling */\n\n\n$.ajaxSetup({\n  timeout: 60000\n});\n\n// the 'busy' spinner shows in the right-hand corner when an ajax request is running or a page navigation link was clicked\n$(document).ajaxStart(function () {\n  $('#status').addClass('busy').children('.message').html('BUSY');\n});\n$(window).on('beforeunload', function () {\n  $('#status').addClass('busy').children('.message').html('BUSY');\n});\n$(document).ajaxStop(function () {\n  $('#status').removeClass('busy').not('.lost').children('.message').html('');\n});\nfunction alertInternalServerError(errorDialogHTML) {\n  if (errorDialogHTML) $('body').append(errorDialogHTML);\n}\nfunction alertConnectionLost(message) {\n  alert(message);\n  window.location = '/';\n}\nfunction alertUnreportableError(message) {\n  alert(message);\n}\nfunction setOffline() {\n  $('#status').removeClass('busy').addClass('lost').children('.message').html('OFFLINE');\n}\n\n// tempo var to suppress multiple warning (should replace with nice encapsulated var)\nvar warningGiven;\nfunction handleAjaxError(e, jqXHR, ajaxSettings, thrownError) {\n  function logToSentry() {\n    if ((0,_sharedscripts_sentry__WEBPACK_IMPORTED_MODULE_0__.isSentryInitialized)()) {\n      _sentry_browser__WEBPACK_IMPORTED_MODULE_1__.withScope(function (scope) {\n        var extraData = {\n          type: ajaxSettings.type,\n          url: ajaxSettings.url,\n          data: ajaxSettings.data,\n          status: jqXHR.status,\n          error: thrownError || jqXHR.statusText,\n          response: jqXHR.responseText ? jqXHR.responseText.substring(0, 100) : undefined\n        };\n        scope.setExtras(extraData);\n        _sentry_browser__WEBPACK_IMPORTED_MODULE_1__.captureMessage(thrownError || jqXHR.statusText);\n      });\n    }\n  }\n  switch (jqXHR.status) {\n    case 500:\n      // Server-side error, use the communicated error message\n      setOffline();\n      // If an error happens however in a block with as response type Javascript, we need to manually evaluate the response text\n      if (jqXHR.getResponseHeader('content-type') === 'text/javascript') eval(jqXHR.responseText);\n      alertInternalServerError(jqXHR.getResponseHeader('content-type') === 'text/html' ? jqXHR.responseText : null);\n      logToSentry();\n      break;\n    case 403:\n      setOffline();\n      if ($('.panel--error').length === 0 && warningGiven === undefined) {\n        warningGiven = true;\n        alertConnectionLost('Connection with server has been lost. You need to login again. (error 403)');\n      }\n      break;\n    case 0:\n      if (jqXHR.statusText !== 'timeout') break;\n    // client-cancelled request: skip this one\n    // eslint-disable-next-line no-fallthrough\n    default:\n      if ($('.panel--error').length === 0 && warningGiven === undefined) {\n        warningGiven = true;\n        if (thrownError !== '' && thrownError !== 'timeout') {\n          logToSentry();\n          alertUnreportableError(\"Yesplan encountered an unreportable error: \".concat(thrownError));\n        } else {\n          setOffline();\n          alertConnectionLost(\"Connection with server has been lost. You need to login again. (error \".concat(jqXHR.status, \") - \").concat(thrownError, \" - \").concat(jqXHR.statusText, \" - \").concat(jqXHR.responseText, \" - \").concat(ajaxSettings.url));\n        }\n      }\n  }\n}\n$(document).ajaxError(handleAjaxError);\n\n/* cover insertion */\nfunction insertCover() {\n  if ($('.cover').length === 0) {\n    var bodyEl = $('body');\n    bodyEl.append('<div class=\"cover\"> </div>');\n    bodyEl.css({\n      'overflow': 'hidden'\n    });\n  }\n}\nfunction removeCover() {\n  var coverEl = $('.cover');\n  if (coverEl.length !== 0 && $('[data-needscover]').length === 0) coverEl.remove();\n  $('body').css({\n    'overflow': ''\n  });\n}\nfunction hasMetaKey(event) {\n  // Detect the metaKey (ctrl on windows/linux or cmd on mac)\n  var isMac = navigator.platform.match(/mac/i) !== null && navigator.platform.match(/mac/i).length > 0;\n  return isMac && event.metaKey || !isMac && event.ctrlKey;\n}\n\n// Detect the alt key\nfunction hasAltKey(event) {\n  return event.altKey;\n}\n\n// Extend the String class with a format function similar to the one in Smalltalk\nif (!String.prototype.format) {\n  String.prototype.format = function () {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n      return typeof args[number] !== 'undefined' ? args[number] : match;\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ZZXNwbGFuL3Jlc291cmNlcy9yZWFjdGpzLWNvbXBvbmVudHMvQ29tbW9uU2NyaXB0cy9zaGFyZWRzY3JpcHRzL3NoYXJlZHNjcmlwdHMtbnBjb21tb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWFjdENvbXBvbmVudHNfLy4vWWVzcGxhbi9yZXNvdXJjZXMvcmVhY3Rqcy1jb21wb25lbnRzL0NvbW1vblNjcmlwdHMvc2hhcmVkc2NyaXB0cy9zaGFyZWRzY3JpcHRzLW5wY29tbW9uLmpzPzVkNWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMsIGZ1bmMtbmFtZXMgKi9cbi8qIGdsb2JhbCBhamF4IHJlcXVlc3QgaGFuZGxpbmcgKi9cbmltcG9ydCAqIGFzIFNlbnRyeSBmcm9tIFwiQHNlbnRyeS9icm93c2VyXCI7XG5pbXBvcnQge2lzU2VudHJ5SW5pdGlhbGl6ZWR9IGZyb20gXCIuL3NoYXJlZHNjcmlwdHMtc2VudHJ5XCI7XG5cbiQuYWpheFNldHVwKHsgdGltZW91dDogNjAwMDAgfSk7XG5cblxuLy8gdGhlICdidXN5JyBzcGlubmVyIHNob3dzIGluIHRoZSByaWdodC1oYW5kIGNvcm5lciB3aGVuIGFuIGFqYXggcmVxdWVzdCBpcyBydW5uaW5nIG9yIGEgcGFnZSBuYXZpZ2F0aW9uIGxpbmsgd2FzIGNsaWNrZWRcbiQoZG9jdW1lbnQpLmFqYXhTdGFydChmdW5jdGlvbigpIHtcbiAgJCgnI3N0YXR1cycpLmFkZENsYXNzKCdidXN5JykuY2hpbGRyZW4oJy5tZXNzYWdlJykuaHRtbCgnQlVTWScpO1xufSk7XG4kKHdpbmRvdykub24oJ2JlZm9yZXVubG9hZCcsIGZ1bmN0aW9uKCkge1xuICAkKCcjc3RhdHVzJykuYWRkQ2xhc3MoJ2J1c3knKS5jaGlsZHJlbignLm1lc3NhZ2UnKS5odG1sKCdCVVNZJyk7XG59KTtcblxuJChkb2N1bWVudCkuYWpheFN0b3AoZnVuY3Rpb24oKSB7XG4gICQoJyNzdGF0dXMnKS5yZW1vdmVDbGFzcygnYnVzeScpLm5vdCgnLmxvc3QnKS5jaGlsZHJlbignLm1lc3NhZ2UnKS5odG1sKCcnKTtcbn0pO1xuXG5mdW5jdGlvbiBhbGVydEludGVybmFsU2VydmVyRXJyb3IoZXJyb3JEaWFsb2dIVE1MKSB7XG4gIGlmIChlcnJvckRpYWxvZ0hUTUwpXG4gICAgJCgnYm9keScpLmFwcGVuZChlcnJvckRpYWxvZ0hUTUwpO1xufVxuXG5mdW5jdGlvbiBhbGVydENvbm5lY3Rpb25Mb3N0KG1lc3NhZ2UpIHtcbiAgYWxlcnQobWVzc2FnZSk7XG4gIHdpbmRvdy5sb2NhdGlvbiA9ICcvJztcbn1cblxuZnVuY3Rpb24gYWxlcnRVbnJlcG9ydGFibGVFcnJvcihtZXNzYWdlKSB7XG4gIGFsZXJ0KG1lc3NhZ2UpO1xufVxuXG5mdW5jdGlvbiBzZXRPZmZsaW5lKCkge1xuICAkKCcjc3RhdHVzJykucmVtb3ZlQ2xhc3MoJ2J1c3knKS5hZGRDbGFzcygnbG9zdCcpLmNoaWxkcmVuKCcubWVzc2FnZScpLmh0bWwoJ09GRkxJTkUnKTtcbn1cblxuLy8gdGVtcG8gdmFyIHRvIHN1cHByZXNzIG11bHRpcGxlIHdhcm5pbmcgKHNob3VsZCByZXBsYWNlIHdpdGggbmljZSBlbmNhcHN1bGF0ZWQgdmFyKVxubGV0IHdhcm5pbmdHaXZlbjtcbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVBamF4RXJyb3IoZSwganFYSFIsIGFqYXhTZXR0aW5ncywgdGhyb3duRXJyb3IpIHtcbiAgZnVuY3Rpb24gbG9nVG9TZW50cnkoKSB7XG4gICAgaWYgKGlzU2VudHJ5SW5pdGlhbGl6ZWQoKSkge1xuICAgICAgU2VudHJ5LndpdGhTY29wZShmdW5jdGlvbihzY29wZSkge1xuICAgICAgICBjb25zdCBleHRyYURhdGEgPSB7XG4gICAgICAgICAgdHlwZTogYWpheFNldHRpbmdzLnR5cGUsXG4gICAgICAgICAgdXJsOiBhamF4U2V0dGluZ3MudXJsLFxuICAgICAgICAgIGRhdGE6IGFqYXhTZXR0aW5ncy5kYXRhLFxuICAgICAgICAgIHN0YXR1czoganFYSFIuc3RhdHVzLFxuICAgICAgICAgIGVycm9yOiB0aHJvd25FcnJvciB8fCBqcVhIUi5zdGF0dXNUZXh0LFxuICAgICAgICAgIHJlc3BvbnNlOiAoanFYSFIucmVzcG9uc2VUZXh0KSA/IGpxWEhSLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgMTAwKSA6IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgICAgICBzY29wZS5zZXRFeHRyYXMoZXh0cmFEYXRhKTtcbiAgICAgICAgU2VudHJ5LmNhcHR1cmVNZXNzYWdlKHRocm93bkVycm9yIHx8IGpxWEhSLnN0YXR1c1RleHQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIHN3aXRjaCAoanFYSFIuc3RhdHVzKSB7XG4gICAgY2FzZSA1MDA6IC8vIFNlcnZlci1zaWRlIGVycm9yLCB1c2UgdGhlIGNvbW11bmljYXRlZCBlcnJvciBtZXNzYWdlXG4gICAgICBzZXRPZmZsaW5lKCk7XG4gICAgICAvLyBJZiBhbiBlcnJvciBoYXBwZW5zIGhvd2V2ZXIgaW4gYSBibG9jayB3aXRoIGFzIHJlc3BvbnNlIHR5cGUgSmF2YXNjcmlwdCwgd2UgbmVlZCB0byBtYW51YWxseSBldmFsdWF0ZSB0aGUgcmVzcG9uc2UgdGV4dFxuICAgICAgaWYgKGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCdjb250ZW50LXR5cGUnKSA9PT0gJ3RleHQvamF2YXNjcmlwdCcpXG4gICAgICAgIGV2YWwoanFYSFIucmVzcG9uc2VUZXh0KTtcbiAgICAgIGFsZXJ0SW50ZXJuYWxTZXJ2ZXJFcnJvcigoanFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoJ2NvbnRlbnQtdHlwZScpID09PSAndGV4dC9odG1sJykgPyBqcVhIUi5yZXNwb25zZVRleHQgOiBudWxsKTtcbiAgICAgIGxvZ1RvU2VudHJ5KCk7XG4gICAgICBicmVhaztcbiAgICBjYXNlIDQwMzpcbiAgICAgIHNldE9mZmxpbmUoKTtcbiAgICAgIGlmICgkKCcucGFuZWwtLWVycm9yJykubGVuZ3RoID09PSAwICYmICh3YXJuaW5nR2l2ZW4gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgd2FybmluZ0dpdmVuID0gdHJ1ZTtcbiAgICAgICAgYWxlcnRDb25uZWN0aW9uTG9zdCgnQ29ubmVjdGlvbiB3aXRoIHNlcnZlciBoYXMgYmVlbiBsb3N0LiBZb3UgbmVlZCB0byBsb2dpbiBhZ2Fpbi4gKGVycm9yIDQwMyknKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMDpcbiAgICAgIGlmIChqcVhIUi5zdGF0dXNUZXh0ICE9PSAndGltZW91dCcpXG4gICAgICAgIGJyZWFrOyAvLyBjbGllbnQtY2FuY2VsbGVkIHJlcXVlc3Q6IHNraXAgdGhpcyBvbmVcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZmFsbHRocm91Z2hcbiAgICBkZWZhdWx0OlxuICAgICAgaWYgKCQoJy5wYW5lbC0tZXJyb3InKS5sZW5ndGggPT09IDAgJiYgd2FybmluZ0dpdmVuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgd2FybmluZ0dpdmVuID0gdHJ1ZTtcbiAgICAgICAgaWYgKHRocm93bkVycm9yICE9PSAnJyAmJiB0aHJvd25FcnJvciAhPT0gJ3RpbWVvdXQnKSB7XG4gICAgICAgICAgbG9nVG9TZW50cnkoKTtcbiAgICAgICAgICBhbGVydFVucmVwb3J0YWJsZUVycm9yKGBZZXNwbGFuIGVuY291bnRlcmVkIGFuIHVucmVwb3J0YWJsZSBlcnJvcjogJHt0aHJvd25FcnJvcn1gKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRPZmZsaW5lKCk7XG4gICAgICAgICAgYWxlcnRDb25uZWN0aW9uTG9zdChgQ29ubmVjdGlvbiB3aXRoIHNlcnZlciBoYXMgYmVlbiBsb3N0LiBZb3UgbmVlZCB0byBsb2dpbiBhZ2Fpbi4gKGVycm9yICR7anFYSFIuc3RhdHVzfSkgLSAke3Rocm93bkVycm9yfSAtICR7anFYSFIuc3RhdHVzVGV4dH0gLSAke2pxWEhSLnJlc3BvbnNlVGV4dH0gLSAke2FqYXhTZXR0aW5ncy51cmx9YCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgfVxufVxuXG4kKGRvY3VtZW50KS5hamF4RXJyb3IoaGFuZGxlQWpheEVycm9yKTtcblxuLyogY292ZXIgaW5zZXJ0aW9uICovXG5leHBvcnQgZnVuY3Rpb24gaW5zZXJ0Q292ZXIoKSB7XG4gIGlmICgkKCcuY292ZXInKS5sZW5ndGggPT09IDApIHtcbiAgICBjb25zdCBib2R5RWwgPSAkKCdib2R5Jyk7XG4gICAgYm9keUVsLmFwcGVuZCgnPGRpdiBjbGFzcz1cImNvdmVyXCI+IDwvZGl2PicpO1xuICAgIGJvZHlFbC5jc3MoeydvdmVyZmxvdyc6ICdoaWRkZW4nfSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUNvdmVyKCkge1xuICBjb25zdCBjb3ZlckVsID0gJCgnLmNvdmVyJyk7XG4gIGlmICgoY292ZXJFbC5sZW5ndGggIT09IDApICYmICgkKCdbZGF0YS1uZWVkc2NvdmVyXScpLmxlbmd0aCA9PT0gMCkpXG4gICAgY292ZXJFbC5yZW1vdmUoKTtcbiAgJCgnYm9keScpLmNzcyh7J292ZXJmbG93JzogJyd9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhc01ldGFLZXkoZXZlbnQpIHtcbiAgLy8gRGV0ZWN0IHRoZSBtZXRhS2V5IChjdHJsIG9uIHdpbmRvd3MvbGludXggb3IgY21kIG9uIG1hYylcbiAgY29uc3QgaXNNYWMgPSAobmF2aWdhdG9yLnBsYXRmb3JtLm1hdGNoKC9tYWMvaSkgIT09IG51bGwpICYmIChuYXZpZ2F0b3IucGxhdGZvcm0ubWF0Y2goL21hYy9pKSkubGVuZ3RoID4gMDtcbiAgcmV0dXJuIChpc01hYyAmJiBldmVudC5tZXRhS2V5KSB8fCAoIWlzTWFjICYmIGV2ZW50LmN0cmxLZXkpO1xufVxuXG4vLyBEZXRlY3QgdGhlIGFsdCBrZXlcbmV4cG9ydCBmdW5jdGlvbiBoYXNBbHRLZXkoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LmFsdEtleTtcbn1cblxuLy8gRXh0ZW5kIHRoZSBTdHJpbmcgY2xhc3Mgd2l0aCBhIGZvcm1hdCBmdW5jdGlvbiBzaW1pbGFyIHRvIHRoZSBvbmUgaW4gU21hbGx0YWxrXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuZm9ybWF0KSB7XG4gIFN0cmluZy5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC97KFxcZCspfS9nLCBmdW5jdGlvbihtYXRjaCwgbnVtYmVyKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIGFyZ3NbbnVtYmVyXSAhPT0gJ3VuZGVmaW5lZCcgPyBhcmdzW251bWJlcl0gOiBtYXRjaDtcbiAgICB9KTtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-npcommon.js\n");

/***/ }),

/***/ "./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-sentry.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isSentryInitialized\": function() { return /* binding */ isSentryInitialized; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@sentry/browser/esm/index.js\");\n\nfunction isSentryInitialized() {\n  return _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub().getClient() !== undefined;\n}\n__webpack_require__.g.Sentry = _sentry_browser__WEBPACK_IMPORTED_MODULE_1__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ZZXNwbGFuL3Jlc291cmNlcy9yZWFjdGpzLWNvbXBvbmVudHMvQ29tbW9uU2NyaXB0cy9zaGFyZWRzY3JpcHRzL3NoYXJlZHNjcmlwdHMtc2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWFjdENvbXBvbmVudHNfLy4vWWVzcGxhbi9yZXNvdXJjZXMvcmVhY3Rqcy1jb21wb25lbnRzL0NvbW1vblNjcmlwdHMvc2hhcmVkc2NyaXB0cy9zaGFyZWRzY3JpcHRzLXNlbnRyeS5qcz80OWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFNlbnRyeSBmcm9tIFwiQHNlbnRyeS9icm93c2VyXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1NlbnRyeUluaXRpYWxpemVkKCkge1xuICByZXR1cm4gU2VudHJ5LmdldEN1cnJlbnRIdWIoKS5nZXRDbGllbnQoKSAhPT0gdW5kZWZpbmVkXG59XG5cbmdsb2JhbC5TZW50cnkgPSBTZW50cnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-sentry.js\n");

/***/ }),

/***/ "./Yesplan/resources/reactjs-components/finders/resourcefinder.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbstractResource\": function() { return /* binding */ AbstractResource; },\n/* harmony export */   \"AdHoc\": function() { return /* binding */ AdHoc; },\n/* harmony export */   \"ExternalResource\": function() { return /* binding */ ExternalResource; },\n/* harmony export */   \"FinancialAdHoc\": function() { return /* binding */ FinancialAdHoc; },\n/* harmony export */   \"PlaceHolder\": function() { return /* binding */ PlaceHolder; },\n/* harmony export */   \"PlaceHolderInSet\": function() { return /* binding */ PlaceHolderInSet; },\n/* harmony export */   \"ResourceInSet\": function() { return /* binding */ ResourceInSet; },\n/* harmony export */   \"ResourceInstance\": function() { return /* binding */ ResourceInstance; },\n/* harmony export */   \"ResourceSet\": function() { return /* binding */ ResourceSet; },\n/* harmony export */   \"addEntities\": function() { return /* binding */ addEntities; },\n/* harmony export */   \"addOpenSets\": function() { return /* binding */ addOpenSets; },\n/* harmony export */   \"archiveOpenSets\": function() { return /* binding */ archiveOpenSets; },\n/* harmony export */   \"clearEntities\": function() { return /* binding */ clearEntities; },\n/* harmony export */   \"clickRow\": function() { return /* binding */ clickRow; },\n/* harmony export */   \"displayQueryResultIn\": function() { return /* binding */ displayQueryResultIn; },\n/* harmony export */   \"expandOpenSets\": function() { return /* binding */ expandOpenSets; },\n/* harmony export */   \"finderQueryChanged\": function() { return /* binding */ finderQueryChanged; },\n/* harmony export */   \"finderQueryChangedInteractive\": function() { return /* binding */ finderQueryChangedInteractive; },\n/* harmony export */   \"finders\": function() { return /* binding */ finders; },\n/* harmony export */   \"getCurrentRole\": function() { return /* binding */ getCurrentRole; },\n/* harmony export */   \"getCurrentRoleInSE\": function() { return /* binding */ getCurrentRoleInSE; },\n/* harmony export */   \"lockTable\": function() { return /* binding */ lockTable; },\n/* harmony export */   \"openRoleSelector\": function() { return /* binding */ openRoleSelector; },\n/* harmony export */   \"refreshOpenTimelines\": function() { return /* binding */ refreshOpenTimelines; },\n/* harmony export */   \"removeEntities\": function() { return /* binding */ removeEntities; },\n/* harmony export */   \"selectRow\": function() { return /* binding */ selectRow; },\n/* harmony export */   \"setContextMenuPermissionInFinder\": function() { return /* binding */ setContextMenuPermissionInFinder; },\n/* harmony export */   \"sortInstanceDown\": function() { return /* binding */ sortInstanceDown; },\n/* harmony export */   \"sortInstanceUp\": function() { return /* binding */ sortInstanceUp; },\n/* harmony export */   \"tickResourcesInBasket\": function() { return /* binding */ tickResourcesInBasket; },\n/* harmony export */   \"toggleBasket\": function() { return /* binding */ toggleBasket; },\n/* harmony export */   \"toggleMultiple\": function() { return /* binding */ toggleMultiple; },\n/* harmony export */   \"toggleSet\": function() { return /* binding */ toggleSet; },\n/* harmony export */   \"triggerFinderUpdates\": function() { return /* binding */ triggerFinderUpdates; },\n/* harmony export */   \"unlockTable\": function() { return /* binding */ unlockTable; },\n/* harmony export */   \"unselectRow\": function() { return /* binding */ unselectRow; }\n/* harmony export */ });\n/* harmony import */ var _CommonScripts_sharedscripts_sharedscripts_npcommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./Yesplan/resources/reactjs-components/CommonScripts/sharedscripts/sharedscripts-npcommon.js\");\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/* eslint-disable no-unused-vars, func-names */\n/* global permissions */\n/* NextPlan - Floating finders\n *\n * Copyright (c) 2011\t2Rivers NV\n * All rights reserved\n */\n\n\n/* maxMatches is the maximum number of resources to start showing interactively */\nvar maxInteractiveMatches = 50;\nvar maxMatches = 500;\nvar resourcePath = '/resources';\n\n// holds data and callbacks for the different floating finders\nvar finders = [];\nvar currentRegExps = [];\nfinders.tasksFinder = {};\nfinders.resourceFinder = {};\n/* labels in these arrays: */\n// queryCallback - callback function for complex queries\n// buildFinderContextMenu - function to activate the context menu\n// inplaceeditcallbacks - in-place edit callbacks per column\n// inplaceeditconfigs - in-place edit configs per column\n// entities - is an array of objects. Each object is an entity to display in the table */\n// matches - matches are kept in a var so we can redisplay the table when needed\n// setsToOpenAfterSearch - keep ids of sets to re-open after redisplay of the table\n// sortInstanceUpCallback -  function to sort an instance upward (resource finder specific)\n// sortInstanceDownCallback - function to sort an instance downward (resource finder specific)\n// addToBasket - function to add an item to the basket (resource finder specific)\n// idsWithConflicts - ids for which a conflict must be displayed (resource finder specific - in manager mode only)\n// finderMode - keeps the mode the finder is in (resource finder specific)\n// searchKeys - keys to search on\n// svgResourceUrl - the url needed for fetching svg icons\n\n// Triggered when a new query is entered\nvar complexQueryRegExp = /[\\\"\\+\\-\\(\\)\\:]/;\nvar currentProcess;\nfunction finderQueryChanged(searchId, data, closeOpenSets, interactive) {\n  $(searchId).parent().find('.loading').show();\n  var query = $(searchId).val();\n  clearTimeout(currentProcess);\n  var setsToOpen = [];\n  // if we should close the open sets after the search, start with a new array of ids of sets to open when displaying the table\n  if (closeOpenSets) {\n    data.setsToOpenAfterSearch = setsToOpen;\n  }\n  if (requiresQueryOnServer(data, query)) {\n    if (query === '') {\n      data.displayMessage('Too many matches... please refine query');\n      $(searchId).parent().find('.loading').hide();\n    } else {\n      data.queryCallback(query);\n    }\n  } else {\n    if ($('#status').hasClass('busy') && _.keys(data.entities).length === 0) {\n      setTimeout(function () {\n        finderQueryChanged(searchId, data, closeOpenSets, interactive);\n      }, 1000);\n      return;\n    }\n    var searchstrings = query.toLowerCase().split(' ');\n    currentRegExps = [];\n\n    // Create regexps for each search string\n    for (var i = 0; i < searchstrings.length; i++) {\n      if (searchstrings[i] !== '') {\n        try {\n          currentRegExps[i] = new RegExp(searchstrings[i], 'i');\n        } catch (err) {\n          data.displayMessage('Syntax error. ', err.message);\n          $(searchId).parent().find('.loading').hide();\n          return;\n        }\n      }\n    }\n    ;\n\n    // Search them!\n    data.matches = getEntitiesMatchingIn(currentRegExps, data.entities, data.searchKeys, setsToOpen);\n    if (interactive && data.matches.length > maxInteractiveMatches) {\n      return;\n    }\n    if (data.matches.length > maxMatches) {\n      data.displayMessage('Too many matches... please refine query');\n      $(searchId).parent().find('.loading').hide();\n      return;\n    }\n    // Special case: a search with an empty query should never open sets... (also only do this when required to close open sets...)\n    if (closeOpenSets && searchstrings.length === 1 && searchstrings[0] === '') {\n      data.setsToOpenAfterSearch = [];\n    }\n\n    // display results\n    if (data.matches.length === 0) {\n      data.displayMessage('No matches found');\n    } else {\n      var html = '';\n      var entities = [];\n      for (var _i = 0; _i < data.matches.length; _i++) {\n        entities[_i] = buildFromJSON(data.matches[_i], currentRegExps);\n        html += entities[_i].tableRow(0, '', true);\n      }\n      data.displayTable(data.matches, html);\n    }\n    $(searchId).parent().find('.loading').hide();\n  }\n}\n\n// Should the query happen server side?\nfunction requiresQueryOnServer(data, query) {\n  return data.queryOnServer || _.any(query, function (e) {\n    return complexQueryRegExp.test(e);\n  });\n}\n\n// Triggered for interactive refinement\nfunction finderQueryChangedInteractive(ev, searchId, data, closeOpenSets) {\n  clearTimeout(currentProcess);\n  var value = $(searchId).val();\n\n  // start updating interactively after more than 2 chars\n  if (value.length > 3 && !requiresQueryOnServer(data, value)) {\n    currentProcess = setTimeout(finderQueryChanged, 300, searchId, data, closeOpenSets, true);\n  }\n}\n\n// Retrieves the matching resources\nfunction getEntitiesMatchingIn(regexps, dict, searchKeys, setsToOpenAfterSearch) {\n  var filtered = [];\n  var amount = regexps.length;\n\n  // For each entity, see if it matches the query\n  _.each(dict, function (object, key) {\n    var matchesAll = true;\n\n    // Matching the query means matching all words in the query\n    for (var k = 0; k < amount; k++) {\n      var found = false;\n      // Matching a word means having a field that matches the word\n      for (var s = 0; s < searchKeys.length; s++) {\n        if (searchKeys[s] in object && object[searchKeys[s]].search(regexps[k]) != -1) {\n          found = true;\n          break;\n        }\n      }\n      if (!found && isSet(object)) {\n        if (getEntitiesMatchingIn([regexps[k]], object.children, searchKeys, setsToOpenAfterSearch).length != 0) {\n          found = true;\n          setsToOpenAfterSearch.push(object.id);\n        }\n      }\n      matchesAll = matchesAll && found;\n    }\n    if (matchesAll) {\n      filtered.push(object);\n    }\n  });\n  return filtered;\n}\nfunction displayQueryResultIn(message, ids, data) {\n  data.matches = [];\n  data.setsToOpenAfterSearch = [];\n  if (message !== '') {\n    data.displayMessage(message);\n  } else {\n    for (var i in ids) {\n      data.matches.push(data.entities[ids[i]]);\n    }\n\n    // display results\n    var html = '';\n    var entities = [];\n    for (var _i2 = 0; _i2 < data.matches.length; _i2++) {\n      entities[_i2] = buildFromJSON(data.matches[_i2], currentRegExps);\n      if (isSet(entities[_i2])) {\n        data.setsToOpenAfterSearch.push(entities[_i2].id);\n      }\n      html += entities[_i2].tableRow(0, '', true);\n    }\n    data.displayTable(data.matches, html);\n  }\n  $('.loading').hide();\n}\n\n// Function to render an SVG icon\nfunction svgIcon(iconClassName, resourceUrl) {\n  return \"<span title=\\\"\\\" class=\\\"svg-icon svg-icon--16 u-vertical-align-text-bottom svg-icon--black\\\">\\t\\t<svg class=\\\"svg-icon-\".concat(iconClassName, \"\\\">\\t\\t<use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\").concat(resourceUrl, \"#\").concat(iconClassName, \"\\\"></use>\\t\\t</svg></span>\");\n}\n\n// Function to add entities incrementally to the entities for a finder\nfunction addEntities(finder, bodyId, entities, silent) {\n  var dict = finder.entities;\n  var table = $(\"#\".concat(bodyId)).parent();\n  for (var key in entities) {\n    dict[key] = entities[key]; // replace the entity in our local db\n    if (!silent) {\n      var renderObject = buildFromJSON(dict[key], currentRegExps); // create the object to render it\n      if (renderObject.myScope != undefined) {\n        $(\".\".concat(renderObject.myScope())).remove();\n      } // remove all containing items (when applicable)\n      var toplevelexisting = $(\"[objectid=\".concat(key, \"]\")).not('.setitem'); // replace only toplevel items\n      if (toplevelexisting.length == 0) {\n        $(\"#\".concat(bodyId)).append(renderObject.tableRow(0, '', true));\n      } else {\n        toplevelexisting.not('.singleton,.setitem').replaceWith(renderObject.tableRow(0, '', true));\n      }\n    }\n  }\n}\n\n// Function to remove entities incrementally from a finder\nfunction removeEntities(finder, ids, silent) {\n  for (var i in ids) {\n    delete finder.entities[ids[i]];\n    if (!silent) {\n      $(\"[objectid=\".concat(ids[i], \"]\")).remove();\n      $(\"[insetid=\".concat(ids[i], \"]\")).remove();\n    }\n  }\n}\n\n// Function to delete all entities from the finder\nfunction clearEntities(finder) {\n  finder.entities = {};\n}\n\n// Function that triggers the necessary updates on the table for context menu and sorter\nfunction triggerFinderUpdates(finder, bodyId) {\n  if (finder.buildFinderContextMenu !== undefined) {\n    finder.buildFinderContextMenu($(\"#\".concat(bodyId, \" tr\")));\n  }\n  $(\"#\".concat(bodyId)).on('click', clickRow);\n  var table = $(\"#\".concat(bodyId)).parent();\n  table.trigger('update');\n}\n\n/** **********\n FinderEntity\n *********** */\n\n// Object creation\nfunction buildFromJSON(object, myregexps) {\n  if (myregexps.length === 0) {\n    myregexps = [];\n    myregexps.push(new RegExp('', 'i'));\n  }\n  var clazz = eval(object._classname);\n  var obj = new clazz(object, myregexps);\n  if (obj.children !== undefined) {\n    obj.children = _.map(obj.children, function (child, key) {\n      return buildFromJSON(child, myregexps);\n    });\n  }\n  return obj;\n}\nvar FinderEntity = /*#__PURE__*/function () {\n  function FinderEntity(obj, myregexps) {\n    _classCallCheck(this, FinderEntity);\n    // copy the entity\n    for (var key in obj) {\n      var el = obj[key];\n      if (key !== 'id' && typeof obj[key] === 'string') {\n        el = encodeString(el);\n      }\n      for (var i = 0; i < myregexps.length; i++) {\n        if (key[0] !== '_' && key !== 'id' && key !== 'email' && typeof obj[key] === 'string' && myregexps[i].source !== '(?:)' && myregexps[i].source !== '') {\n          this[key] = el.replace(myregexps[i], '<em>$&</em>');\n        } else if (obj[key] != null && _typeof(obj[key]) === 'object')\n          // shallow copy arrays!\n          {\n            this[key] = _.clone(el);\n          } // still needed?\n        else {\n          this[key] = el;\n        }\n      }\n    }\n  }\n  _createClass(FinderEntity, [{\n    key: \"visibilityMarkup\",\n    value: function visibilityMarkup(token) {\n      var display;\n      if (this.visibleTableColumns().indexOf(token) === -1) {\n        display = 'none';\n      } else {\n        display = 'default';\n      }\n      return \"class=\\\"column-\".concat(token, \"\\\" style=\\\"display:\").concat(display, \"\\\"\");\n    }\n\n    // Display the property in a td with markup for visibility added\n  }, {\n    key: \"simpleTableDataFor\",\n    value: function simpleTableDataFor(property) {\n      if (this[property] === undefined) {\n        return \"<td \".concat(this.visibilityMarkup(property), \" columnKey=\\\"\").concat(property, \"\\\"></td>\");\n      } else {\n        var propertyValue = this[property];\n        switch (property) {\n          case 'email':\n            propertyValue = propertyValue.link(\"mailto:\".concat(propertyValue));\n            break;\n          case 'website':\n            propertyValue = \"<a target=\\\"_blank\\\" href=\\\"\".concat(propertyValue.addhttp(), \"\\\">\").concat(propertyValue, \"</a>\");\n            break;\n        }\n        return \"<td \".concat(this.visibilityMarkup(property), \" columnKey=\\\"\").concat(property, \"\\\">\").concat(propertyValue, \"</td>\");\n      }\n    }\n  }, {\n    key: \"checkboxTableData\",\n    value: function checkboxTableData() {\n      return '<td class=\"select-col\"><input type=\"checkbox\"></td>';\n    }\n  }]);\n  return FinderEntity;\n}();\nvar AbstractResource = /*#__PURE__*/function (_FinderEntity) {\n  _inherits(AbstractResource, _FinderEntity);\n  var _super = _createSuper(AbstractResource);\n  function AbstractResource() {\n    _classCallCheck(this, AbstractResource);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AbstractResource, [{\n    key: \"visibleTableColumns\",\n    value: function visibleTableColumns() {\n      return AbstractResource.visibleTableColumns;\n    }\n  }, {\n    key: \"getPermissions\",\n    value: function getPermissions() {\n      // Returns the permissions for an entity\n      var perms = this.permissions;\n      if (isFinderUnlocked()) {\n        perms.push('unlocked');\n      }\n      return perms;\n    }\n  }, {\n    key: \"abstractCssClasses\",\n    value: function abstractCssClasses(level) {\n      var result = '';\n      if (this.amount > 1) {\n        result += 'multiple';\n      }\n      if (level > 0) {\n        result += \" expand-child setitem sub\".concat(level);\n      }\n      return result;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return this.abstractCssClasses(level);\n    }\n  }, {\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      return false;\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      var result = '';\n      if (finders.resourceFinder.finderMode === 'listing') {\n        result += ' planned';\n        if (isConflictId(this.id)) {\n          result += ' conflict';\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"serializedId\",\n    value: function serializedId(sep) {\n      return serializedIdOf(this, sep);\n    }\n  }, {\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      // setting the right css classes for the row\n      // The setscope is a set of classes that depends on the sets we are (visually) located in. It allows us to remove this row if the set is closed!\n      var classes = \"\".concat(setscope, \" \").concat(this.cssClasses(level));\n      var style = '';\n      if (!visible) {\n        style = 'style=\"display:none\"';\n      }\n\n      // Generate the table row\n      var html = \"<tr \".concat(style, \" cMenu=\\\"finderMenu\\\" class=\\\"\").concat(classes, \"\\\" permissions=\\\"\").concat(toSource(this.getPermissions()), \"\\\" objectid=\\\"\").concat(this.serializedId(','), \"\\\" insetid=\\\"\").concat(this.setid, \"\\\">\");\n      // html += this.checkboxTableData();\n      html += this.nameTableData(level, setscope);\n      html += this.amountTableData(level);\n      for (var i = 0; i < AbstractResource.switchableTableColumns.length; i++) {\n        html += this.simpleTableDataFor(AbstractResource.switchableTableColumns[i]);\n      }\n      html += this.timelineTableData();\n      return \"\".concat(html, \"</tr>\");\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      var html = '';\n\n      // If we are in finder mode, we can add things to the basket using this link\n      if (finders.resourceFinder.finderMode === 'finder' && this.permissions.indexOf('use') !== -1) {\n        html += \"<a href=\\\"javascript:{}\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.finders.resourceFinder.addToBasket('\".concat(this.id, \"',ReactComponents_resourceandtaskfinder.getCurrentRole('\").concat(this.id, \"'))\\\" class=\\\"add\\\"><span id=\\\"R\").concat(this.id, \"\\\">\").concat(this.name, \"</span></a>\");\n        // If we have roles to show, show them.\n        if (this.type === 'Human' && this.defaultrole !== undefined && this.roles.length > 0 && !this.hasPlaceholders()) {\n          html += \" <span class=\\\"role\\\">(<span href=\\\"javascript:{}\\\" onclick=\\\"openRoleSelector('\".concat(this.id, \"')\\\" title=\\\"change role\\\">\").concat(this.defaultrole, \"</span>)</span>\");\n        }\n      } else {\n        html += \"<span id=\\\"R\".concat(this.id, \"\\\">\").concat(this.name, \"</span>\");\n      }\n      html += '</td>';\n      return html;\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td id=\\\"\".concat(this.myScope(), \"\\\" class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\").concat(this.amount, \"</span></td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      var inset = '';\n      if (this.setid !== undefined) {\n        inset = \"inset=\\\"\".concat(this.setid, \"\\\"\");\n      }\n      return \"<td timeline=\\\"\".concat(this.serializedId('_'), \"\\\" \").concat(inset, \" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }], [{\n    key: \"displayTable\",\n    value:\n    // Display a table with resulting entities and the words matching the regexps highlighted\n    function displayTable(entities, html) {\n      $('#finderTableBody').html(html).on('click', clickRow);\n\n      // Sets context menu\n      finders.resourceFinder.buildFinderContextMenu($('#finderTableBody'));\n\n      // In listing mode, we show the timelines again after a search\n      if (finders.resourceFinder.finderMode === 'listing') {\n        refreshOpenTimelines();\n      }\n      if (finders.resourceFinder.finderMode === 'finder' || finders.resourceFinder.finderMode === 'external') {\n        hideTimelines();\n        // Tick resources that are in the basket\n        tickResourcesInBasket();\n      }\n\n      // Create draggables\n      if (finders.resourceFinder.allowDragging) {\n        for (var i = 0; i < entities.length; i++) {\n          if (entities[i].permissions.indexOf('use') !== -1) {\n            createDraggable(entities[i]);\n          }\n        }\n      }\n\n      // trigger the update of the sorter cache (required!)\n      $('#finderTable').trigger('update');\n    }\n  }, {\n    key: \"displayMessage\",\n    value: function displayMessage(aString) {\n      $('#finderTableBody').html(\"<tr><td colspan=\\\"\".concat(AbstractResource.visibleTableColumns.length + 3, \"\\\">\").concat(aString, \"</td></tr>\"));\n    }\n  }, {\n    key: \"displayInitialTable\",\n    value: function displayInitialTable() {\n      $('#finderTableBody').html('');\n    }\n  }]);\n  return AbstractResource;\n}(FinderEntity);\n_defineProperty(AbstractResource, \"switchableTableColumns\", ['type', 'group', 'roles', 'serial', 'productcode', 'date', 'cost', 'price', 'rosterpublisheduntil']);\n_defineProperty(AbstractResource, \"visibleTableColumns\", null);\nfunction openRoleSelector(id) {\n  $(\"[objectid=\".concat(id, \"] .role span\")).editable(finders.resourceFinder.inplaceeditcallbacks.role, finders.resourceFinder.inplaceeditconfigs.role).editable('enable');\n}\nfunction getCurrentRole(id) {\n  return $(\"[objectid=\".concat(id, \"] .role span\")).html();\n}\nfunction getCurrentRoleInSE(id) {\n  // in SE, we use an id that starts with R...\n  return $(\"[objectid=\".concat(id.substring(1, id.size), \"] .role span\")).html();\n}\nvar Resource = /*#__PURE__*/function (_AbstractResource) {\n  _inherits(Resource, _AbstractResource);\n  var _super2 = _createSuper(Resource);\n  function Resource() {\n    _classCallCheck(this, Resource);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(Resource, [{\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      var html = _get(_getPrototypeOf(Resource.prototype), \"tableRow\", this).call(this, level, setscope, visible);\n      if (this.amount > 1) {\n        for (var i = 0; i < this.children.length; i++) {\n          html += this.children[i].tableRow(level, \"\".concat(setscope, \" \").concat(this.myScope()), false);\n        }\n      }\n      return html;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      var cssClasses = _get(_getPrototypeOf(Resource.prototype), \"abstractCssClasses\", this).call(this, level);\n      if (this.children.length === 1 && this.children[0].isInSet) {\n        cssClasses += ' fixed';\n      }\n      return cssClasses;\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\" columnKey=\\\"name\\\">\".concat(this.user ? svgIcon('icon-user', finders.resourceFinder.svgResourceUrl) : '').concat(this.suspendeduser ? svgIcon('icon-suspended-user', finders.resourceFinder.svgResourceUrl) : '').concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      if (this.children.length === 1 && this.children[0].isInSet) {\n        return \"<td class=\\\"amount\\\" title=\\\"Fixed in set \".concat(this.children[0].isInSet.replace('<em>', '').replace('</em>', ''), \"\\\">  Fixed \");\n      } // need to remove the <em> because that crashes xml page\n      else {\n        var resourceId = this.myScope();\n        var html = \"<td id=\\\"\".concat(resourceId, \"\\\" class=\\\"amount\\\" columnKey=\\\"amount\\\">\");\n\n        // A bulk resource with an unspecified amount or a human resource is not editable in-place\n        if (this.amount === '-' || this.type === 'Human') {\n          html += this.amount;\n        } else {\n          html += \"<span>\".concat(this.amount, \"</span>\");\n        }\n        if (this.hasOwnProperty('actualamount')) {\n          html += \" <span class=\\\"actual\\\">(\".concat(this.actualamount, \")</span>\");\n        }\n        if (this.children.length > 1) {\n          html += \"<a class=\\\"openme\\\" href=\\\"javascript:{}\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.toggleMultiple(this,'\".concat(resourceId, \"');event.stopPropagation()\\\" > </a></td>\");\n        } else {\n          html += '</td>';\n        }\n        return html;\n      }\n    }\n  }, {\n    key: \"myScope\",\n    value: function myScope() {\n      return \"resource\".concat(this.serializedId(''));\n    }\n  }]);\n  return Resource;\n}(AbstractResource);\nfunction toggleMultiple(el, resourceId) {\n  if ($(el).parent().parent().hasClass('open')) {\n    $(\".\".concat(resourceId)).hide();\n    $(el).parent().parent().removeClass('open');\n  } else {\n    refreshTimelineOfRows($(\".\".concat(resourceId)).show());\n    finders.resourceFinder.buildFinderContextMenu($(\".\".concat(resourceId)));\n    $(el).parent().parent().addClass('open');\n  }\n}\nvar ResourceInSet = /*#__PURE__*/function (_Resource) {\n  _inherits(ResourceInSet, _Resource);\n  var _super3 = _createSuper(ResourceInSet);\n  function ResourceInSet() {\n    _classCallCheck(this, ResourceInSet);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(ResourceInSet, [{\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\" columnKey=\\\"name\\\">\".concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n    }\n  }]);\n  return ResourceInSet;\n}(Resource);\nvar ExternalResource = /*#__PURE__*/function (_Resource2) {\n  _inherits(ExternalResource, _Resource2);\n  var _super4 = _createSuper(ExternalResource);\n  function ExternalResource() {\n    _classCallCheck(this, ExternalResource);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(ExternalResource, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"external \".concat(_get(_getPrototypeOf(ExternalResource.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return ExternalResource;\n}(Resource);\nvar AdHoc = /*#__PURE__*/function (_Resource3) {\n  _inherits(AdHoc, _Resource3);\n  var _super5 = _createSuper(AdHoc);\n  function AdHoc() {\n    _classCallCheck(this, AdHoc);\n    return _super5.apply(this, arguments);\n  }\n  _createClass(AdHoc, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"adhoc \".concat(_get(_getPrototypeOf(AdHoc.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return AdHoc;\n}(Resource);\nvar FinancialAdHoc = /*#__PURE__*/function (_Resource4) {\n  _inherits(FinancialAdHoc, _Resource4);\n  var _super6 = _createSuper(FinancialAdHoc);\n  function FinancialAdHoc() {\n    _classCallCheck(this, FinancialAdHoc);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(FinancialAdHoc, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"adhoc-financial \".concat(_get(_getPrototypeOf(FinancialAdHoc.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return FinancialAdHoc;\n}(Resource);\nvar PlaceHolder = /*#__PURE__*/function (_Resource5) {\n  _inherits(PlaceHolder, _Resource5);\n  var _super7 = _createSuper(PlaceHolder);\n  function PlaceHolder() {\n    _classCallCheck(this, PlaceHolder);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(PlaceHolder, [{\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      return true;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"placeholder \".concat(_get(_getPrototypeOf(PlaceHolder.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\">\".concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\">\".concat(this.amount, \"</td>\");\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      if (AbstractResource.finderMode === 'listing') {\n        return \"\".concat(Resource.prototype.timelineClasses.call(this), \" empty-box-conflict\");\n      } else {\n        return '';\n      }\n    }\n  }]);\n  return PlaceHolder;\n}(Resource);\nvar PlaceHolderInSet = /*#__PURE__*/function (_PlaceHolder) {\n  _inherits(PlaceHolderInSet, _PlaceHolder);\n  var _super8 = _createSuper(PlaceHolderInSet);\n  function PlaceHolderInSet() {\n    _classCallCheck(this, PlaceHolderInSet);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(PlaceHolderInSet, [{\n    key: \"getPermissions\",\n    value: function getPermissions() {\n      var perms = AbstractResource.prototype.getPermissions.call(this);\n      return perms.concat(['writeResource']);\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      return \"<td timeline=\\\"\".concat(this.id, \"\\\" inset=\\\"\").concat(this.setid, \"\\\" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }]);\n  return PlaceHolderInSet;\n}(PlaceHolder);\nvar ResourceInstance = /*#__PURE__*/function (_AbstractResource2) {\n  _inherits(ResourceInstance, _AbstractResource2);\n  var _super9 = _createSuper(ResourceInstance);\n  function ResourceInstance() {\n    _classCallCheck(this, ResourceInstance);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(ResourceInstance, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      if (this.isInSet) {\n        if (this.setid === undefined)\n          // in singleton list\n          {\n            return ' expand-child fixed';\n          } else {\n          return \"\".concat(_get(_getPrototypeOf(ResourceInstance.prototype), \"abstractCssClasses\", this).call(this, level), \" fixed\");\n        }\n      } else {\n        return 'expand-child singleton ';\n      }\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      // only display the name in a set (otherwise we are in the instances listing)\n      if (level > 0) {\n        return \"<td class=\\\"name\\\">\".concat(this.name, \"</td>\");\n      } else {\n        return '<td class=\"name\"></td>';\n      }\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData() {\n      var html;\n      if (this.isInSet) {\n        html = \"<td class=\\\"amount\\\" title=\\\"Fixed in set \".concat(this.isInSet.replace('<em>', '').replace('</em>', ''), \"\\\">  Fixed \");\n      } // need to remove the <em> because that crashes xml page\n      else {\n        html = \"<td class=\\\"amount\\\"> <span>#\".concat(this.preference, \"</span>\");\n        if (isFinderUnlocked() && _.indexOf(this.getPermissions(), 'write') !== -1) {\n          html += sortingActionsForId(this.id);\n        }\n      }\n      return \"\".concat(html, \"</td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      var insetattr = '';\n      if (this.setid !== undefined)\n        // if the inset attribute is set (ie. I am located inside the set here - not just displayed in the instances list)\n        {\n          insetattr = \"inset=\\\"\".concat(this.setid, \"\\\"\");\n        }\n      return \"<td timeline=\\\"\".concat(this.id, \"\\\" \").concat(insetattr, \" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }]);\n  return ResourceInstance;\n}(AbstractResource);\nvar ResourceSet = /*#__PURE__*/function (_AbstractResource3) {\n  _inherits(ResourceSet, _AbstractResource3);\n  var _super10 = _createSuper(ResourceSet);\n  function ResourceSet() {\n    _classCallCheck(this, ResourceSet);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(ResourceSet, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      var open = '';\n      if (this.contentsVisible()) {\n        open = 'open ';\n      }\n      return \"set \".concat(open).concat(_get(_getPrototypeOf(ResourceSet.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }, {\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      var has = false;\n      for (var i = 0; i < this.children.length; i++)\n      // have to make the objects here (did not work in constructor(yet))\n      {\n        has = has || this.children[i].hasPlaceholders();\n      }\n      return has;\n    }\n  }, {\n    key: \"contentsVisible\",\n    value: function contentsVisible() {\n      return finders.resourceFinder.setsToOpenAfterSearch.indexOf(this.serializedId('')) !== -1;\n    }\n  }, {\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      var html = AbstractResource.prototype.tableRow.call(this, level, setscope, visible);\n      var contentsVisible = this.contentsVisible();\n      for (var i = 0; i < this.children.length; i++) {\n        html += this.children[i].tableRow(level + 1, \"\".concat(setscope, \" \").concat(this.myScope()), contentsVisible);\n      }\n      return html;\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      // If the row represents a set, add the click link and register a function that will register the click when the row is generated\n      var myScope = this.myScope();\n      var html = \"<td id=\\\"\".concat(myScope, \"\\\" class=\\\"name\\\" columnkey=\\\"name\\\"><a class=\\\"openme show-set\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.toggleSet($(this),'\").concat(myScope, \"',\").concat(level, \");event.stopPropagation();\\\"> </a>\");\n      return html + AbstractResource.prototype.nameTableData.call(this, level, setscope);\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      if (finders.resourceFinder.finderMode === 'listing') {\n        return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n      } else if (this.setid == undefined) {\n        return '<td> - </td>';\n      } else {\n        return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n      }\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      if (finders.resourceFinder.finderMode === 'listing' && this.hasPlaceholders()) {\n        return \"\".concat(AbstractResource.prototype.timelineClasses.call(this), \" empty-box-conflict\");\n      } else {\n        return AbstractResource.prototype.timelineClasses.call(this);\n      }\n    }\n  }, {\n    key: \"myScope\",\n    value: function myScope() {\n      return \"set\".concat(this.id);\n    }\n  }]);\n  return ResourceSet;\n}(AbstractResource);\nfunction toggleSet(el, setId, level) {\n  if (el.parent().parent().hasClass('open')) {\n    // clicked on an open set or multiple\n    $(\".\".concat(setId)).hide().removeClass('open');\n    el.parent().parent().removeClass('open');\n  } else {\n    // clicked on a closed set or multiple\n    refreshTimelineOfRows($(\".\".concat(setId, \".sub\").concat(level + 1)).show());\n    finders.resourceFinder.buildFinderContextMenu($(\".\".concat(setId, \".sub\").concat(level + 1)));\n    el.parent().parent().addClass('open');\n  }\n}\n\n/** **********************\n Helper functions\n *********************** */\nvar htmlId = 0;\nfunction nextId() {\n  htmlId += 1;\n  return htmlId;\n}\nfunction sortingActionsForId(id) {\n  return \"<div><a href=\\\"javascript:{}\\\" class=\\\"sort-up\\\" onclick=\\\"sortInstanceUp('\".concat(id, \"',this);return false\\\">up</a> <a href=\\\"javascript:{}\\\" class=\\\"sort-down\\\" onclick=\\\"sortInstanceDown('\").concat(id, \"',this);return false\\\">down</a></div>\");\n}\nfunction isSet(anArray) {\n  return 'children' in anArray;\n}\nfunction isFinderUnlocked() {\n  return $('#finderlock').hasClass('unlocked');\n}\n\n// Function called by server-side when it refreshes the table after an operation\nfunction archiveOpenSets(data) {\n  data.setsToOpenAfterSearch = new Array();\n  $('.set.open,.multiple.open').each(function () {\n    data.setsToOpenAfterSearch.unshift($(this).attr('objectid'));\n  });\n}\n\n// Function to be used to open sets when rendering happens server-side\nfunction expandOpenSets(data) {\n  $(data.setsToOpenAfterSearch).each(function () {\n    $(\"[objectid=\".concat(this, \"]\")).not('.open').find('.show-set').trigger('click');\n  });\n}\n\n// Function to be used to open sets when rendering happens server-side\nfunction addOpenSets(data, newSets) {\n  data.setsToOpenAfterSearch = _.uniq(data.setsToOpenAfterSearch.concat(newSets));\n}\n\n// the following function implements the Mozilla-like toSource() method only for arrays with strings\n// because toSource() does not exist outside firefox\nfunction toSource(anArray) {\n  // replace with anArray.toSource() if everyone decides to implement this mozilla-specific method\n  return \"['\".concat($.map(anArray, function (each) {\n    return each.toString();\n  }).join('\\',\\''), \"']\");\n}\nfunction serializedIdOf(anObject, sep) {\n  if (_typeof(anObject.id) === 'object') {\n    return anObject.id.join(sep);\n  } else {\n    return \"\".concat(anObject.id);\n  } // make sure it's a string!;\n}\n\n/** **********************\n Context menu\n *********************** */\n\n// Permissions of the menu\nfunction setContextMenuPermissionInFinder(focusElement) {\n  var allPermissions = $(focusElement).map(function (i, el) {\n    return eval($(el).attr('permissions'));\n  });\n  var currentmenuClass = $(focusElement).attr('cmenu');\n\n  // disable all menu items that have a permission entry\n  $(\"#\".concat(currentmenuClass, \" li [permissions]\")).attr('isdisable', 'true');\n  // for each such menu item, check if all its required permissions are in our currently given permissions\n  $(\"#\".concat(currentmenuClass, \" li a[permissions]\")).not('.disabled').each(function () {\n    var myPerms = eval($(this).attr('permissions'));\n    // make the intersection of the required and given permissions to see if all required permissions are given\n    if (_.intersection(myPerms, allPermissions).length === myPerms.length) {\n      $(this).removeAttr('isdisable');\n    }\n  });\n}\n\n/** **********************\n Sort operations for resource instances\n *********************** */\n\nfunction sortInstanceUp(id, aEl) {\n  var rowEl = $(aEl).closest('tr');\n  // If we can move up...\n  if (rowEl.prev().hasClass('singleton')) {\n    // First swap the numbers\n    var temp = $(aEl).parent().parent().children('span').clone(true);\n    $(aEl).parent().parent().children('span').replaceWith(rowEl.prev().find('.amount span').clone(true));\n    rowEl.prev().find('.amount span').replaceWith(temp);\n\n    // Swap the rows and make the callback to server\n    rowEl.clone(true).insertBefore(rowEl.prev());\n    rowEl.remove();\n    finders.resourceFinder.sortInstanceUpCallback(id);\n  }\n}\nfunction sortInstanceDown(id, aEl) {\n  var rowEl = $(aEl).closest('tr');\n  if (rowEl.next().hasClass('singleton')) {\n    // First swap the numbers\n    var temp = $(aEl).parent().parent().children('span').clone(true);\n    $(aEl).parent().parent().children('span').replaceWith(rowEl.next().find('.amount span').clone(true));\n    rowEl.next().find('.amount span').replaceWith(temp);\n\n    // Swap the rows and make the callback to server\n    rowEl.clone(true).insertAfter(rowEl.next());\n    rowEl.remove();\n    finders.resourceFinder.sortInstanceDownCallback(id);\n  }\n}\n\n// variable that will contain a function to callback to the server (set by an onload script)\n__webpack_require__.g.getAvailabilityTimelinesFor = null;\n\n// trigger the update of the availability timelines\nfunction refreshTimelineOfRows(rows) {\n  if ($('#availabilityButton:visible').length === 0) {\n    rows.children('td[timeline]').html(\"<img src=\\\"\".concat(resourcePath, \"/images/ajax-loader.gif\\\"/>\"));\n    __webpack_require__.g.getAvailabilityTimelinesFor(rows.map(function () {\n      return this.getAttribute('objectid');\n    }).toArray().join(';'), rows.map(function () {\n      return this.getAttribute('insetid');\n    }).toArray().join(','));\n  }\n}\nfunction refreshOpenTimelines() {\n  if ($('#availabilityButton:visible').length === 0) {\n    $('.resolving').parent().remove();\n    var all = $('td[timeline]:visible');\n    if (all.length < 100) {\n      all.html(\"<img src=\\\"\".concat(resourcePath, \"/images/ajax-loader.gif\\\"/>\"));\n      __webpack_require__.g.getAvailabilityTimelinesFor($.map(all, function (each) {\n        return $(each).attr('timeline');\n      }).join(';'), $.map(all, function (each) {\n        if ($(each).attr('inset') != undefined) return $(each).attr('inset');else return 'null';\n      }).join(','));\n    } else {\n      hideTimelines();\n    }\n  }\n}\n\n// Hides the timelines\nfunction hideTimelines() {\n  $('#availabilityButton').show();\n  $('#timelineHeaderInFinder').hide();\n}\nfunction isConflictId(id) {\n  return finders.resourceFinder.idsWithConflicts.indexOf(id) !== -1;\n}\n\n// Locking and unlocking the table\nfunction unlockTable(id) {\n  // unlocking\n  $(\"#\".concat(id, \" tr[permissions]\")).each(function () {\n    var perms = eval($(this).attr('permissions'));\n    perms.push('unlocked');\n    $(this).attr('permissions', toSource(perms));\n  });\n  // adding the singleton in-place movement -- should only happen in resource finder!\n  $('.singleton[permissions*=write]').not('.contact-singleton').each(function () {\n    $(this).children('.amount').append(sortingActionsForId($(this).attr('objectid')));\n  });\n  // adding the in-place edits\n  // addInPlaceEdits();\n}\n\nfunction lockTable(id) {\n  // locking\n  $(\"#\".concat(id, \" tr[permissions]\")).each(function () {\n    $(this).attr('permissions', toSource(_.without(eval($(this).attr('permissions')), 'unlocked')));\n  });\n  // removing the singleton in-place movement\n  $('.singleton .amount a').remove();\n  // removing the inplace edits\n  $(\"#\".concat(id, \" .name span\")).off('click');\n}\n\n/** ****************************\n Generic row selection functions\n ****************************** */\nfunction clickRow(event) {\n  if (event.originalEvent == null) return; // jQuery-generated events in Chrome that are triggered on the set-open anchor still propagate to this handler, which is wrong wrong wrong...\n  var theRow = $(event.originalEvent.target).closest('tr');\n  var multiSelect = theRow.hasClass('ui-selected') || (0,_CommonScripts_sharedscripts_sharedscripts_npcommon__WEBPACK_IMPORTED_MODULE_0__.hasMetaKey)(event);\n  if (!multiSelect) {\n    $('.ui-selected').each(function () {\n      unselectRow(event, theRow);\n    }).removeClass('ui-selected').find('.select-col [type=checkbox]').attr('checked', false);\n  }\n  theRow.addClass('ui-selected').find('.select-col [type=checkbox]').attr('checked', true);\n  selectRow(event, theRow);\n}\nfunction selectRow(event, row) {\n  // The target of the click event (and the edit) must be a span\n  var theTarget = $(event.originalEvent.target).closest('span');\n  var theColumnKey = $(theTarget).closest('[columnKey]').attr('columnKey'); // need to start from span to allow multi-value columns\n  var theTd = theTarget.closest('td');\n  var finderId = theTd.closest('div').parent().attr('id');\n  // We can write if the column does not have a 'noedit' class and if the row is writable and ready for edit\n  var canWrite = !theTd.hasClass('noedit') && theTd.closest('tr').filter('.editready').filter('[permissions*=write]').length === 1 && finders[finderId].inplaceeditcallbacks[theColumnKey] !== undefined;\n  // Also verify the writer lock\n  var finderLock = theTd.closest('div').parent().find('.lock.dev-finderlock');\n  var finderHasLock = finderLock.length === 1;\n  var finderIsLocked = !finderLock.hasClass('unlocked');\n\n  // If the finder has a lock that is locked, we do nothing\n  if (finderHasLock && finderIsLocked) {\n    return;\n  }\n\n  // If we can write, set the editable. If not, we prepare the row for editing (this ensures a double click is needed).\n  if (canWrite) {\n    theTarget.editable(finders[finderId].inplaceeditcallbacks[theColumnKey], finders[finderId].inplaceeditconfigs[theColumnKey]).editable('enable');\n  } else {\n    theTd.closest('tr').addClass('editready');\n  }\n}\nfunction unselectRow(event, row) {\n  row.removeClass('editready').editable('disable');\n}\n\n// Function to toggle the basket\nfunction toggleBasket() {\n  $('#finderbasket').slideToggle(50).removeClass('automaticOpen');\n}\n\n// Adds a tick image to the resources in the table which are already in the basket\nfunction tickResourcesInBasket() {\n  var resourceIdsInBasket = $('#finderbasket li').map(function (i, el) {\n    return $(el).attr('inBasket');\n  });\n  var tickedResourceIds = $('#finderTable .name.added').map(function (i, el) {\n    return $(el).parent().attr('objectid');\n  });\n\n  // Remove the ticks for resources that are not in the basket\n  for (var i = 0; i < tickedResourceIds.length; i++) {\n    if (jQuery.inArray(tickedResourceIds[i], resourceIdsInBasket) === -1) {\n      $('#finderTable tr').filter(\"[objectid=\".concat(tickedResourceIds[i], \"]\")).children('.name').removeClass('added');\n    }\n  }\n\n  // Add a tick for all resources in the basket\n  for (var _i3 = 0; _i3 < resourceIdsInBasket.length; _i3++) {\n    $('#finderTable tr').filter(\"[objectid=\".concat(resourceIdsInBasket[_i3], \"]\")).children('.name').addClass('added');\n  }\n}\n\n// function to ensure that special chars are correctly encoded (on xml page)\nfunction encodeString(aString) {\n  return $('<span/>').text(aString).html();\n}\n\n// some fixed items for the finders data\nfinders.resourceFinder.displayTable = AbstractResource.displayTable;\nfinders.resourceFinder.displayMessage = AbstractResource.displayMessage;\nfinders.resourceFinder.displayInitialTable = AbstractResource.displayInitialTable;\nfinders.resourceFinder.entities = {};\nfinders.resourceFinder.queryOnServer = false;\nfinders.resourceFinder.setsToOpenAfterSearch = [];\nfinders.resourceFinder.searchKeys = ['name', 'type', 'roles', 'group', 'serial', 'productcode', 'date'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ZZXNwbGFuL3Jlc291cmNlcy9yZWFjdGpzLWNvbXBvbmVudHMvZmluZGVycy9yZXNvdXJjZWZpbmRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBSUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUlBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBMkNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUE1SUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUEwR0E7QUFqSkE7QUFtSkE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUlBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWFjdENvbXBvbmVudHNfLy4vWWVzcGxhbi9yZXNvdXJjZXMvcmVhY3Rqcy1jb21wb25lbnRzL2ZpbmRlcnMvcmVzb3VyY2VmaW5kZXIuanM/N2U5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycywgZnVuYy1uYW1lcyAqL1xuLyogZ2xvYmFsIHBlcm1pc3Npb25zICovXG4vKiBOZXh0UGxhbiAtIEZsb2F0aW5nIGZpbmRlcnNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTFcdDJSaXZlcnMgTlZcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWRcbiAqL1xuaW1wb3J0IHtoYXNNZXRhS2V5fSBmcm9tICcuLi9Db21tb25TY3JpcHRzL3NoYXJlZHNjcmlwdHMvc2hhcmVkc2NyaXB0cy1ucGNvbW1vbic7XG5cbi8qIG1heE1hdGNoZXMgaXMgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlc291cmNlcyB0byBzdGFydCBzaG93aW5nIGludGVyYWN0aXZlbHkgKi9cbmNvbnN0IG1heEludGVyYWN0aXZlTWF0Y2hlcyA9IDUwO1xuY29uc3QgbWF4TWF0Y2hlcyA9IDUwMDtcbmNvbnN0IHJlc291cmNlUGF0aCA9ICcvcmVzb3VyY2VzJztcblxuLy8gaG9sZHMgZGF0YSBhbmQgY2FsbGJhY2tzIGZvciB0aGUgZGlmZmVyZW50IGZsb2F0aW5nIGZpbmRlcnNcbmV4cG9ydCBjb25zdCBmaW5kZXJzID0gW107XG5sZXQgY3VycmVudFJlZ0V4cHMgPSBbXTtcbmZpbmRlcnMudGFza3NGaW5kZXIgPSB7fTtcbmZpbmRlcnMucmVzb3VyY2VGaW5kZXIgPSB7fTtcbi8qIGxhYmVscyBpbiB0aGVzZSBhcnJheXM6ICovXG4vLyBxdWVyeUNhbGxiYWNrIC0gY2FsbGJhY2sgZnVuY3Rpb24gZm9yIGNvbXBsZXggcXVlcmllc1xuLy8gYnVpbGRGaW5kZXJDb250ZXh0TWVudSAtIGZ1bmN0aW9uIHRvIGFjdGl2YXRlIHRoZSBjb250ZXh0IG1lbnVcbi8vIGlucGxhY2VlZGl0Y2FsbGJhY2tzIC0gaW4tcGxhY2UgZWRpdCBjYWxsYmFja3MgcGVyIGNvbHVtblxuLy8gaW5wbGFjZWVkaXRjb25maWdzIC0gaW4tcGxhY2UgZWRpdCBjb25maWdzIHBlciBjb2x1bW5cbi8vIGVudGl0aWVzIC0gaXMgYW4gYXJyYXkgb2Ygb2JqZWN0cy4gRWFjaCBvYmplY3QgaXMgYW4gZW50aXR5IHRvIGRpc3BsYXkgaW4gdGhlIHRhYmxlICovXG4vLyBtYXRjaGVzIC0gbWF0Y2hlcyBhcmUga2VwdCBpbiBhIHZhciBzbyB3ZSBjYW4gcmVkaXNwbGF5IHRoZSB0YWJsZSB3aGVuIG5lZWRlZFxuLy8gc2V0c1RvT3BlbkFmdGVyU2VhcmNoIC0ga2VlcCBpZHMgb2Ygc2V0cyB0byByZS1vcGVuIGFmdGVyIHJlZGlzcGxheSBvZiB0aGUgdGFibGVcbi8vIHNvcnRJbnN0YW5jZVVwQ2FsbGJhY2sgLSAgZnVuY3Rpb24gdG8gc29ydCBhbiBpbnN0YW5jZSB1cHdhcmQgKHJlc291cmNlIGZpbmRlciBzcGVjaWZpYylcbi8vIHNvcnRJbnN0YW5jZURvd25DYWxsYmFjayAtIGZ1bmN0aW9uIHRvIHNvcnQgYW4gaW5zdGFuY2UgZG93bndhcmQgKHJlc291cmNlIGZpbmRlciBzcGVjaWZpYylcbi8vIGFkZFRvQmFza2V0IC0gZnVuY3Rpb24gdG8gYWRkIGFuIGl0ZW0gdG8gdGhlIGJhc2tldCAocmVzb3VyY2UgZmluZGVyIHNwZWNpZmljKVxuLy8gaWRzV2l0aENvbmZsaWN0cyAtIGlkcyBmb3Igd2hpY2ggYSBjb25mbGljdCBtdXN0IGJlIGRpc3BsYXllZCAocmVzb3VyY2UgZmluZGVyIHNwZWNpZmljIC0gaW4gbWFuYWdlciBtb2RlIG9ubHkpXG4vLyBmaW5kZXJNb2RlIC0ga2VlcHMgdGhlIG1vZGUgdGhlIGZpbmRlciBpcyBpbiAocmVzb3VyY2UgZmluZGVyIHNwZWNpZmljKVxuLy8gc2VhcmNoS2V5cyAtIGtleXMgdG8gc2VhcmNoIG9uXG4vLyBzdmdSZXNvdXJjZVVybCAtIHRoZSB1cmwgbmVlZGVkIGZvciBmZXRjaGluZyBzdmcgaWNvbnNcblxuLy8gVHJpZ2dlcmVkIHdoZW4gYSBuZXcgcXVlcnkgaXMgZW50ZXJlZFxuY29uc3QgY29tcGxleFF1ZXJ5UmVnRXhwID0gL1tcXFwiXFwrXFwtXFwoXFwpXFw6XS87XG5sZXQgY3VycmVudFByb2Nlc3M7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaW5kZXJRdWVyeUNoYW5nZWQoc2VhcmNoSWQsIGRhdGEsIGNsb3NlT3BlblNldHMsIGludGVyYWN0aXZlKSB7XG4gICQoc2VhcmNoSWQpLnBhcmVudCgpLmZpbmQoJy5sb2FkaW5nJykuc2hvdygpO1xuICBjb25zdCBxdWVyeSA9ICQoc2VhcmNoSWQpLnZhbCgpO1xuXG4gIGNsZWFyVGltZW91dChjdXJyZW50UHJvY2Vzcyk7XG4gIGNvbnN0IHNldHNUb09wZW4gPSBbXTtcbiAgLy8gaWYgd2Ugc2hvdWxkIGNsb3NlIHRoZSBvcGVuIHNldHMgYWZ0ZXIgdGhlIHNlYXJjaCwgc3RhcnQgd2l0aCBhIG5ldyBhcnJheSBvZiBpZHMgb2Ygc2V0cyB0byBvcGVuIHdoZW4gZGlzcGxheWluZyB0aGUgdGFibGVcbiAgaWYgKGNsb3NlT3BlblNldHMpIHtcbiAgICBkYXRhLnNldHNUb09wZW5BZnRlclNlYXJjaCA9IHNldHNUb09wZW47XG4gIH1cblxuICBpZiAocmVxdWlyZXNRdWVyeU9uU2VydmVyKGRhdGEsIHF1ZXJ5KSkge1xuICAgIGlmIChxdWVyeSA9PT0gJycpIHtcbiAgICAgIGRhdGEuZGlzcGxheU1lc3NhZ2UoJ1RvbyBtYW55IG1hdGNoZXMuLi4gcGxlYXNlIHJlZmluZSBxdWVyeScpO1xuICAgICAgJChzZWFyY2hJZCkucGFyZW50KCkuZmluZCgnLmxvYWRpbmcnKS5oaWRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEucXVlcnlDYWxsYmFjayhxdWVyeSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmICgkKCcjc3RhdHVzJykuaGFzQ2xhc3MoJ2J1c3knKSAmJiAoXy5rZXlzKGRhdGEuZW50aXRpZXMpLmxlbmd0aCA9PT0gMCkpIHtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGZpbmRlclF1ZXJ5Q2hhbmdlZChzZWFyY2hJZCwgZGF0YSwgY2xvc2VPcGVuU2V0cywgaW50ZXJhY3RpdmUpO1xuICAgICAgfSwgMTAwMCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHNlYXJjaHN0cmluZ3MgPSBxdWVyeS50b0xvd2VyQ2FzZSgpLnNwbGl0KCcgJyk7XG4gICAgY3VycmVudFJlZ0V4cHMgPSBbXTtcblxuICAgIC8vIENyZWF0ZSByZWdleHBzIGZvciBlYWNoIHNlYXJjaCBzdHJpbmdcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlYXJjaHN0cmluZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChzZWFyY2hzdHJpbmdzW2ldICE9PSAnJykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGN1cnJlbnRSZWdFeHBzW2ldID0gbmV3IFJlZ0V4cChzZWFyY2hzdHJpbmdzW2ldLCAnaScpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBkYXRhLmRpc3BsYXlNZXNzYWdlKCdTeW50YXggZXJyb3IuICcsIGVyci5tZXNzYWdlKTtcbiAgICAgICAgICAkKHNlYXJjaElkKS5wYXJlbnQoKS5maW5kKCcubG9hZGluZycpLmhpZGUoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgO1xuXG4gICAgLy8gU2VhcmNoIHRoZW0hXG4gICAgZGF0YS5tYXRjaGVzID0gZ2V0RW50aXRpZXNNYXRjaGluZ0luKGN1cnJlbnRSZWdFeHBzLCBkYXRhLmVudGl0aWVzLCBkYXRhLnNlYXJjaEtleXMsIHNldHNUb09wZW4pO1xuXG4gICAgaWYgKGludGVyYWN0aXZlICYmIGRhdGEubWF0Y2hlcy5sZW5ndGggPiBtYXhJbnRlcmFjdGl2ZU1hdGNoZXMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGRhdGEubWF0Y2hlcy5sZW5ndGggPiBtYXhNYXRjaGVzKSB7XG4gICAgICBkYXRhLmRpc3BsYXlNZXNzYWdlKCdUb28gbWFueSBtYXRjaGVzLi4uIHBsZWFzZSByZWZpbmUgcXVlcnknKTtcbiAgICAgICQoc2VhcmNoSWQpLnBhcmVudCgpLmZpbmQoJy5sb2FkaW5nJykuaGlkZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBTcGVjaWFsIGNhc2U6IGEgc2VhcmNoIHdpdGggYW4gZW1wdHkgcXVlcnkgc2hvdWxkIG5ldmVyIG9wZW4gc2V0cy4uLiAoYWxzbyBvbmx5IGRvIHRoaXMgd2hlbiByZXF1aXJlZCB0byBjbG9zZSBvcGVuIHNldHMuLi4pXG4gICAgaWYgKGNsb3NlT3BlblNldHMgJiYgc2VhcmNoc3RyaW5ncy5sZW5ndGggPT09IDEgJiYgc2VhcmNoc3RyaW5nc1swXSA9PT0gJycpIHtcbiAgICAgIGRhdGEuc2V0c1RvT3BlbkFmdGVyU2VhcmNoID0gW107XG4gICAgfVxuXG4gICAgLy8gZGlzcGxheSByZXN1bHRzXG4gICAgaWYgKGRhdGEubWF0Y2hlcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGRhdGEuZGlzcGxheU1lc3NhZ2UoJ05vIG1hdGNoZXMgZm91bmQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IGh0bWwgPSAnJztcbiAgICAgIGNvbnN0IGVudGl0aWVzID0gW107XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubWF0Y2hlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBlbnRpdGllc1tpXSA9IGJ1aWxkRnJvbUpTT04oZGF0YS5tYXRjaGVzW2ldLCBjdXJyZW50UmVnRXhwcyk7XG4gICAgICAgIGh0bWwgKz0gZW50aXRpZXNbaV0udGFibGVSb3coMCwgJycsIHRydWUpO1xuICAgICAgfVxuICAgICAgZGF0YS5kaXNwbGF5VGFibGUoZGF0YS5tYXRjaGVzLCBodG1sKTtcbiAgICB9XG4gICAgJChzZWFyY2hJZCkucGFyZW50KCkuZmluZCgnLmxvYWRpbmcnKS5oaWRlKCk7XG4gIH1cbn1cblxuLy8gU2hvdWxkIHRoZSBxdWVyeSBoYXBwZW4gc2VydmVyIHNpZGU/XG5mdW5jdGlvbiByZXF1aXJlc1F1ZXJ5T25TZXJ2ZXIoZGF0YSwgcXVlcnkpIHtcbiAgcmV0dXJuIGRhdGEucXVlcnlPblNlcnZlciB8fCBfLmFueShxdWVyeSwgZnVuY3Rpb24oZSkge1xuICAgIHJldHVybiBjb21wbGV4UXVlcnlSZWdFeHAudGVzdChlKTtcbiAgfSk7XG59XG5cbi8vIFRyaWdnZXJlZCBmb3IgaW50ZXJhY3RpdmUgcmVmaW5lbWVudFxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRlclF1ZXJ5Q2hhbmdlZEludGVyYWN0aXZlKGV2LCBzZWFyY2hJZCwgZGF0YSwgY2xvc2VPcGVuU2V0cykge1xuICBjbGVhclRpbWVvdXQoY3VycmVudFByb2Nlc3MpO1xuXG4gIGNvbnN0IHZhbHVlID0gJChzZWFyY2hJZCkudmFsKCk7XG5cbiAgLy8gc3RhcnQgdXBkYXRpbmcgaW50ZXJhY3RpdmVseSBhZnRlciBtb3JlIHRoYW4gMiBjaGFyc1xuICBpZiAodmFsdWUubGVuZ3RoID4gMyAmJiAhKHJlcXVpcmVzUXVlcnlPblNlcnZlcihkYXRhLCB2YWx1ZSkpKSB7XG4gICAgY3VycmVudFByb2Nlc3MgPSBzZXRUaW1lb3V0KGZpbmRlclF1ZXJ5Q2hhbmdlZCwgMzAwLCBzZWFyY2hJZCwgZGF0YSwgY2xvc2VPcGVuU2V0cywgdHJ1ZSk7XG4gIH1cbn1cblxuLy8gUmV0cmlldmVzIHRoZSBtYXRjaGluZyByZXNvdXJjZXNcbmZ1bmN0aW9uIGdldEVudGl0aWVzTWF0Y2hpbmdJbihyZWdleHBzLCBkaWN0LCBzZWFyY2hLZXlzLCBzZXRzVG9PcGVuQWZ0ZXJTZWFyY2gpIHtcbiAgY29uc3QgZmlsdGVyZWQgPSBbXTtcbiAgY29uc3QgYW1vdW50ID0gcmVnZXhwcy5sZW5ndGg7XG5cbiAgLy8gRm9yIGVhY2ggZW50aXR5LCBzZWUgaWYgaXQgbWF0Y2hlcyB0aGUgcXVlcnlcbiAgXy5lYWNoKGRpY3QsIGZ1bmN0aW9uKG9iamVjdCwga2V5KSB7XG4gICAgbGV0IG1hdGNoZXNBbGwgPSB0cnVlO1xuXG4gICAgLy8gTWF0Y2hpbmcgdGhlIHF1ZXJ5IG1lYW5zIG1hdGNoaW5nIGFsbCB3b3JkcyBpbiB0aGUgcXVlcnlcbiAgICBmb3IgKGxldCBrID0gMDsgayA8IGFtb3VudDsgaysrKSB7XG4gICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgIC8vIE1hdGNoaW5nIGEgd29yZCBtZWFucyBoYXZpbmcgYSBmaWVsZCB0aGF0IG1hdGNoZXMgdGhlIHdvcmRcbiAgICAgIGZvciAobGV0IHMgPSAwOyBzIDwgc2VhcmNoS2V5cy5sZW5ndGg7IHMrKykge1xuICAgICAgICBpZiAoKHNlYXJjaEtleXNbc10gaW4gb2JqZWN0KSAmJiAob2JqZWN0W3NlYXJjaEtleXNbc11dLnNlYXJjaChyZWdleHBzW2tdKSAhPSAtMSkpIHtcbiAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICghZm91bmQgJiYgaXNTZXQob2JqZWN0KSkge1xuICAgICAgICBpZiAoZ2V0RW50aXRpZXNNYXRjaGluZ0luKFtyZWdleHBzW2tdXSwgb2JqZWN0LmNoaWxkcmVuLCBzZWFyY2hLZXlzLCBzZXRzVG9PcGVuQWZ0ZXJTZWFyY2gpLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgZm91bmQgPSB0cnVlO1xuICAgICAgICAgIHNldHNUb09wZW5BZnRlclNlYXJjaC5wdXNoKG9iamVjdC5pZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG1hdGNoZXNBbGwgPSBtYXRjaGVzQWxsICYmIGZvdW5kO1xuICAgIH1cbiAgICBpZiAobWF0Y2hlc0FsbCkge1xuICAgICAgZmlsdGVyZWQucHVzaChvYmplY3QpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBmaWx0ZXJlZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlRdWVyeVJlc3VsdEluKG1lc3NhZ2UsIGlkcywgZGF0YSkge1xuICBkYXRhLm1hdGNoZXMgPSBbXTtcbiAgZGF0YS5zZXRzVG9PcGVuQWZ0ZXJTZWFyY2ggPSBbXTtcblxuICBpZiAobWVzc2FnZSAhPT0gJycpIHtcbiAgICBkYXRhLmRpc3BsYXlNZXNzYWdlKG1lc3NhZ2UpO1xuICB9IGVsc2Uge1xuICAgIGZvciAobGV0IGkgaW4gaWRzKSB7XG4gICAgICBkYXRhLm1hdGNoZXMucHVzaChkYXRhLmVudGl0aWVzW2lkc1tpXV0pO1xuICAgIH1cblxuICAgIC8vIGRpc3BsYXkgcmVzdWx0c1xuICAgIGxldCBodG1sID0gJyc7XG4gICAgY29uc3QgZW50aXRpZXMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRhdGEubWF0Y2hlcy5sZW5ndGg7IGkrKykge1xuICAgICAgZW50aXRpZXNbaV0gPSBidWlsZEZyb21KU09OKGRhdGEubWF0Y2hlc1tpXSwgY3VycmVudFJlZ0V4cHMpO1xuICAgICAgaWYgKGlzU2V0KGVudGl0aWVzW2ldKSkge1xuICAgICAgICBkYXRhLnNldHNUb09wZW5BZnRlclNlYXJjaC5wdXNoKGVudGl0aWVzW2ldLmlkKTtcbiAgICAgIH1cbiAgICAgIGh0bWwgKz0gZW50aXRpZXNbaV0udGFibGVSb3coMCwgJycsIHRydWUpO1xuICAgIH1cbiAgICBkYXRhLmRpc3BsYXlUYWJsZShkYXRhLm1hdGNoZXMsIGh0bWwpO1xuICB9XG4gICQoJy5sb2FkaW5nJykuaGlkZSgpO1xufVxuXG4vLyBGdW5jdGlvbiB0byByZW5kZXIgYW4gU1ZHIGljb25cbmZ1bmN0aW9uIHN2Z0ljb24oaWNvbkNsYXNzTmFtZSwgcmVzb3VyY2VVcmwpIHtcbiAgcmV0dXJuIGA8c3BhbiB0aXRsZT1cIlwiIGNsYXNzPVwic3ZnLWljb24gc3ZnLWljb24tLTE2IHUtdmVydGljYWwtYWxpZ24tdGV4dC1ib3R0b20gc3ZnLWljb24tLWJsYWNrXCI+XFxcblx0XHQ8c3ZnIGNsYXNzPVwic3ZnLWljb24tJHtpY29uQ2xhc3NOYW1lfVwiPlxcXG5cdFx0PHVzZSB4bWxuczp4bGluaz1cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiB4bGluazpocmVmPVwiJHtyZXNvdXJjZVVybH0jJHtpY29uQ2xhc3NOYW1lfVwiPjwvdXNlPlxcXG5cdFx0PC9zdmc+PC9zcGFuPmA7XG59XG5cbi8vIEZ1bmN0aW9uIHRvIGFkZCBlbnRpdGllcyBpbmNyZW1lbnRhbGx5IHRvIHRoZSBlbnRpdGllcyBmb3IgYSBmaW5kZXJcbmV4cG9ydCBmdW5jdGlvbiBhZGRFbnRpdGllcyhmaW5kZXIsIGJvZHlJZCwgZW50aXRpZXMsIHNpbGVudCkge1xuICBjb25zdCBkaWN0ID0gZmluZGVyLmVudGl0aWVzO1xuICBjb25zdCB0YWJsZSA9ICQoYCMke2JvZHlJZH1gKS5wYXJlbnQoKTtcbiAgZm9yIChjb25zdCBrZXkgaW4gZW50aXRpZXMpIHtcbiAgICBkaWN0W2tleV0gPSBlbnRpdGllc1trZXldOyAvLyByZXBsYWNlIHRoZSBlbnRpdHkgaW4gb3VyIGxvY2FsIGRiXG4gICAgaWYgKCFzaWxlbnQpIHtcbiAgICAgIGNvbnN0IHJlbmRlck9iamVjdCA9IGJ1aWxkRnJvbUpTT04oZGljdFtrZXldLCBjdXJyZW50UmVnRXhwcyk7IC8vIGNyZWF0ZSB0aGUgb2JqZWN0IHRvIHJlbmRlciBpdFxuICAgICAgaWYgKHJlbmRlck9iamVjdC5teVNjb3BlICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAkKGAuJHtyZW5kZXJPYmplY3QubXlTY29wZSgpfWApLnJlbW92ZSgpO1xuICAgICAgfSAvLyByZW1vdmUgYWxsIGNvbnRhaW5pbmcgaXRlbXMgKHdoZW4gYXBwbGljYWJsZSlcbiAgICAgIGNvbnN0IHRvcGxldmVsZXhpc3RpbmcgPSAkKGBbb2JqZWN0aWQ9JHtrZXl9XWApLm5vdCgnLnNldGl0ZW0nKTsgLy8gcmVwbGFjZSBvbmx5IHRvcGxldmVsIGl0ZW1zXG4gICAgICBpZiAodG9wbGV2ZWxleGlzdGluZy5sZW5ndGggPT0gMCkge1xuICAgICAgICAkKGAjJHtib2R5SWR9YCkuYXBwZW5kKHJlbmRlck9iamVjdC50YWJsZVJvdygwLCAnJywgdHJ1ZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdG9wbGV2ZWxleGlzdGluZy5ub3QoJy5zaW5nbGV0b24sLnNldGl0ZW0nKS5yZXBsYWNlV2l0aChyZW5kZXJPYmplY3QudGFibGVSb3coMCwgJycsIHRydWUpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gRnVuY3Rpb24gdG8gcmVtb3ZlIGVudGl0aWVzIGluY3JlbWVudGFsbHkgZnJvbSBhIGZpbmRlclxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUVudGl0aWVzKGZpbmRlciwgaWRzLCBzaWxlbnQpIHtcbiAgZm9yIChjb25zdCBpIGluIGlkcykge1xuICAgIGRlbGV0ZSBmaW5kZXIuZW50aXRpZXNbaWRzW2ldXTtcbiAgICBpZiAoIXNpbGVudCkge1xuICAgICAgJChgW29iamVjdGlkPSR7aWRzW2ldfV1gKS5yZW1vdmUoKTtcbiAgICAgICQoYFtpbnNldGlkPSR7aWRzW2ldfV1gKS5yZW1vdmUoKTtcbiAgICB9XG4gIH1cbn1cblxuLy8gRnVuY3Rpb24gdG8gZGVsZXRlIGFsbCBlbnRpdGllcyBmcm9tIHRoZSBmaW5kZXJcbmV4cG9ydCBmdW5jdGlvbiBjbGVhckVudGl0aWVzKGZpbmRlcikge1xuICBmaW5kZXIuZW50aXRpZXMgPSB7fTtcbn1cblxuLy8gRnVuY3Rpb24gdGhhdCB0cmlnZ2VycyB0aGUgbmVjZXNzYXJ5IHVwZGF0ZXMgb24gdGhlIHRhYmxlIGZvciBjb250ZXh0IG1lbnUgYW5kIHNvcnRlclxuZXhwb3J0IGZ1bmN0aW9uIHRyaWdnZXJGaW5kZXJVcGRhdGVzKGZpbmRlciwgYm9keUlkKSB7XG4gIGlmIChmaW5kZXIuYnVpbGRGaW5kZXJDb250ZXh0TWVudSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZmluZGVyLmJ1aWxkRmluZGVyQ29udGV4dE1lbnUoJChgIyR7Ym9keUlkfSB0cmApKTtcbiAgfVxuICAkKGAjJHtib2R5SWR9YCkub24oJ2NsaWNrJywgY2xpY2tSb3cpO1xuICBjb25zdCB0YWJsZSA9ICQoYCMke2JvZHlJZH1gKS5wYXJlbnQoKTtcbiAgdGFibGUudHJpZ2dlcigndXBkYXRlJyk7XG59XG5cbi8qKiAqKioqKioqKioqXG4gRmluZGVyRW50aXR5XG4gKioqKioqKioqKiogKi9cblxuLy8gT2JqZWN0IGNyZWF0aW9uXG5mdW5jdGlvbiBidWlsZEZyb21KU09OKG9iamVjdCwgbXlyZWdleHBzKSB7XG4gIGlmIChteXJlZ2V4cHMubGVuZ3RoID09PSAwKSB7XG4gICAgbXlyZWdleHBzID0gW107XG4gICAgbXlyZWdleHBzLnB1c2gobmV3IFJlZ0V4cCgnJywgJ2knKSk7XG4gIH1cbiAgY29uc3QgY2xhenogPSBldmFsKG9iamVjdC5fY2xhc3NuYW1lKTtcbiAgY29uc3Qgb2JqID0gbmV3IGNsYXp6KG9iamVjdCwgbXlyZWdleHBzKTtcbiAgaWYgKG9iai5jaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgb2JqLmNoaWxkcmVuID0gXy5tYXAob2JqLmNoaWxkcmVuLCBmdW5jdGlvbihjaGlsZCwga2V5KSB7XG4gICAgICByZXR1cm4gYnVpbGRGcm9tSlNPTihjaGlsZCwgbXlyZWdleHBzKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuXG5jbGFzcyBGaW5kZXJFbnRpdHkge1xuXG4gIGNvbnN0cnVjdG9yKG9iaiwgbXlyZWdleHBzKSB7XG4gICAgLy8gY29weSB0aGUgZW50aXR5XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICBsZXQgZWwgPSBvYmpba2V5XTtcbiAgICAgIGlmIChrZXkgIT09ICdpZCcgJiYgKHR5cGVvZiBvYmpba2V5XSA9PT0gJ3N0cmluZycpKSB7XG4gICAgICAgIGVsID0gZW5jb2RlU3RyaW5nKGVsKTtcbiAgICAgIH1cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbXlyZWdleHBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICgoa2V5WzBdICE9PSAnXycpICYmIChrZXkgIT09ICdpZCcpICYmIChrZXkgIT09ICdlbWFpbCcpICYmICh0eXBlb2Ygb2JqW2tleV0gPT09ICdzdHJpbmcnKSAmJiAobXlyZWdleHBzW2ldLnNvdXJjZSAhPT0gJyg/OiknICYmIG15cmVnZXhwc1tpXS5zb3VyY2UgIT09ICcnKSkge1xuICAgICAgICAgIHRoaXNba2V5XSA9IGVsLnJlcGxhY2UobXlyZWdleHBzW2ldLCAnPGVtPiQmPC9lbT4nKTtcbiAgICAgICAgfSBlbHNlIGlmICgob2JqW2tleV0gIT0gbnVsbCkgJiYgKHR5cGVvZiBvYmpba2V5XSA9PT0gJ29iamVjdCcpKSAvLyBzaGFsbG93IGNvcHkgYXJyYXlzIVxuICAgICAgICB7XG4gICAgICAgICAgdGhpc1trZXldID0gXy5jbG9uZShlbCk7XG4gICAgICAgIH0vLyBzdGlsbCBuZWVkZWQ/XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHRoaXNba2V5XSA9IGVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgdmlzaWJpbGl0eU1hcmt1cCh0b2tlbikge1xuICAgIGxldCBkaXNwbGF5O1xuICAgIGlmICh0aGlzLnZpc2libGVUYWJsZUNvbHVtbnMoKS5pbmRleE9mKHRva2VuKSA9PT0gLTEpIHtcbiAgICAgIGRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRpc3BsYXkgPSAnZGVmYXVsdCc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGBjbGFzcz1cImNvbHVtbi0ke3Rva2VufVwiIHN0eWxlPVwiZGlzcGxheToke2Rpc3BsYXl9XCJgO1xuICB9XG5cbiAgLy8gRGlzcGxheSB0aGUgcHJvcGVydHkgaW4gYSB0ZCB3aXRoIG1hcmt1cCBmb3IgdmlzaWJpbGl0eSBhZGRlZFxuICBzaW1wbGVUYWJsZURhdGFGb3IocHJvcGVydHkpIHtcbiAgICBpZiAodGhpc1twcm9wZXJ0eV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGA8dGQgJHt0aGlzLnZpc2liaWxpdHlNYXJrdXAocHJvcGVydHkpfSBjb2x1bW5LZXk9XCIke3Byb3BlcnR5fVwiPjwvdGQ+YDtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHByb3BlcnR5VmFsdWUgPSB0aGlzW3Byb3BlcnR5XTtcblxuICAgICAgc3dpdGNoIChwcm9wZXJ0eSkge1xuICAgICAgICBjYXNlICdlbWFpbCc6XG4gICAgICAgICAgcHJvcGVydHlWYWx1ZSA9IHByb3BlcnR5VmFsdWUubGluayhgbWFpbHRvOiR7cHJvcGVydHlWYWx1ZX1gKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnd2Vic2l0ZSc6XG4gICAgICAgICAgcHJvcGVydHlWYWx1ZSA9IGA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiJHtwcm9wZXJ0eVZhbHVlLmFkZGh0dHAoKX1cIj4ke3Byb3BlcnR5VmFsdWV9PC9hPmA7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICByZXR1cm4gYDx0ZCAke3RoaXMudmlzaWJpbGl0eU1hcmt1cChwcm9wZXJ0eSl9IGNvbHVtbktleT1cIiR7cHJvcGVydHl9XCI+JHtwcm9wZXJ0eVZhbHVlfTwvdGQ+YDtcbiAgICB9XG4gIH1cblxuICBjaGVja2JveFRhYmxlRGF0YSgpIHtcbiAgICByZXR1cm4gJzx0ZCBjbGFzcz1cInNlbGVjdC1jb2xcIj48aW5wdXQgdHlwZT1cImNoZWNrYm94XCI+PC90ZD4nO1xuICB9XG5cbn1cblxuZXhwb3J0IGNsYXNzIEFic3RyYWN0UmVzb3VyY2UgZXh0ZW5kcyBGaW5kZXJFbnRpdHkge1xuICBzdGF0aWMgc3dpdGNoYWJsZVRhYmxlQ29sdW1ucyA9IFsndHlwZScsICdncm91cCcsICdyb2xlcycsICdzZXJpYWwnLCAncHJvZHVjdGNvZGUnLCAnZGF0ZScsICdjb3N0JywgJ3ByaWNlJywgJ3Jvc3RlcnB1Ymxpc2hlZHVudGlsJ107XG4gIHN0YXRpYyB2aXNpYmxlVGFibGVDb2x1bW5zID0gbnVsbDtcblxuICAvLyBEaXNwbGF5IGEgdGFibGUgd2l0aCByZXN1bHRpbmcgZW50aXRpZXMgYW5kIHRoZSB3b3JkcyBtYXRjaGluZyB0aGUgcmVnZXhwcyBoaWdobGlnaHRlZFxuICBzdGF0aWMgZGlzcGxheVRhYmxlKGVudGl0aWVzLCBodG1sKSB7XG4gICAgJCgnI2ZpbmRlclRhYmxlQm9keScpLmh0bWwoaHRtbCkub24oJ2NsaWNrJywgY2xpY2tSb3cpO1xuXG4gICAgLy8gU2V0cyBjb250ZXh0IG1lbnVcbiAgICBmaW5kZXJzLnJlc291cmNlRmluZGVyLmJ1aWxkRmluZGVyQ29udGV4dE1lbnUoJCgnI2ZpbmRlclRhYmxlQm9keScpKTtcblxuICAgIC8vIEluIGxpc3RpbmcgbW9kZSwgd2Ugc2hvdyB0aGUgdGltZWxpbmVzIGFnYWluIGFmdGVyIGEgc2VhcmNoXG4gICAgaWYgKGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuZmluZGVyTW9kZSA9PT0gJ2xpc3RpbmcnKSB7XG4gICAgICByZWZyZXNoT3BlblRpbWVsaW5lcygpO1xuICAgIH1cbiAgICBpZiAoZmluZGVycy5yZXNvdXJjZUZpbmRlci5maW5kZXJNb2RlID09PSAnZmluZGVyJyB8fCBmaW5kZXJzLnJlc291cmNlRmluZGVyLmZpbmRlck1vZGUgPT09ICdleHRlcm5hbCcpIHtcbiAgICAgIGhpZGVUaW1lbGluZXMoKTtcbiAgICAgIC8vIFRpY2sgcmVzb3VyY2VzIHRoYXQgYXJlIGluIHRoZSBiYXNrZXRcbiAgICAgIHRpY2tSZXNvdXJjZXNJbkJhc2tldCgpO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBkcmFnZ2FibGVzXG4gICAgaWYgKGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuYWxsb3dEcmFnZ2luZykge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRpdGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZW50aXRpZXNbaV0ucGVybWlzc2lvbnMuaW5kZXhPZigndXNlJykgIT09IC0xKSB7XG4gICAgICAgICAgY3JlYXRlRHJhZ2dhYmxlKGVudGl0aWVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIHRyaWdnZXIgdGhlIHVwZGF0ZSBvZiB0aGUgc29ydGVyIGNhY2hlIChyZXF1aXJlZCEpXG4gICAgJCgnI2ZpbmRlclRhYmxlJykudHJpZ2dlcigndXBkYXRlJyk7XG4gIH1cblxuICBzdGF0aWMgZGlzcGxheU1lc3NhZ2UoYVN0cmluZykge1xuICAgICQoJyNmaW5kZXJUYWJsZUJvZHknKS5odG1sKGA8dHI+PHRkIGNvbHNwYW49XCIke0Fic3RyYWN0UmVzb3VyY2UudmlzaWJsZVRhYmxlQ29sdW1ucy5sZW5ndGggKyAzfVwiPiR7YVN0cmluZ308L3RkPjwvdHI+YCk7XG4gIH1cblxuICBzdGF0aWMgZGlzcGxheUluaXRpYWxUYWJsZSgpIHtcbiAgICAkKCcjZmluZGVyVGFibGVCb2R5JykuaHRtbCgnJyk7XG4gIH1cblxuICB2aXNpYmxlVGFibGVDb2x1bW5zKCkge1xuICAgIHJldHVybiBBYnN0cmFjdFJlc291cmNlLnZpc2libGVUYWJsZUNvbHVtbnM7XG4gIH1cblxuICBnZXRQZXJtaXNzaW9ucygpIHtcbiAgICAvLyBSZXR1cm5zIHRoZSBwZXJtaXNzaW9ucyBmb3IgYW4gZW50aXR5XG4gICAgY29uc3QgcGVybXMgPSB0aGlzLnBlcm1pc3Npb25zO1xuICAgIGlmIChpc0ZpbmRlclVubG9ja2VkKCkpIHtcbiAgICAgIHBlcm1zLnB1c2goJ3VubG9ja2VkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBlcm1zO1xuICB9XG5cbiAgYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKSB7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuICAgIGlmICh0aGlzLmFtb3VudCA+IDEpIHtcbiAgICAgIHJlc3VsdCArPSAnbXVsdGlwbGUnO1xuICAgIH1cbiAgICBpZiAobGV2ZWwgPiAwKSB7XG4gICAgICByZXN1bHQgKz0gYCBleHBhbmQtY2hpbGQgc2V0aXRlbSBzdWIke2xldmVsfWA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBjc3NDbGFzc2VzKGxldmVsKSB7XG4gICAgcmV0dXJuIHRoaXMuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKTtcbiAgfVxuXG4gIGhhc1BsYWNlaG9sZGVycygpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0aW1lbGluZUNsYXNzZXMoKSB7XG4gICAgbGV0IHJlc3VsdCA9ICcnO1xuXG4gICAgaWYgKGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuZmluZGVyTW9kZSA9PT0gJ2xpc3RpbmcnKSB7XG4gICAgICByZXN1bHQgKz0gJyBwbGFubmVkJztcbiAgICAgIGlmIChpc0NvbmZsaWN0SWQodGhpcy5pZCkpIHtcbiAgICAgICAgcmVzdWx0ICs9ICcgY29uZmxpY3QnO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc2VyaWFsaXplZElkKHNlcCkge1xuICAgIHJldHVybiBzZXJpYWxpemVkSWRPZih0aGlzLCBzZXApO1xuICB9XG5cbiAgdGFibGVSb3cobGV2ZWwsIHNldHNjb3BlLCB2aXNpYmxlKSB7XG4gICAgLy8gc2V0dGluZyB0aGUgcmlnaHQgY3NzIGNsYXNzZXMgZm9yIHRoZSByb3dcbiAgICAvLyBUaGUgc2V0c2NvcGUgaXMgYSBzZXQgb2YgY2xhc3NlcyB0aGF0IGRlcGVuZHMgb24gdGhlIHNldHMgd2UgYXJlICh2aXN1YWxseSkgbG9jYXRlZCBpbi4gSXQgYWxsb3dzIHVzIHRvIHJlbW92ZSB0aGlzIHJvdyBpZiB0aGUgc2V0IGlzIGNsb3NlZCFcbiAgICBjb25zdCBjbGFzc2VzID0gYCR7c2V0c2NvcGV9ICR7dGhpcy5jc3NDbGFzc2VzKGxldmVsKX1gO1xuICAgIGxldCBzdHlsZSA9ICcnO1xuXG4gICAgaWYgKCF2aXNpYmxlKSB7XG4gICAgICBzdHlsZSA9ICdzdHlsZT1cImRpc3BsYXk6bm9uZVwiJztcbiAgICB9XG5cbiAgICAvLyBHZW5lcmF0ZSB0aGUgdGFibGUgcm93XG4gICAgbGV0IGh0bWwgPSBgPHRyICR7c3R5bGV9IGNNZW51PVwiZmluZGVyTWVudVwiIGNsYXNzPVwiJHtjbGFzc2VzfVwiIHBlcm1pc3Npb25zPVwiJHt0b1NvdXJjZSh0aGlzLmdldFBlcm1pc3Npb25zKCkpfVwiIG9iamVjdGlkPVwiJHt0aGlzLnNlcmlhbGl6ZWRJZCgnLCcpfVwiIGluc2V0aWQ9XCIke3RoaXMuc2V0aWR9XCI+YDtcbiAgICAvLyBodG1sICs9IHRoaXMuY2hlY2tib3hUYWJsZURhdGEoKTtcbiAgICBodG1sICs9IHRoaXMubmFtZVRhYmxlRGF0YShsZXZlbCwgc2V0c2NvcGUpO1xuICAgIGh0bWwgKz0gdGhpcy5hbW91bnRUYWJsZURhdGEobGV2ZWwpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgQWJzdHJhY3RSZXNvdXJjZS5zd2l0Y2hhYmxlVGFibGVDb2x1bW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBodG1sICs9IHRoaXMuc2ltcGxlVGFibGVEYXRhRm9yKEFic3RyYWN0UmVzb3VyY2Uuc3dpdGNoYWJsZVRhYmxlQ29sdW1uc1tpXSk7XG4gICAgfVxuICAgIGh0bWwgKz0gdGhpcy50aW1lbGluZVRhYmxlRGF0YSgpO1xuXG4gICAgcmV0dXJuIGAke2h0bWx9PC90cj5gO1xuICB9XG5cbiAgbmFtZVRhYmxlRGF0YShsZXZlbCwgc2V0c2NvcGUpIHtcbiAgICBsZXQgaHRtbCA9ICcnO1xuXG4gICAgLy8gSWYgd2UgYXJlIGluIGZpbmRlciBtb2RlLCB3ZSBjYW4gYWRkIHRoaW5ncyB0byB0aGUgYmFza2V0IHVzaW5nIHRoaXMgbGlua1xuICAgIGlmICgoZmluZGVycy5yZXNvdXJjZUZpbmRlci5maW5kZXJNb2RlID09PSAnZmluZGVyJykgJiYgKHRoaXMucGVybWlzc2lvbnMuaW5kZXhPZigndXNlJykgIT09IC0xKSkge1xuICAgICAgaHRtbCArPSBgPGEgaHJlZj1cImphdmFzY3JpcHQ6e31cIiBvbmNsaWNrPVwiUmVhY3RDb21wb25lbnRzX3Jlc291cmNlYW5kdGFza2ZpbmRlci5maW5kZXJzLnJlc291cmNlRmluZGVyLmFkZFRvQmFza2V0KCcke3RoaXMuaWR9JyxSZWFjdENvbXBvbmVudHNfcmVzb3VyY2VhbmR0YXNrZmluZGVyLmdldEN1cnJlbnRSb2xlKCcke3RoaXMuaWR9JykpXCIgY2xhc3M9XCJhZGRcIj48c3BhbiBpZD1cIlIke3RoaXMuaWR9XCI+JHt0aGlzLm5hbWV9PC9zcGFuPjwvYT5gO1xuICAgICAgLy8gSWYgd2UgaGF2ZSByb2xlcyB0byBzaG93LCBzaG93IHRoZW0uXG4gICAgICBpZiAodGhpcy50eXBlID09PSAnSHVtYW4nICYmIHRoaXMuZGVmYXVsdHJvbGUgIT09IHVuZGVmaW5lZCAmJiB0aGlzLnJvbGVzLmxlbmd0aCA+IDAgJiYgIXRoaXMuaGFzUGxhY2Vob2xkZXJzKCkpIHtcbiAgICAgICAgaHRtbCArPSBgIDxzcGFuIGNsYXNzPVwicm9sZVwiPig8c3BhbiBocmVmPVwiamF2YXNjcmlwdDp7fVwiIG9uY2xpY2s9XCJvcGVuUm9sZVNlbGVjdG9yKCcke3RoaXMuaWR9JylcIiB0aXRsZT1cImNoYW5nZSByb2xlXCI+JHt0aGlzLmRlZmF1bHRyb2xlfTwvc3Bhbj4pPC9zcGFuPmA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGh0bWwgKz0gYDxzcGFuIGlkPVwiUiR7dGhpcy5pZH1cIj4ke3RoaXMubmFtZX08L3NwYW4+YDtcbiAgICB9XG5cbiAgICBodG1sICs9ICc8L3RkPic7XG5cbiAgICByZXR1cm4gaHRtbDtcbiAgfVxuXG4gIGFtb3VudFRhYmxlRGF0YShsZXZlbCkge1xuICAgIHJldHVybiBgPHRkIGlkPVwiJHt0aGlzLm15U2NvcGUoKX1cIiBjbGFzcz1cImFtb3VudFwiIGNvbHVtbktleT1cImFtb3VudFwiPjxzcGFuPiR7dGhpcy5hbW91bnR9PC9zcGFuPjwvdGQ+YDtcbiAgfVxuXG4gIHRpbWVsaW5lVGFibGVEYXRhKCkge1xuICAgIGxldCBpbnNldCA9ICcnO1xuICAgIGlmICh0aGlzLnNldGlkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGluc2V0ID0gYGluc2V0PVwiJHt0aGlzLnNldGlkfVwiYDtcbiAgICB9XG5cbiAgICByZXR1cm4gYDx0ZCB0aW1lbGluZT1cIiR7dGhpcy5zZXJpYWxpemVkSWQoJ18nKX1cIiAke2luc2V0fSBjbGFzcz1cImF2YWlsYWJpbGl0eSAke3RoaXMudGltZWxpbmVDbGFzc2VzKCl9XCI+PC90ZD5gO1xuICB9XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Sb2xlU2VsZWN0b3IoaWQpIHtcbiAgJChgW29iamVjdGlkPSR7aWR9XSAucm9sZSBzcGFuYCkuZWRpdGFibGUoZmluZGVycy5yZXNvdXJjZUZpbmRlci5pbnBsYWNlZWRpdGNhbGxiYWNrcy5yb2xlLCBmaW5kZXJzLnJlc291cmNlRmluZGVyLmlucGxhY2VlZGl0Y29uZmlncy5yb2xlKS5lZGl0YWJsZSgnZW5hYmxlJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJyZW50Um9sZShpZCkge1xuICByZXR1cm4gJChgW29iamVjdGlkPSR7aWR9XSAucm9sZSBzcGFuYCkuaHRtbCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q3VycmVudFJvbGVJblNFKGlkKSB7XG4gIC8vIGluIFNFLCB3ZSB1c2UgYW4gaWQgdGhhdCBzdGFydHMgd2l0aCBSLi4uXG4gIHJldHVybiAkKGBbb2JqZWN0aWQ9JHtpZC5zdWJzdHJpbmcoMSwgaWQuc2l6ZSl9XSAucm9sZSBzcGFuYCkuaHRtbCgpO1xufVxuXG5jbGFzcyBSZXNvdXJjZSBleHRlbmRzIEFic3RyYWN0UmVzb3VyY2Uge1xuXG4gIHRhYmxlUm93KGxldmVsLCBzZXRzY29wZSwgdmlzaWJsZSkge1xuICAgIGxldCBodG1sID0gc3VwZXIudGFibGVSb3cobGV2ZWwsIHNldHNjb3BlLCB2aXNpYmxlKTtcblxuICAgIGlmICh0aGlzLmFtb3VudCA+IDEpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICBodG1sICs9ICh0aGlzLmNoaWxkcmVuW2ldKS50YWJsZVJvdyhsZXZlbCwgYCR7c2V0c2NvcGV9ICR7dGhpcy5teVNjb3BlKCl9YCwgZmFsc2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBodG1sO1xuICB9XG5cbiAgY3NzQ2xhc3NlcyhsZXZlbCkge1xuICAgIGxldCBjc3NDbGFzc2VzID0gc3VwZXIuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKTtcbiAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggPT09IDEgJiYgdGhpcy5jaGlsZHJlblswXS5pc0luU2V0KSB7XG4gICAgICBjc3NDbGFzc2VzICs9ICcgZml4ZWQnO1xuICAgIH1cbiAgICByZXR1cm4gY3NzQ2xhc3NlcztcbiAgfVxuXG4gIG5hbWVUYWJsZURhdGEobGV2ZWwsIHNldHNjb3BlKSB7XG4gICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJuYW1lXCIgY29sdW1uS2V5PVwibmFtZVwiPiR7XG4gICAgICB0aGlzLnVzZXIgPyBzdmdJY29uKCdpY29uLXVzZXInLCBmaW5kZXJzLnJlc291cmNlRmluZGVyLnN2Z1Jlc291cmNlVXJsKSA6ICcnXG4gICAgfSR7dGhpcy5zdXNwZW5kZWR1c2VyID8gc3ZnSWNvbignaWNvbi1zdXNwZW5kZWQtdXNlcicsIGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuc3ZnUmVzb3VyY2VVcmwpIDogJydcbiAgICB9JHtBYnN0cmFjdFJlc291cmNlLnByb3RvdHlwZS5uYW1lVGFibGVEYXRhLmNhbGwodGhpcywgbGV2ZWwsIHNldHNjb3BlKX1gO1xuICB9XG5cbiAgYW1vdW50VGFibGVEYXRhKGxldmVsKSB7XG4gICAgaWYgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID09PSAxICYmIHRoaXMuY2hpbGRyZW5bMF0uaXNJblNldCkge1xuICAgICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJhbW91bnRcIiB0aXRsZT1cIkZpeGVkIGluIHNldCAke3RoaXMuY2hpbGRyZW5bMF0uaXNJblNldC5yZXBsYWNlKCc8ZW0+JywgJycpLnJlcGxhY2UoJzwvZW0+JywgJycpfVwiPiAgRml4ZWQgYDtcbiAgICB9Ly8gbmVlZCB0byByZW1vdmUgdGhlIDxlbT4gYmVjYXVzZSB0aGF0IGNyYXNoZXMgeG1sIHBhZ2VcbiAgICBlbHNlIHtcbiAgICAgIGNvbnN0IHJlc291cmNlSWQgPSB0aGlzLm15U2NvcGUoKTtcbiAgICAgIGxldCBodG1sID0gYDx0ZCBpZD1cIiR7cmVzb3VyY2VJZH1cIiBjbGFzcz1cImFtb3VudFwiIGNvbHVtbktleT1cImFtb3VudFwiPmA7XG5cbiAgICAgIC8vIEEgYnVsayByZXNvdXJjZSB3aXRoIGFuIHVuc3BlY2lmaWVkIGFtb3VudCBvciBhIGh1bWFuIHJlc291cmNlIGlzIG5vdCBlZGl0YWJsZSBpbi1wbGFjZVxuICAgICAgaWYgKHRoaXMuYW1vdW50ID09PSAnLScgfHwgdGhpcy50eXBlID09PSAnSHVtYW4nKSB7XG4gICAgICAgIGh0bWwgKz0gdGhpcy5hbW91bnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBodG1sICs9IGA8c3Bhbj4ke3RoaXMuYW1vdW50fTwvc3Bhbj5gO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eSgnYWN0dWFsYW1vdW50JykpIHtcbiAgICAgICAgaHRtbCArPSBgIDxzcGFuIGNsYXNzPVwiYWN0dWFsXCI+KCR7dGhpcy5hY3R1YWxhbW91bnR9KTwvc3Bhbj5gO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggPiAxKSB7XG4gICAgICAgIGh0bWwgKz0gYDxhIGNsYXNzPVwib3Blbm1lXCIgaHJlZj1cImphdmFzY3JpcHQ6e31cIiBvbmNsaWNrPVwiUmVhY3RDb21wb25lbnRzX3Jlc291cmNlYW5kdGFza2ZpbmRlci50b2dnbGVNdWx0aXBsZSh0aGlzLCcke3Jlc291cmNlSWR9Jyk7ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKClcIiA+IDwvYT48L3RkPmA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBodG1sICs9ICc8L3RkPic7XG4gICAgICB9XG4gICAgICByZXR1cm4gaHRtbDtcbiAgICB9XG4gIH1cblxuICBteVNjb3BlKCkge1xuICAgIHJldHVybiBgcmVzb3VyY2Uke3RoaXMuc2VyaWFsaXplZElkKCcnKX1gO1xuICB9XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZU11bHRpcGxlKGVsLCByZXNvdXJjZUlkKSB7XG4gIGlmICgkKGVsKS5wYXJlbnQoKS5wYXJlbnQoKS5oYXNDbGFzcygnb3BlbicpKSB7XG4gICAgJChgLiR7cmVzb3VyY2VJZH1gKS5oaWRlKCk7XG4gICAgJChlbCkucGFyZW50KCkucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcbiAgfSBlbHNlIHtcbiAgICByZWZyZXNoVGltZWxpbmVPZlJvd3MoJChgLiR7cmVzb3VyY2VJZH1gKS5zaG93KCkpO1xuICAgIGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuYnVpbGRGaW5kZXJDb250ZXh0TWVudSgkKGAuJHtyZXNvdXJjZUlkfWApKTtcbiAgICAkKGVsKS5wYXJlbnQoKS5wYXJlbnQoKS5hZGRDbGFzcygnb3BlbicpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBSZXNvdXJjZUluU2V0IGV4dGVuZHMgUmVzb3VyY2Uge1xuICBuYW1lVGFibGVEYXRhKGxldmVsLCBzZXRzY29wZSkge1xuICAgIHJldHVybiBgPHRkIGNsYXNzPVwibmFtZVwiIGNvbHVtbktleT1cIm5hbWVcIj4ke0Fic3RyYWN0UmVzb3VyY2UucHJvdG90eXBlLm5hbWVUYWJsZURhdGEuY2FsbCh0aGlzLCBsZXZlbCwgc2V0c2NvcGUpfWA7XG4gIH1cblxuICBhbW91bnRUYWJsZURhdGEobGV2ZWwpIHtcbiAgICByZXR1cm4gYDx0ZCBjbGFzcz1cImFtb3VudFwiIGNvbHVtbktleT1cImFtb3VudFwiPjxzcGFuPiR7dGhpcy5hbW91bnR9PC9zcGFuPjwvdGQ+YDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgRXh0ZXJuYWxSZXNvdXJjZSBleHRlbmRzIFJlc291cmNlIHtcbiAgY3NzQ2xhc3NlcyhsZXZlbCkge1xuICAgIHJldHVybiBgZXh0ZXJuYWwgJHtzdXBlci5hYnN0cmFjdENzc0NsYXNzZXMobGV2ZWwpfWA7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFkSG9jIGV4dGVuZHMgUmVzb3VyY2Uge1xuXG4gIGNzc0NsYXNzZXMobGV2ZWwpIHtcbiAgICByZXR1cm4gYGFkaG9jICR7c3VwZXIuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKX1gO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBGaW5hbmNpYWxBZEhvYyBleHRlbmRzIFJlc291cmNlIHtcbiAgY3NzQ2xhc3NlcyhsZXZlbCkge1xuICAgIHJldHVybiBgYWRob2MtZmluYW5jaWFsICR7c3VwZXIuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKX1gO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBQbGFjZUhvbGRlciBleHRlbmRzIFJlc291cmNlIHtcblxuICBoYXNQbGFjZWhvbGRlcnMoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjc3NDbGFzc2VzKGxldmVsKSB7XG4gICAgcmV0dXJuIGBwbGFjZWhvbGRlciAke3N1cGVyLmFic3RyYWN0Q3NzQ2xhc3NlcyhsZXZlbCl9YDtcbiAgfVxuXG4gIG5hbWVUYWJsZURhdGEobGV2ZWwsIHNldHNjb3BlKSB7XG4gICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJuYW1lXCI+JHtBYnN0cmFjdFJlc291cmNlLnByb3RvdHlwZS5uYW1lVGFibGVEYXRhLmNhbGwodGhpcywgbGV2ZWwsIHNldHNjb3BlKX1gO1xuICB9XG5cbiAgYW1vdW50VGFibGVEYXRhKGxldmVsKSB7XG4gICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJhbW91bnRcIj4ke3RoaXMuYW1vdW50fTwvdGQ+YDtcbiAgfVxuXG4gIHRpbWVsaW5lQ2xhc3NlcygpIHtcbiAgICBpZiAoQWJzdHJhY3RSZXNvdXJjZS5maW5kZXJNb2RlID09PSAnbGlzdGluZycpIHtcbiAgICAgIHJldHVybiBgJHtSZXNvdXJjZS5wcm90b3R5cGUudGltZWxpbmVDbGFzc2VzLmNhbGwodGhpcyl9IGVtcHR5LWJveC1jb25mbGljdGA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFBsYWNlSG9sZGVySW5TZXQgZXh0ZW5kcyBQbGFjZUhvbGRlciB7XG5cbiAgZ2V0UGVybWlzc2lvbnMoKSB7XG4gICAgY29uc3QgcGVybXMgPSBBYnN0cmFjdFJlc291cmNlLnByb3RvdHlwZS5nZXRQZXJtaXNzaW9ucy5jYWxsKHRoaXMpO1xuICAgIHJldHVybiBwZXJtcy5jb25jYXQoWyd3cml0ZVJlc291cmNlJ10pO1xuICB9XG5cbiAgYW1vdW50VGFibGVEYXRhKGxldmVsKSB7XG4gICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJhbW91bnRcIiBjb2x1bW5LZXk9XCJhbW91bnRcIj48c3Bhbj4ke3RoaXMuYW1vdW50fTwvc3Bhbj48L3RkPmA7XG4gIH1cblxuICB0aW1lbGluZVRhYmxlRGF0YSgpIHtcbiAgICByZXR1cm4gYDx0ZCB0aW1lbGluZT1cIiR7dGhpcy5pZH1cIiBpbnNldD1cIiR7dGhpcy5zZXRpZH1cIiBjbGFzcz1cImF2YWlsYWJpbGl0eSAke3RoaXMudGltZWxpbmVDbGFzc2VzKCl9XCI+PC90ZD5gO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBSZXNvdXJjZUluc3RhbmNlIGV4dGVuZHMgQWJzdHJhY3RSZXNvdXJjZSB7XG5cbiAgY3NzQ2xhc3NlcyhsZXZlbCkge1xuICAgIGlmICh0aGlzLmlzSW5TZXQpIHtcbiAgICAgIGlmICh0aGlzLnNldGlkID09PSB1bmRlZmluZWQpIC8vIGluIHNpbmdsZXRvbiBsaXN0XG4gICAgICB7XG4gICAgICAgIHJldHVybiAnIGV4cGFuZC1jaGlsZCBmaXhlZCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gYCR7c3VwZXIuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKX0gZml4ZWRgO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ2V4cGFuZC1jaGlsZCBzaW5nbGV0b24gJztcbiAgICB9XG4gIH1cblxuICBuYW1lVGFibGVEYXRhKGxldmVsLCBzZXRzY29wZSkge1xuICAgIC8vIG9ubHkgZGlzcGxheSB0aGUgbmFtZSBpbiBhIHNldCAob3RoZXJ3aXNlIHdlIGFyZSBpbiB0aGUgaW5zdGFuY2VzIGxpc3RpbmcpXG4gICAgaWYgKGxldmVsID4gMCkge1xuICAgICAgcmV0dXJuIGA8dGQgY2xhc3M9XCJuYW1lXCI+JHt0aGlzLm5hbWV9PC90ZD5gO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJzx0ZCBjbGFzcz1cIm5hbWVcIj48L3RkPic7XG4gICAgfVxuICB9XG5cbiAgYW1vdW50VGFibGVEYXRhKCkge1xuICAgIGxldCBodG1sO1xuXG4gICAgaWYgKHRoaXMuaXNJblNldCkge1xuICAgICAgaHRtbCA9IGA8dGQgY2xhc3M9XCJhbW91bnRcIiB0aXRsZT1cIkZpeGVkIGluIHNldCAke3RoaXMuaXNJblNldC5yZXBsYWNlKCc8ZW0+JywgJycpLnJlcGxhY2UoJzwvZW0+JywgJycpfVwiPiAgRml4ZWQgYDtcbiAgICB9Ly8gbmVlZCB0byByZW1vdmUgdGhlIDxlbT4gYmVjYXVzZSB0aGF0IGNyYXNoZXMgeG1sIHBhZ2VcbiAgICBlbHNlIHtcbiAgICAgIGh0bWwgPSBgPHRkIGNsYXNzPVwiYW1vdW50XCI+IDxzcGFuPiMke3RoaXMucHJlZmVyZW5jZX08L3NwYW4+YDtcblxuICAgICAgaWYgKGlzRmluZGVyVW5sb2NrZWQoKSAmJiAoXy5pbmRleE9mKHRoaXMuZ2V0UGVybWlzc2lvbnMoKSwgJ3dyaXRlJykgIT09IC0xKSkge1xuICAgICAgICBodG1sICs9IHNvcnRpbmdBY3Rpb25zRm9ySWQodGhpcy5pZCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBgJHtodG1sfTwvdGQ+YDtcbiAgfVxuXG4gIHRpbWVsaW5lVGFibGVEYXRhKCkge1xuICAgIGxldCBpbnNldGF0dHIgPSAnJztcblxuICAgIGlmICh0aGlzLnNldGlkICE9PSB1bmRlZmluZWQpIC8vIGlmIHRoZSBpbnNldCBhdHRyaWJ1dGUgaXMgc2V0IChpZS4gSSBhbSBsb2NhdGVkIGluc2lkZSB0aGUgc2V0IGhlcmUgLSBub3QganVzdCBkaXNwbGF5ZWQgaW4gdGhlIGluc3RhbmNlcyBsaXN0KVxuICAgIHtcbiAgICAgIGluc2V0YXR0ciA9IGBpbnNldD1cIiR7dGhpcy5zZXRpZH1cImA7XG4gICAgfVxuICAgIHJldHVybiBgPHRkIHRpbWVsaW5lPVwiJHt0aGlzLmlkfVwiICR7aW5zZXRhdHRyfSBjbGFzcz1cImF2YWlsYWJpbGl0eSAke3RoaXMudGltZWxpbmVDbGFzc2VzKCl9XCI+PC90ZD5gO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBSZXNvdXJjZVNldCBleHRlbmRzIEFic3RyYWN0UmVzb3VyY2Uge1xuXG4gIGNzc0NsYXNzZXMobGV2ZWwpIHtcbiAgICBsZXQgb3BlbiA9ICcnO1xuICAgIGlmICh0aGlzLmNvbnRlbnRzVmlzaWJsZSgpKSB7XG4gICAgICBvcGVuID0gJ29wZW4gJztcbiAgICB9XG4gICAgcmV0dXJuIGBzZXQgJHtvcGVufSR7c3VwZXIuYWJzdHJhY3RDc3NDbGFzc2VzKGxldmVsKX1gO1xuICB9XG5cbiAgaGFzUGxhY2Vob2xkZXJzKCkge1xuICAgIGxldCBoYXMgPSBmYWxzZTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZHJlbi5sZW5ndGg7IGkrKylcbiAgICAgIC8vIGhhdmUgdG8gbWFrZSB0aGUgb2JqZWN0cyBoZXJlIChkaWQgbm90IHdvcmsgaW4gY29uc3RydWN0b3IoeWV0KSlcbiAgICB7XG4gICAgICBoYXMgPSBoYXMgfHwgdGhpcy5jaGlsZHJlbltpXS5oYXNQbGFjZWhvbGRlcnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaGFzO1xuICB9XG5cbiAgY29udGVudHNWaXNpYmxlKCkge1xuICAgIHJldHVybiBmaW5kZXJzLnJlc291cmNlRmluZGVyLnNldHNUb09wZW5BZnRlclNlYXJjaC5pbmRleE9mKHRoaXMuc2VyaWFsaXplZElkKCcnKSkgIT09IC0xO1xuICB9XG5cbiAgdGFibGVSb3cobGV2ZWwsIHNldHNjb3BlLCB2aXNpYmxlKSB7XG4gICAgbGV0IGh0bWwgPSBBYnN0cmFjdFJlc291cmNlLnByb3RvdHlwZS50YWJsZVJvdy5jYWxsKHRoaXMsIGxldmVsLCBzZXRzY29wZSwgdmlzaWJsZSk7XG4gICAgY29uc3QgY29udGVudHNWaXNpYmxlID0gdGhpcy5jb250ZW50c1Zpc2libGUoKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgaHRtbCArPSAodGhpcy5jaGlsZHJlbltpXSkudGFibGVSb3cobGV2ZWwgKyAxLCBgJHtzZXRzY29wZX0gJHt0aGlzLm15U2NvcGUoKX1gLCBjb250ZW50c1Zpc2libGUpO1xuICAgIH1cblxuICAgIHJldHVybiBodG1sO1xuICB9XG5cbiAgbmFtZVRhYmxlRGF0YShsZXZlbCwgc2V0c2NvcGUpIHtcbiAgICAvLyBJZiB0aGUgcm93IHJlcHJlc2VudHMgYSBzZXQsIGFkZCB0aGUgY2xpY2sgbGluayBhbmQgcmVnaXN0ZXIgYSBmdW5jdGlvbiB0aGF0IHdpbGwgcmVnaXN0ZXIgdGhlIGNsaWNrIHdoZW4gdGhlIHJvdyBpcyBnZW5lcmF0ZWRcbiAgICBjb25zdCBteVNjb3BlID0gdGhpcy5teVNjb3BlKCk7XG4gICAgY29uc3QgaHRtbCA9IGA8dGQgaWQ9XCIke215U2NvcGV9XCIgY2xhc3M9XCJuYW1lXCIgY29sdW1ua2V5PVwibmFtZVwiPjxhIGNsYXNzPVwib3Blbm1lIHNob3ctc2V0XCIgb25jbGljaz1cIlJlYWN0Q29tcG9uZW50c19yZXNvdXJjZWFuZHRhc2tmaW5kZXIudG9nZ2xlU2V0KCQodGhpcyksJyR7bXlTY29wZX0nLCR7bGV2ZWx9KTtldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcIj4gPC9hPmA7XG5cbiAgICByZXR1cm4gaHRtbCArIEFic3RyYWN0UmVzb3VyY2UucHJvdG90eXBlLm5hbWVUYWJsZURhdGEuY2FsbCh0aGlzLCBsZXZlbCwgc2V0c2NvcGUpO1xuICB9XG5cbiAgYW1vdW50VGFibGVEYXRhKGxldmVsKSB7XG4gICAgaWYgKGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuZmluZGVyTW9kZSA9PT0gJ2xpc3RpbmcnKSB7XG4gICAgICByZXR1cm4gYDx0ZCBjbGFzcz1cImFtb3VudFwiIGNvbHVtbktleT1cImFtb3VudFwiPjxzcGFuPiR7dGhpcy5hbW91bnR9PC9zcGFuPjwvdGQ+YDtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc2V0aWQgPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gJzx0ZD4gLSA8L3RkPic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBgPHRkIGNsYXNzPVwiYW1vdW50XCIgY29sdW1uS2V5PVwiYW1vdW50XCI+PHNwYW4+JHt0aGlzLmFtb3VudH08L3NwYW4+PC90ZD5gO1xuICAgIH1cbiAgfVxuXG4gIHRpbWVsaW5lQ2xhc3NlcygpIHtcbiAgICBpZiAoZmluZGVycy5yZXNvdXJjZUZpbmRlci5maW5kZXJNb2RlID09PSAnbGlzdGluZycgJiYgdGhpcy5oYXNQbGFjZWhvbGRlcnMoKSkge1xuICAgICAgcmV0dXJuIGAke0Fic3RyYWN0UmVzb3VyY2UucHJvdG90eXBlLnRpbWVsaW5lQ2xhc3Nlcy5jYWxsKHRoaXMpfSBlbXB0eS1ib3gtY29uZmxpY3RgO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gQWJzdHJhY3RSZXNvdXJjZS5wcm90b3R5cGUudGltZWxpbmVDbGFzc2VzLmNhbGwodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgbXlTY29wZSgpIHtcbiAgICByZXR1cm4gYHNldCR7dGhpcy5pZH1gO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVTZXQoZWwsIHNldElkLCBsZXZlbCkge1xuICBpZiAoZWwucGFyZW50KCkucGFyZW50KCkuaGFzQ2xhc3MoJ29wZW4nKSkge1xuICAgIC8vIGNsaWNrZWQgb24gYW4gb3BlbiBzZXQgb3IgbXVsdGlwbGVcbiAgICAkKGAuJHtzZXRJZH1gKS5oaWRlKCkucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcbiAgICBlbC5wYXJlbnQoKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnb3BlbicpO1xuICB9IGVsc2Uge1xuICAgIC8vIGNsaWNrZWQgb24gYSBjbG9zZWQgc2V0IG9yIG11bHRpcGxlXG4gICAgcmVmcmVzaFRpbWVsaW5lT2ZSb3dzKCQoYC4ke3NldElkfS5zdWIke2xldmVsICsgMX1gKS5zaG93KCkpO1xuICAgIGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuYnVpbGRGaW5kZXJDb250ZXh0TWVudSgkKGAuJHtzZXRJZH0uc3ViJHtsZXZlbCArIDF9YCkpO1xuICAgIGVsLnBhcmVudCgpLnBhcmVudCgpLmFkZENsYXNzKCdvcGVuJyk7XG4gIH1cbn1cblxuLyoqICoqKioqKioqKioqKioqKioqKioqKipcbiBIZWxwZXIgZnVuY3Rpb25zXG4gKioqKioqKioqKioqKioqKioqKioqKiogKi9cbmxldCBodG1sSWQgPSAwO1xuXG5mdW5jdGlvbiBuZXh0SWQoKSB7XG4gIGh0bWxJZCArPSAxO1xuICByZXR1cm4gaHRtbElkO1xufVxuXG5mdW5jdGlvbiBzb3J0aW5nQWN0aW9uc0ZvcklkKGlkKSB7XG4gIHJldHVybiBgPGRpdj48YSBocmVmPVwiamF2YXNjcmlwdDp7fVwiIGNsYXNzPVwic29ydC11cFwiIG9uY2xpY2s9XCJzb3J0SW5zdGFuY2VVcCgnJHtpZH0nLHRoaXMpO3JldHVybiBmYWxzZVwiPnVwPC9hPiA8YSBocmVmPVwiamF2YXNjcmlwdDp7fVwiIGNsYXNzPVwic29ydC1kb3duXCIgb25jbGljaz1cInNvcnRJbnN0YW5jZURvd24oJyR7aWR9Jyx0aGlzKTtyZXR1cm4gZmFsc2VcIj5kb3duPC9hPjwvZGl2PmA7XG59XG5cbmZ1bmN0aW9uIGlzU2V0KGFuQXJyYXkpIHtcbiAgcmV0dXJuICdjaGlsZHJlbicgaW4gYW5BcnJheTtcbn1cblxuZnVuY3Rpb24gaXNGaW5kZXJVbmxvY2tlZCgpIHtcbiAgcmV0dXJuICQoJyNmaW5kZXJsb2NrJykuaGFzQ2xhc3MoJ3VubG9ja2VkJyk7XG59XG5cbi8vIEZ1bmN0aW9uIGNhbGxlZCBieSBzZXJ2ZXItc2lkZSB3aGVuIGl0IHJlZnJlc2hlcyB0aGUgdGFibGUgYWZ0ZXIgYW4gb3BlcmF0aW9uXG5leHBvcnQgZnVuY3Rpb24gYXJjaGl2ZU9wZW5TZXRzKGRhdGEpIHtcbiAgZGF0YS5zZXRzVG9PcGVuQWZ0ZXJTZWFyY2ggPSBuZXcgQXJyYXk7XG4gICQoJy5zZXQub3BlbiwubXVsdGlwbGUub3BlbicpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgZGF0YS5zZXRzVG9PcGVuQWZ0ZXJTZWFyY2gudW5zaGlmdCgkKHRoaXMpLmF0dHIoJ29iamVjdGlkJykpO1xuICB9KTtcbn1cblxuLy8gRnVuY3Rpb24gdG8gYmUgdXNlZCB0byBvcGVuIHNldHMgd2hlbiByZW5kZXJpbmcgaGFwcGVucyBzZXJ2ZXItc2lkZVxuZXhwb3J0IGZ1bmN0aW9uIGV4cGFuZE9wZW5TZXRzKGRhdGEpIHtcbiAgJChkYXRhLnNldHNUb09wZW5BZnRlclNlYXJjaCkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAkKGBbb2JqZWN0aWQ9JHt0aGlzfV1gKS5ub3QoJy5vcGVuJykuZmluZCgnLnNob3ctc2V0JykudHJpZ2dlcignY2xpY2snKTtcbiAgfSk7XG59XG5cbi8vIEZ1bmN0aW9uIHRvIGJlIHVzZWQgdG8gb3BlbiBzZXRzIHdoZW4gcmVuZGVyaW5nIGhhcHBlbnMgc2VydmVyLXNpZGVcbmV4cG9ydCBmdW5jdGlvbiBhZGRPcGVuU2V0cyhkYXRhLCBuZXdTZXRzKSB7XG4gIGRhdGEuc2V0c1RvT3BlbkFmdGVyU2VhcmNoID0gXy51bmlxKGRhdGEuc2V0c1RvT3BlbkFmdGVyU2VhcmNoLmNvbmNhdChuZXdTZXRzKSk7XG59XG5cbi8vIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb24gaW1wbGVtZW50cyB0aGUgTW96aWxsYS1saWtlIHRvU291cmNlKCkgbWV0aG9kIG9ubHkgZm9yIGFycmF5cyB3aXRoIHN0cmluZ3Ncbi8vIGJlY2F1c2UgdG9Tb3VyY2UoKSBkb2VzIG5vdCBleGlzdCBvdXRzaWRlIGZpcmVmb3hcbmZ1bmN0aW9uIHRvU291cmNlKGFuQXJyYXkpIHtcbiAgLy8gcmVwbGFjZSB3aXRoIGFuQXJyYXkudG9Tb3VyY2UoKSBpZiBldmVyeW9uZSBkZWNpZGVzIHRvIGltcGxlbWVudCB0aGlzIG1vemlsbGEtc3BlY2lmaWMgbWV0aG9kXG4gIHJldHVybiBgWyckeyQubWFwKGFuQXJyYXksIGZ1bmN0aW9uKGVhY2gpIHtcbiAgICByZXR1cm4gZWFjaC50b1N0cmluZygpO1xuICB9KS5qb2luKCdcXCcsXFwnJyl9J11gO1xufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVkSWRPZihhbk9iamVjdCwgc2VwKSB7XG4gIGlmICh0eXBlb2YgKGFuT2JqZWN0LmlkKSA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gYW5PYmplY3QuaWQuam9pbihzZXApO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgJHthbk9iamVjdC5pZH1gO1xuICB9IC8vIG1ha2Ugc3VyZSBpdCdzIGEgc3RyaW5nITtcbn1cblxuLyoqICoqKioqKioqKioqKioqKioqKioqKipcbiBDb250ZXh0IG1lbnVcbiAqKioqKioqKioqKioqKioqKioqKioqKiAqL1xuXG4vLyBQZXJtaXNzaW9ucyBvZiB0aGUgbWVudVxuZXhwb3J0IGZ1bmN0aW9uIHNldENvbnRleHRNZW51UGVybWlzc2lvbkluRmluZGVyKGZvY3VzRWxlbWVudCkge1xuICBjb25zdCBhbGxQZXJtaXNzaW9ucyA9ICQoZm9jdXNFbGVtZW50KS5tYXAoZnVuY3Rpb24oaSwgZWwpIHtcbiAgICByZXR1cm4gZXZhbCgkKGVsKS5hdHRyKCdwZXJtaXNzaW9ucycpKTtcbiAgfSk7XG4gIGNvbnN0IGN1cnJlbnRtZW51Q2xhc3MgPSAkKGZvY3VzRWxlbWVudCkuYXR0cignY21lbnUnKTtcblxuICAvLyBkaXNhYmxlIGFsbCBtZW51IGl0ZW1zIHRoYXQgaGF2ZSBhIHBlcm1pc3Npb24gZW50cnlcbiAgJChgIyR7Y3VycmVudG1lbnVDbGFzc30gbGkgW3Blcm1pc3Npb25zXWApLmF0dHIoJ2lzZGlzYWJsZScsICd0cnVlJyk7XG4gIC8vIGZvciBlYWNoIHN1Y2ggbWVudSBpdGVtLCBjaGVjayBpZiBhbGwgaXRzIHJlcXVpcmVkIHBlcm1pc3Npb25zIGFyZSBpbiBvdXIgY3VycmVudGx5IGdpdmVuIHBlcm1pc3Npb25zXG4gICQoYCMke2N1cnJlbnRtZW51Q2xhc3N9IGxpIGFbcGVybWlzc2lvbnNdYCkubm90KCcuZGlzYWJsZWQnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IG15UGVybXMgPSBldmFsKCQodGhpcykuYXR0cigncGVybWlzc2lvbnMnKSk7XG4gICAgLy8gbWFrZSB0aGUgaW50ZXJzZWN0aW9uIG9mIHRoZSByZXF1aXJlZCBhbmQgZ2l2ZW4gcGVybWlzc2lvbnMgdG8gc2VlIGlmIGFsbCByZXF1aXJlZCBwZXJtaXNzaW9ucyBhcmUgZ2l2ZW5cbiAgICBpZiAoXy5pbnRlcnNlY3Rpb24obXlQZXJtcywgYWxsUGVybWlzc2lvbnMpLmxlbmd0aCA9PT0gbXlQZXJtcy5sZW5ndGgpIHtcbiAgICAgICQodGhpcykucmVtb3ZlQXR0cignaXNkaXNhYmxlJyk7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqICoqKioqKioqKioqKioqKioqKioqKipcbiBTb3J0IG9wZXJhdGlvbnMgZm9yIHJlc291cmNlIGluc3RhbmNlc1xuICoqKioqKioqKioqKioqKioqKioqKioqICovXG5cbmV4cG9ydCBmdW5jdGlvbiBzb3J0SW5zdGFuY2VVcChpZCwgYUVsKSB7XG4gIGNvbnN0IHJvd0VsID0gJChhRWwpLmNsb3Nlc3QoJ3RyJyk7XG4gIC8vIElmIHdlIGNhbiBtb3ZlIHVwLi4uXG4gIGlmIChyb3dFbC5wcmV2KCkuaGFzQ2xhc3MoJ3NpbmdsZXRvbicpKSB7XG4gICAgLy8gRmlyc3Qgc3dhcCB0aGUgbnVtYmVyc1xuICAgIGNvbnN0IHRlbXAgPSAkKGFFbCkucGFyZW50KCkucGFyZW50KCkuY2hpbGRyZW4oJ3NwYW4nKS5jbG9uZSh0cnVlKTtcbiAgICAkKGFFbCkucGFyZW50KCkucGFyZW50KCkuY2hpbGRyZW4oJ3NwYW4nKS5yZXBsYWNlV2l0aChyb3dFbC5wcmV2KCkuZmluZCgnLmFtb3VudCBzcGFuJykuY2xvbmUodHJ1ZSkpO1xuICAgIHJvd0VsLnByZXYoKS5maW5kKCcuYW1vdW50IHNwYW4nKS5yZXBsYWNlV2l0aCh0ZW1wKTtcblxuICAgIC8vIFN3YXAgdGhlIHJvd3MgYW5kIG1ha2UgdGhlIGNhbGxiYWNrIHRvIHNlcnZlclxuICAgIHJvd0VsLmNsb25lKHRydWUpLmluc2VydEJlZm9yZShyb3dFbC5wcmV2KCkpO1xuICAgIHJvd0VsLnJlbW92ZSgpO1xuICAgIGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuc29ydEluc3RhbmNlVXBDYWxsYmFjayhpZCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNvcnRJbnN0YW5jZURvd24oaWQsIGFFbCkge1xuICBjb25zdCByb3dFbCA9ICQoYUVsKS5jbG9zZXN0KCd0cicpO1xuICBpZiAocm93RWwubmV4dCgpLmhhc0NsYXNzKCdzaW5nbGV0b24nKSkge1xuICAgIC8vIEZpcnN0IHN3YXAgdGhlIG51bWJlcnNcbiAgICBjb25zdCB0ZW1wID0gJChhRWwpLnBhcmVudCgpLnBhcmVudCgpLmNoaWxkcmVuKCdzcGFuJykuY2xvbmUodHJ1ZSk7XG4gICAgJChhRWwpLnBhcmVudCgpLnBhcmVudCgpLmNoaWxkcmVuKCdzcGFuJykucmVwbGFjZVdpdGgocm93RWwubmV4dCgpLmZpbmQoJy5hbW91bnQgc3BhbicpLmNsb25lKHRydWUpKTtcbiAgICByb3dFbC5uZXh0KCkuZmluZCgnLmFtb3VudCBzcGFuJykucmVwbGFjZVdpdGgodGVtcCk7XG5cbiAgICAvLyBTd2FwIHRoZSByb3dzIGFuZCBtYWtlIHRoZSBjYWxsYmFjayB0byBzZXJ2ZXJcbiAgICByb3dFbC5jbG9uZSh0cnVlKS5pbnNlcnRBZnRlcihyb3dFbC5uZXh0KCkpO1xuICAgIHJvd0VsLnJlbW92ZSgpO1xuICAgIGZpbmRlcnMucmVzb3VyY2VGaW5kZXIuc29ydEluc3RhbmNlRG93bkNhbGxiYWNrKGlkKTtcbiAgfVxufVxuXG4vLyB2YXJpYWJsZSB0aGF0IHdpbGwgY29udGFpbiBhIGZ1bmN0aW9uIHRvIGNhbGxiYWNrIHRvIHRoZSBzZXJ2ZXIgKHNldCBieSBhbiBvbmxvYWQgc2NyaXB0KVxuZ2xvYmFsLmdldEF2YWlsYWJpbGl0eVRpbWVsaW5lc0ZvciA9IG51bGw7XG5cbi8vIHRyaWdnZXIgdGhlIHVwZGF0ZSBvZiB0aGUgYXZhaWxhYmlsaXR5IHRpbWVsaW5lc1xuZnVuY3Rpb24gcmVmcmVzaFRpbWVsaW5lT2ZSb3dzKHJvd3MpIHtcbiAgaWYgKCQoJyNhdmFpbGFiaWxpdHlCdXR0b246dmlzaWJsZScpLmxlbmd0aCA9PT0gMCkge1xuICAgIHJvd3MuY2hpbGRyZW4oJ3RkW3RpbWVsaW5lXScpLmh0bWwoYDxpbWcgc3JjPVwiJHtyZXNvdXJjZVBhdGh9L2ltYWdlcy9hamF4LWxvYWRlci5naWZcIi8+YCk7XG4gICAgZ2xvYmFsLmdldEF2YWlsYWJpbGl0eVRpbWVsaW5lc0Zvcihyb3dzLm1hcChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnb2JqZWN0aWQnKTtcbiAgICB9KS50b0FycmF5KCkuam9pbignOycpLCByb3dzLm1hcChmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnaW5zZXRpZCcpO1xuICAgIH0pLnRvQXJyYXkoKS5qb2luKCcsJykpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZWZyZXNoT3BlblRpbWVsaW5lcygpIHtcbiAgaWYgKCQoJyNhdmFpbGFiaWxpdHlCdXR0b246dmlzaWJsZScpLmxlbmd0aCA9PT0gMCkge1xuICAgICQoJy5yZXNvbHZpbmcnKS5wYXJlbnQoKS5yZW1vdmUoKTtcbiAgICBjb25zdCBhbGwgPSAkKCd0ZFt0aW1lbGluZV06dmlzaWJsZScpO1xuICAgIGlmIChhbGwubGVuZ3RoIDwgMTAwKSB7XG4gICAgICBhbGwuaHRtbChgPGltZyBzcmM9XCIke3Jlc291cmNlUGF0aH0vaW1hZ2VzL2FqYXgtbG9hZGVyLmdpZlwiLz5gKTtcbiAgICAgIGdsb2JhbC5nZXRBdmFpbGFiaWxpdHlUaW1lbGluZXNGb3IoJC5tYXAoYWxsLCBmdW5jdGlvbihlYWNoKSB7XG4gICAgICAgIHJldHVybiAkKGVhY2gpLmF0dHIoJ3RpbWVsaW5lJyk7XG4gICAgICB9KS5qb2luKCc7JyksICQubWFwKGFsbCwgZnVuY3Rpb24oZWFjaCkge1xuICAgICAgICBpZiAoJChlYWNoKS5hdHRyKCdpbnNldCcpICE9IHVuZGVmaW5lZCkgcmV0dXJuICQoZWFjaCkuYXR0cignaW5zZXQnKTsgZWxzZSByZXR1cm4gJ251bGwnO1xuICAgICAgfSkuam9pbignLCcpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGlkZVRpbWVsaW5lcygpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBIaWRlcyB0aGUgdGltZWxpbmVzXG5mdW5jdGlvbiBoaWRlVGltZWxpbmVzKCkge1xuICAkKCcjYXZhaWxhYmlsaXR5QnV0dG9uJykuc2hvdygpO1xuICAkKCcjdGltZWxpbmVIZWFkZXJJbkZpbmRlcicpLmhpZGUoKTtcbn1cblxuZnVuY3Rpb24gaXNDb25mbGljdElkKGlkKSB7XG4gIHJldHVybiBmaW5kZXJzLnJlc291cmNlRmluZGVyLmlkc1dpdGhDb25mbGljdHMuaW5kZXhPZihpZCkgIT09IC0xO1xufVxuXG4vLyBMb2NraW5nIGFuZCB1bmxvY2tpbmcgdGhlIHRhYmxlXG5leHBvcnQgZnVuY3Rpb24gdW5sb2NrVGFibGUoaWQpIHtcbiAgLy8gdW5sb2NraW5nXG4gICQoYCMke2lkfSB0cltwZXJtaXNzaW9uc11gKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHBlcm1zID0gZXZhbCgkKHRoaXMpLmF0dHIoJ3Blcm1pc3Npb25zJykpO1xuICAgIHBlcm1zLnB1c2goJ3VubG9ja2VkJyk7XG4gICAgJCh0aGlzKS5hdHRyKCdwZXJtaXNzaW9ucycsIHRvU291cmNlKHBlcm1zKSk7XG4gIH0pO1xuICAvLyBhZGRpbmcgdGhlIHNpbmdsZXRvbiBpbi1wbGFjZSBtb3ZlbWVudCAtLSBzaG91bGQgb25seSBoYXBwZW4gaW4gcmVzb3VyY2UgZmluZGVyIVxuICAkKCcuc2luZ2xldG9uW3Blcm1pc3Npb25zKj13cml0ZV0nKS5ub3QoJy5jb250YWN0LXNpbmdsZXRvbicpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgJCh0aGlzKS5jaGlsZHJlbignLmFtb3VudCcpLmFwcGVuZChzb3J0aW5nQWN0aW9uc0ZvcklkKCQodGhpcykuYXR0cignb2JqZWN0aWQnKSkpO1xuICB9KTtcbiAgLy8gYWRkaW5nIHRoZSBpbi1wbGFjZSBlZGl0c1xuICAvLyBhZGRJblBsYWNlRWRpdHMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2tUYWJsZShpZCkge1xuICAvLyBsb2NraW5nXG4gICQoYCMke2lkfSB0cltwZXJtaXNzaW9uc11gKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICQodGhpcykuYXR0cigncGVybWlzc2lvbnMnLCB0b1NvdXJjZShfLndpdGhvdXQoZXZhbCgkKHRoaXMpLmF0dHIoJ3Blcm1pc3Npb25zJykpLCAndW5sb2NrZWQnKSkpO1xuICB9KTtcbiAgLy8gcmVtb3ZpbmcgdGhlIHNpbmdsZXRvbiBpbi1wbGFjZSBtb3ZlbWVudFxuICAkKCcuc2luZ2xldG9uIC5hbW91bnQgYScpLnJlbW92ZSgpO1xuICAvLyByZW1vdmluZyB0aGUgaW5wbGFjZSBlZGl0c1xuICAkKGAjJHtpZH0gLm5hbWUgc3BhbmApLm9mZignY2xpY2snKTtcbn1cblxuLyoqICoqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiBHZW5lcmljIHJvdyBzZWxlY3Rpb24gZnVuY3Rpb25zXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXG5leHBvcnQgZnVuY3Rpb24gY2xpY2tSb3coZXZlbnQpIHtcbiAgaWYgKGV2ZW50Lm9yaWdpbmFsRXZlbnQgPT0gbnVsbCkgcmV0dXJuOyAvLyBqUXVlcnktZ2VuZXJhdGVkIGV2ZW50cyBpbiBDaHJvbWUgdGhhdCBhcmUgdHJpZ2dlcmVkIG9uIHRoZSBzZXQtb3BlbiBhbmNob3Igc3RpbGwgcHJvcGFnYXRlIHRvIHRoaXMgaGFuZGxlciwgd2hpY2ggaXMgd3Jvbmcgd3Jvbmcgd3JvbmcuLi5cbiAgY29uc3QgdGhlUm93ID0gJChldmVudC5vcmlnaW5hbEV2ZW50LnRhcmdldCkuY2xvc2VzdCgndHInKTtcbiAgY29uc3QgbXVsdGlTZWxlY3QgPSB0aGVSb3cuaGFzQ2xhc3MoJ3VpLXNlbGVjdGVkJykgfHwgaGFzTWV0YUtleShldmVudCk7XG4gIGlmICghbXVsdGlTZWxlY3QpIHtcbiAgICAkKCcudWktc2VsZWN0ZWQnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdW5zZWxlY3RSb3coZXZlbnQsIHRoZVJvdyk7XG4gICAgfSkucmVtb3ZlQ2xhc3MoJ3VpLXNlbGVjdGVkJykuZmluZCgnLnNlbGVjdC1jb2wgW3R5cGU9Y2hlY2tib3hdJykuYXR0cignY2hlY2tlZCcsIGZhbHNlKTtcbiAgfVxuICB0aGVSb3cuYWRkQ2xhc3MoJ3VpLXNlbGVjdGVkJykuZmluZCgnLnNlbGVjdC1jb2wgW3R5cGU9Y2hlY2tib3hdJykuYXR0cignY2hlY2tlZCcsIHRydWUpO1xuICBzZWxlY3RSb3coZXZlbnQsIHRoZVJvdyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3RSb3coZXZlbnQsIHJvdykge1xuICAvLyBUaGUgdGFyZ2V0IG9mIHRoZSBjbGljayBldmVudCAoYW5kIHRoZSBlZGl0KSBtdXN0IGJlIGEgc3BhblxuICBjb25zdCB0aGVUYXJnZXQgPSAkKGV2ZW50Lm9yaWdpbmFsRXZlbnQudGFyZ2V0KS5jbG9zZXN0KCdzcGFuJyk7XG4gIGNvbnN0IHRoZUNvbHVtbktleSA9ICQodGhlVGFyZ2V0KS5jbG9zZXN0KCdbY29sdW1uS2V5XScpLmF0dHIoJ2NvbHVtbktleScpOyAvLyBuZWVkIHRvIHN0YXJ0IGZyb20gc3BhbiB0byBhbGxvdyBtdWx0aS12YWx1ZSBjb2x1bW5zXG4gIGNvbnN0IHRoZVRkID0gdGhlVGFyZ2V0LmNsb3Nlc3QoJ3RkJyk7XG4gIGNvbnN0IGZpbmRlcklkID0gdGhlVGQuY2xvc2VzdCgnZGl2JykucGFyZW50KCkuYXR0cignaWQnKTtcbiAgLy8gV2UgY2FuIHdyaXRlIGlmIHRoZSBjb2x1bW4gZG9lcyBub3QgaGF2ZSBhICdub2VkaXQnIGNsYXNzIGFuZCBpZiB0aGUgcm93IGlzIHdyaXRhYmxlIGFuZCByZWFkeSBmb3IgZWRpdFxuICBjb25zdCBjYW5Xcml0ZSA9ICEodGhlVGQuaGFzQ2xhc3MoJ25vZWRpdCcpKSAmJiAodGhlVGQuY2xvc2VzdCgndHInKS5maWx0ZXIoJy5lZGl0cmVhZHknKS5maWx0ZXIoJ1twZXJtaXNzaW9ucyo9d3JpdGVdJykubGVuZ3RoID09PSAxKSAmJiAoZmluZGVyc1tmaW5kZXJJZF0uaW5wbGFjZWVkaXRjYWxsYmFja3NbdGhlQ29sdW1uS2V5XSAhPT0gdW5kZWZpbmVkKTtcbiAgLy8gQWxzbyB2ZXJpZnkgdGhlIHdyaXRlciBsb2NrXG4gIGNvbnN0IGZpbmRlckxvY2sgPSB0aGVUZC5jbG9zZXN0KCdkaXYnKS5wYXJlbnQoKS5maW5kKCcubG9jay5kZXYtZmluZGVybG9jaycpO1xuICBjb25zdCBmaW5kZXJIYXNMb2NrID0gZmluZGVyTG9jay5sZW5ndGggPT09IDE7XG4gIGNvbnN0IGZpbmRlcklzTG9ja2VkID0gIShmaW5kZXJMb2NrLmhhc0NsYXNzKCd1bmxvY2tlZCcpKTtcblxuICAvLyBJZiB0aGUgZmluZGVyIGhhcyBhIGxvY2sgdGhhdCBpcyBsb2NrZWQsIHdlIGRvIG5vdGhpbmdcbiAgaWYgKGZpbmRlckhhc0xvY2sgJiYgZmluZGVySXNMb2NrZWQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBJZiB3ZSBjYW4gd3JpdGUsIHNldCB0aGUgZWRpdGFibGUuIElmIG5vdCwgd2UgcHJlcGFyZSB0aGUgcm93IGZvciBlZGl0aW5nICh0aGlzIGVuc3VyZXMgYSBkb3VibGUgY2xpY2sgaXMgbmVlZGVkKS5cbiAgaWYgKGNhbldyaXRlKSB7XG4gICAgdGhlVGFyZ2V0LmVkaXRhYmxlKGZpbmRlcnNbZmluZGVySWRdLmlucGxhY2VlZGl0Y2FsbGJhY2tzW3RoZUNvbHVtbktleV0sIGZpbmRlcnNbZmluZGVySWRdLmlucGxhY2VlZGl0Y29uZmlnc1t0aGVDb2x1bW5LZXldKS5lZGl0YWJsZSgnZW5hYmxlJyk7XG4gIH0gZWxzZSB7XG4gICAgdGhlVGQuY2xvc2VzdCgndHInKS5hZGRDbGFzcygnZWRpdHJlYWR5Jyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2VsZWN0Um93KGV2ZW50LCByb3cpIHtcbiAgcm93LnJlbW92ZUNsYXNzKCdlZGl0cmVhZHknKS5lZGl0YWJsZSgnZGlzYWJsZScpO1xufVxuXG4vLyBGdW5jdGlvbiB0byB0b2dnbGUgdGhlIGJhc2tldFxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZUJhc2tldCgpIHtcbiAgJCgnI2ZpbmRlcmJhc2tldCcpLnNsaWRlVG9nZ2xlKDUwKS5yZW1vdmVDbGFzcygnYXV0b21hdGljT3BlbicpO1xufVxuXG4vLyBBZGRzIGEgdGljayBpbWFnZSB0byB0aGUgcmVzb3VyY2VzIGluIHRoZSB0YWJsZSB3aGljaCBhcmUgYWxyZWFkeSBpbiB0aGUgYmFza2V0XG5leHBvcnQgZnVuY3Rpb24gdGlja1Jlc291cmNlc0luQmFza2V0KCkge1xuICBjb25zdCByZXNvdXJjZUlkc0luQmFza2V0ID0gJCgnI2ZpbmRlcmJhc2tldCBsaScpLm1hcChmdW5jdGlvbihpLCBlbCkge1xuICAgIHJldHVybiAkKGVsKS5hdHRyKCdpbkJhc2tldCcpO1xuICB9KTtcbiAgY29uc3QgdGlja2VkUmVzb3VyY2VJZHMgPSAkKCcjZmluZGVyVGFibGUgLm5hbWUuYWRkZWQnKS5tYXAoZnVuY3Rpb24oaSwgZWwpIHtcbiAgICByZXR1cm4gJChlbCkucGFyZW50KCkuYXR0cignb2JqZWN0aWQnKTtcbiAgfSk7XG5cbiAgLy8gUmVtb3ZlIHRoZSB0aWNrcyBmb3IgcmVzb3VyY2VzIHRoYXQgYXJlIG5vdCBpbiB0aGUgYmFza2V0XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGlja2VkUmVzb3VyY2VJZHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoalF1ZXJ5LmluQXJyYXkodGlja2VkUmVzb3VyY2VJZHNbaV0sIHJlc291cmNlSWRzSW5CYXNrZXQpID09PSAtMSkge1xuICAgICAgJCgnI2ZpbmRlclRhYmxlIHRyJykuZmlsdGVyKGBbb2JqZWN0aWQ9JHt0aWNrZWRSZXNvdXJjZUlkc1tpXX1dYCkuY2hpbGRyZW4oJy5uYW1lJykucmVtb3ZlQ2xhc3MoJ2FkZGVkJyk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIGEgdGljayBmb3IgYWxsIHJlc291cmNlcyBpbiB0aGUgYmFza2V0XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmVzb3VyY2VJZHNJbkJhc2tldC5sZW5ndGg7IGkrKykge1xuICAgICQoJyNmaW5kZXJUYWJsZSB0cicpLmZpbHRlcihgW29iamVjdGlkPSR7cmVzb3VyY2VJZHNJbkJhc2tldFtpXX1dYCkuY2hpbGRyZW4oJy5uYW1lJykuYWRkQ2xhc3MoJ2FkZGVkJyk7XG4gIH1cbn1cblxuLy8gZnVuY3Rpb24gdG8gZW5zdXJlIHRoYXQgc3BlY2lhbCBjaGFycyBhcmUgY29ycmVjdGx5IGVuY29kZWQgKG9uIHhtbCBwYWdlKVxuZnVuY3Rpb24gZW5jb2RlU3RyaW5nKGFTdHJpbmcpIHtcbiAgcmV0dXJuICQoJzxzcGFuLz4nKS50ZXh0KGFTdHJpbmcpLmh0bWwoKTtcbn1cblxuLy8gc29tZSBmaXhlZCBpdGVtcyBmb3IgdGhlIGZpbmRlcnMgZGF0YVxuZmluZGVycy5yZXNvdXJjZUZpbmRlci5kaXNwbGF5VGFibGUgPSBBYnN0cmFjdFJlc291cmNlLmRpc3BsYXlUYWJsZTtcbmZpbmRlcnMucmVzb3VyY2VGaW5kZXIuZGlzcGxheU1lc3NhZ2UgPSBBYnN0cmFjdFJlc291cmNlLmRpc3BsYXlNZXNzYWdlO1xuZmluZGVycy5yZXNvdXJjZUZpbmRlci5kaXNwbGF5SW5pdGlhbFRhYmxlID0gQWJzdHJhY3RSZXNvdXJjZS5kaXNwbGF5SW5pdGlhbFRhYmxlO1xuZmluZGVycy5yZXNvdXJjZUZpbmRlci5lbnRpdGllcyA9IHt9O1xuZmluZGVycy5yZXNvdXJjZUZpbmRlci5xdWVyeU9uU2VydmVyID0gZmFsc2U7XG5maW5kZXJzLnJlc291cmNlRmluZGVyLnNldHNUb09wZW5BZnRlclNlYXJjaCA9IFtdO1xuZmluZGVycy5yZXNvdXJjZUZpbmRlci5zZWFyY2hLZXlzID0gWyduYW1lJywgJ3R5cGUnLCAncm9sZXMnLCAnZ3JvdXAnLCAnc2VyaWFsJywgJ3Byb2R1Y3Rjb2RlJywgJ2RhdGUnXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./Yesplan/resources/reactjs-components/finders/resourcefinder.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["vendor"], function() { return __webpack_exec__("./Yesplan/resources/reactjs-components/finders/resourcefinder.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ ReactComponents_resourceandtaskfinder = __webpack_exports__;
/******/ }
]);