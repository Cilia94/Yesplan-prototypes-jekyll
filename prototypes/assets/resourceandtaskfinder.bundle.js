"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var ReactComponents_resourceandtaskfinder;
(self["webpackChunkReactComponents_"] = self["webpackChunkReactComponents_"] || []).push([["resourceandtaskfinder"],{

/***/ "./CommonScripts/sharedscripts/sharedscripts-npcommon.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleAjaxError\": function() { return /* binding */ handleAjaxError; },\n/* harmony export */   \"hasAltKey\": function() { return /* binding */ hasAltKey; },\n/* harmony export */   \"hasMetaKey\": function() { return /* binding */ hasMetaKey; },\n/* harmony export */   \"insertCover\": function() { return /* binding */ insertCover; },\n/* harmony export */   \"removeCover\": function() { return /* binding */ removeCover; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@sentry/hub/esm/exports.js\");\n/* harmony import */ var _sharedscripts_sentry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./CommonScripts/sharedscripts/sharedscripts-sentry.js\");\n/* eslint-disable no-unused-vars, func-names */\n/* global ajax request handling */\n\n\n$.ajaxSetup({\n  timeout: 60000\n});\n\n// the 'busy' spinner shows in the right-hand corner when an ajax request is running or a page navigation link was clicked\n$(document).ajaxStart(function () {\n  $('#status').addClass('busy').children('.message').html('BUSY');\n});\n$(window).on('beforeunload', function () {\n  $('#status').addClass('busy').children('.message').html('BUSY');\n});\n$(document).ajaxStop(function () {\n  $('#status').removeClass('busy').not('.lost').children('.message').html('');\n});\nfunction alertInternalServerError(errorDialogHTML) {\n  if (errorDialogHTML) $('body').append(errorDialogHTML);\n}\nfunction alertConnectionLost(message) {\n  alert(message);\n  window.location = '/';\n}\nfunction alertUnreportableError(message) {\n  alert(message);\n}\nfunction setOffline() {\n  $('#status').removeClass('busy').addClass('lost').children('.message').html('OFFLINE');\n}\n\n// tempo var to suppress multiple warning (should replace with nice encapsulated var)\nvar warningGiven;\nfunction handleAjaxError(e, jqXHR, ajaxSettings, thrownError) {\n  function logToSentry() {\n    if ((0,_sharedscripts_sentry__WEBPACK_IMPORTED_MODULE_0__.isSentryInitialized)()) {\n      _sentry_browser__WEBPACK_IMPORTED_MODULE_1__.withScope(function (scope) {\n        var extraData = {\n          type: ajaxSettings.type,\n          url: ajaxSettings.url,\n          data: ajaxSettings.data,\n          status: jqXHR.status,\n          error: thrownError || jqXHR.statusText,\n          response: jqXHR.responseText ? jqXHR.responseText.substring(0, 100) : undefined\n        };\n        scope.setExtras(extraData);\n        _sentry_browser__WEBPACK_IMPORTED_MODULE_1__.captureMessage(thrownError || jqXHR.statusText);\n      });\n    }\n  }\n  switch (jqXHR.status) {\n    case 500:\n      // Server-side error, use the communicated error message\n      setOffline();\n      // If an error happens however in a block with as response type Javascript, we need to manually evaluate the response text\n      if (jqXHR.getResponseHeader('content-type') === 'text/javascript') eval(jqXHR.responseText);\n      alertInternalServerError(jqXHR.getResponseHeader('content-type') === 'text/html' ? jqXHR.responseText : null);\n      logToSentry();\n      break;\n    case 403:\n      setOffline();\n      if ($('.panel--error').length === 0 && warningGiven === undefined) {\n        warningGiven = true;\n        alertConnectionLost('Connection with server has been lost. You need to login again. (error 403)');\n      }\n      break;\n    case 0:\n      if (jqXHR.statusText !== 'timeout') break;\n    // client-cancelled request: skip this one\n    // eslint-disable-next-line no-fallthrough\n    default:\n      if ($('.panel--error').length === 0 && warningGiven === undefined) {\n        warningGiven = true;\n        if (thrownError !== '' && thrownError !== 'timeout') {\n          logToSentry();\n          alertUnreportableError(\"Yesplan encountered an unreportable error: \".concat(thrownError));\n        } else {\n          setOffline();\n          alertConnectionLost(\"Connection with server has been lost. You need to login again. (error \".concat(jqXHR.status, \") - \").concat(thrownError, \" - \").concat(jqXHR.statusText, \" - \").concat(jqXHR.responseText, \" - \").concat(ajaxSettings.url));\n        }\n      }\n  }\n}\n$(document).ajaxError(handleAjaxError);\n\n/* cover insertion */\nfunction insertCover() {\n  if ($('.cover').length === 0) {\n    var bodyEl = $('body');\n    bodyEl.append('<div class=\"cover\"> </div>');\n    bodyEl.css({\n      'overflow': 'hidden'\n    });\n  }\n}\nfunction removeCover() {\n  var coverEl = $('.cover');\n  if (coverEl.length !== 0 && $('[data-needscover]').length === 0) coverEl.remove();\n  $('body').css({\n    'overflow': ''\n  });\n}\nfunction hasMetaKey(event) {\n  // Detect the metaKey (ctrl on windows/linux or cmd on mac)\n  var isMac = navigator.platform.match(/mac/i) !== null && navigator.platform.match(/mac/i).length > 0;\n  return isMac && event.metaKey || !isMac && event.ctrlKey;\n}\n\n// Detect the alt key\nfunction hasAltKey(event) {\n  return event.altKey;\n}\n\n// Extend the String class with a format function similar to the one in Smalltalk\nif (!String.prototype.format) {\n  String.prototype.format = function () {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n      return typeof args[number] !== 'undefined' ? args[number] : match;\n    });\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21tb25TY3JpcHRzL3NoYXJlZHNjcmlwdHMvc2hhcmVkc2NyaXB0cy1ucGNvbW1vbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1JlYWN0Q29tcG9uZW50c18vLi9Db21tb25TY3JpcHRzL3NoYXJlZHNjcmlwdHMvc2hhcmVkc2NyaXB0cy1ucGNvbW1vbi5qcz9hNWNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzLCBmdW5jLW5hbWVzICovXG4vKiBnbG9iYWwgYWpheCByZXF1ZXN0IGhhbmRsaW5nICovXG5pbXBvcnQgKiBhcyBTZW50cnkgZnJvbSBcIkBzZW50cnkvYnJvd3NlclwiO1xuaW1wb3J0IHtpc1NlbnRyeUluaXRpYWxpemVkfSBmcm9tIFwiLi9zaGFyZWRzY3JpcHRzLXNlbnRyeVwiO1xuXG4kLmFqYXhTZXR1cCh7IHRpbWVvdXQ6IDYwMDAwIH0pO1xuXG5cbi8vIHRoZSAnYnVzeScgc3Bpbm5lciBzaG93cyBpbiB0aGUgcmlnaHQtaGFuZCBjb3JuZXIgd2hlbiBhbiBhamF4IHJlcXVlc3QgaXMgcnVubmluZyBvciBhIHBhZ2UgbmF2aWdhdGlvbiBsaW5rIHdhcyBjbGlja2VkXG4kKGRvY3VtZW50KS5hamF4U3RhcnQoZnVuY3Rpb24oKSB7XG4gICQoJyNzdGF0dXMnKS5hZGRDbGFzcygnYnVzeScpLmNoaWxkcmVuKCcubWVzc2FnZScpLmh0bWwoJ0JVU1knKTtcbn0pO1xuJCh3aW5kb3cpLm9uKCdiZWZvcmV1bmxvYWQnLCBmdW5jdGlvbigpIHtcbiAgJCgnI3N0YXR1cycpLmFkZENsYXNzKCdidXN5JykuY2hpbGRyZW4oJy5tZXNzYWdlJykuaHRtbCgnQlVTWScpO1xufSk7XG5cbiQoZG9jdW1lbnQpLmFqYXhTdG9wKGZ1bmN0aW9uKCkge1xuICAkKCcjc3RhdHVzJykucmVtb3ZlQ2xhc3MoJ2J1c3knKS5ub3QoJy5sb3N0JykuY2hpbGRyZW4oJy5tZXNzYWdlJykuaHRtbCgnJyk7XG59KTtcblxuZnVuY3Rpb24gYWxlcnRJbnRlcm5hbFNlcnZlckVycm9yKGVycm9yRGlhbG9nSFRNTCkge1xuICBpZiAoZXJyb3JEaWFsb2dIVE1MKVxuICAgICQoJ2JvZHknKS5hcHBlbmQoZXJyb3JEaWFsb2dIVE1MKTtcbn1cblxuZnVuY3Rpb24gYWxlcnRDb25uZWN0aW9uTG9zdChtZXNzYWdlKSB7XG4gIGFsZXJ0KG1lc3NhZ2UpO1xuICB3aW5kb3cubG9jYXRpb24gPSAnLyc7XG59XG5cbmZ1bmN0aW9uIGFsZXJ0VW5yZXBvcnRhYmxlRXJyb3IobWVzc2FnZSkge1xuICBhbGVydChtZXNzYWdlKTtcbn1cblxuZnVuY3Rpb24gc2V0T2ZmbGluZSgpIHtcbiAgJCgnI3N0YXR1cycpLnJlbW92ZUNsYXNzKCdidXN5JykuYWRkQ2xhc3MoJ2xvc3QnKS5jaGlsZHJlbignLm1lc3NhZ2UnKS5odG1sKCdPRkZMSU5FJyk7XG59XG5cbi8vIHRlbXBvIHZhciB0byBzdXBwcmVzcyBtdWx0aXBsZSB3YXJuaW5nIChzaG91bGQgcmVwbGFjZSB3aXRoIG5pY2UgZW5jYXBzdWxhdGVkIHZhcilcbmxldCB3YXJuaW5nR2l2ZW47XG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlQWpheEVycm9yKGUsIGpxWEhSLCBhamF4U2V0dGluZ3MsIHRocm93bkVycm9yKSB7XG4gIGZ1bmN0aW9uIGxvZ1RvU2VudHJ5KCkge1xuICAgIGlmIChpc1NlbnRyeUluaXRpYWxpemVkKCkpIHtcbiAgICAgIFNlbnRyeS53aXRoU2NvcGUoZnVuY3Rpb24oc2NvcGUpIHtcbiAgICAgICAgY29uc3QgZXh0cmFEYXRhID0ge1xuICAgICAgICAgIHR5cGU6IGFqYXhTZXR0aW5ncy50eXBlLFxuICAgICAgICAgIHVybDogYWpheFNldHRpbmdzLnVybCxcbiAgICAgICAgICBkYXRhOiBhamF4U2V0dGluZ3MuZGF0YSxcbiAgICAgICAgICBzdGF0dXM6IGpxWEhSLnN0YXR1cyxcbiAgICAgICAgICBlcnJvcjogdGhyb3duRXJyb3IgfHwganFYSFIuc3RhdHVzVGV4dCxcbiAgICAgICAgICByZXNwb25zZTogKGpxWEhSLnJlc3BvbnNlVGV4dCkgPyBqcVhIUi5yZXNwb25zZVRleHQuc3Vic3RyaW5nKDAsIDEwMCkgOiB1bmRlZmluZWRcbiAgICAgICAgfTtcbiAgICAgICAgc2NvcGUuc2V0RXh0cmFzKGV4dHJhRGF0YSk7XG4gICAgICAgIFNlbnRyeS5jYXB0dXJlTWVzc2FnZSh0aHJvd25FcnJvciB8fCBqcVhIUi5zdGF0dXNUZXh0KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBzd2l0Y2ggKGpxWEhSLnN0YXR1cykge1xuICAgIGNhc2UgNTAwOiAvLyBTZXJ2ZXItc2lkZSBlcnJvciwgdXNlIHRoZSBjb21tdW5pY2F0ZWQgZXJyb3IgbWVzc2FnZVxuICAgICAgc2V0T2ZmbGluZSgpO1xuICAgICAgLy8gSWYgYW4gZXJyb3IgaGFwcGVucyBob3dldmVyIGluIGEgYmxvY2sgd2l0aCBhcyByZXNwb25zZSB0eXBlIEphdmFzY3JpcHQsIHdlIG5lZWQgdG8gbWFudWFsbHkgZXZhbHVhdGUgdGhlIHJlc3BvbnNlIHRleHRcbiAgICAgIGlmIChqcVhIUi5nZXRSZXNwb25zZUhlYWRlcignY29udGVudC10eXBlJykgPT09ICd0ZXh0L2phdmFzY3JpcHQnKVxuICAgICAgICBldmFsKGpxWEhSLnJlc3BvbnNlVGV4dCk7XG4gICAgICBhbGVydEludGVybmFsU2VydmVyRXJyb3IoKGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCdjb250ZW50LXR5cGUnKSA9PT0gJ3RleHQvaHRtbCcpID8ganFYSFIucmVzcG9uc2VUZXh0IDogbnVsbCk7XG4gICAgICBsb2dUb1NlbnRyeSgpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSA0MDM6XG4gICAgICBzZXRPZmZsaW5lKCk7XG4gICAgICBpZiAoJCgnLnBhbmVsLS1lcnJvcicpLmxlbmd0aCA9PT0gMCAmJiAod2FybmluZ0dpdmVuID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgIHdhcm5pbmdHaXZlbiA9IHRydWU7XG4gICAgICAgIGFsZXJ0Q29ubmVjdGlvbkxvc3QoJ0Nvbm5lY3Rpb24gd2l0aCBzZXJ2ZXIgaGFzIGJlZW4gbG9zdC4gWW91IG5lZWQgdG8gbG9naW4gYWdhaW4uIChlcnJvciA0MDMpJyk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlIDA6XG4gICAgICBpZiAoanFYSFIuc3RhdHVzVGV4dCAhPT0gJ3RpbWVvdXQnKVxuICAgICAgICBicmVhazsgLy8gY2xpZW50LWNhbmNlbGxlZCByZXF1ZXN0OiBza2lwIHRoaXMgb25lXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWZhbGx0aHJvdWdoXG4gICAgZGVmYXVsdDpcbiAgICAgIGlmICgkKCcucGFuZWwtLWVycm9yJykubGVuZ3RoID09PSAwICYmIHdhcm5pbmdHaXZlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHdhcm5pbmdHaXZlbiA9IHRydWU7XG4gICAgICAgIGlmICh0aHJvd25FcnJvciAhPT0gJycgJiYgdGhyb3duRXJyb3IgIT09ICd0aW1lb3V0Jykge1xuICAgICAgICAgIGxvZ1RvU2VudHJ5KCk7XG4gICAgICAgICAgYWxlcnRVbnJlcG9ydGFibGVFcnJvcihgWWVzcGxhbiBlbmNvdW50ZXJlZCBhbiB1bnJlcG9ydGFibGUgZXJyb3I6ICR7dGhyb3duRXJyb3J9YCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0T2ZmbGluZSgpO1xuICAgICAgICAgIGFsZXJ0Q29ubmVjdGlvbkxvc3QoYENvbm5lY3Rpb24gd2l0aCBzZXJ2ZXIgaGFzIGJlZW4gbG9zdC4gWW91IG5lZWQgdG8gbG9naW4gYWdhaW4uIChlcnJvciAke2pxWEhSLnN0YXR1c30pIC0gJHt0aHJvd25FcnJvcn0gLSAke2pxWEhSLnN0YXR1c1RleHR9IC0gJHtqcVhIUi5yZXNwb25zZVRleHR9IC0gJHthamF4U2V0dGluZ3MudXJsfWApO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cbn1cblxuJChkb2N1bWVudCkuYWpheEVycm9yKGhhbmRsZUFqYXhFcnJvcik7XG5cbi8qIGNvdmVyIGluc2VydGlvbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc2VydENvdmVyKCkge1xuICBpZiAoJCgnLmNvdmVyJykubGVuZ3RoID09PSAwKSB7XG4gICAgY29uc3QgYm9keUVsID0gJCgnYm9keScpO1xuICAgIGJvZHlFbC5hcHBlbmQoJzxkaXYgY2xhc3M9XCJjb3ZlclwiPiA8L2Rpdj4nKTtcbiAgICBib2R5RWwuY3NzKHsnb3ZlcmZsb3cnOiAnaGlkZGVuJ30pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVDb3ZlcigpIHtcbiAgY29uc3QgY292ZXJFbCA9ICQoJy5jb3ZlcicpO1xuICBpZiAoKGNvdmVyRWwubGVuZ3RoICE9PSAwKSAmJiAoJCgnW2RhdGEtbmVlZHNjb3Zlcl0nKS5sZW5ndGggPT09IDApKVxuICAgIGNvdmVyRWwucmVtb3ZlKCk7XG4gICQoJ2JvZHknKS5jc3MoeydvdmVyZmxvdyc6ICcnfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXNNZXRhS2V5KGV2ZW50KSB7XG4gIC8vIERldGVjdCB0aGUgbWV0YUtleSAoY3RybCBvbiB3aW5kb3dzL2xpbnV4IG9yIGNtZCBvbiBtYWMpXG4gIGNvbnN0IGlzTWFjID0gKG5hdmlnYXRvci5wbGF0Zm9ybS5tYXRjaCgvbWFjL2kpICE9PSBudWxsKSAmJiAobmF2aWdhdG9yLnBsYXRmb3JtLm1hdGNoKC9tYWMvaSkpLmxlbmd0aCA+IDA7XG4gIHJldHVybiAoaXNNYWMgJiYgZXZlbnQubWV0YUtleSkgfHwgKCFpc01hYyAmJiBldmVudC5jdHJsS2V5KTtcbn1cblxuLy8gRGV0ZWN0IHRoZSBhbHQga2V5XG5leHBvcnQgZnVuY3Rpb24gaGFzQWx0S2V5KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC5hbHRLZXk7XG59XG5cbi8vIEV4dGVuZCB0aGUgU3RyaW5nIGNsYXNzIHdpdGggYSBmb3JtYXQgZnVuY3Rpb24gc2ltaWxhciB0byB0aGUgb25lIGluIFNtYWxsdGFsa1xuaWYgKCFTdHJpbmcucHJvdG90eXBlLmZvcm1hdCkge1xuICBTdHJpbmcucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIHRoaXMucmVwbGFjZSgveyhcXGQrKX0vZywgZnVuY3Rpb24obWF0Y2gsIG51bWJlcikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBhcmdzW251bWJlcl0gIT09ICd1bmRlZmluZWQnID8gYXJnc1tudW1iZXJdIDogbWF0Y2g7XG4gICAgfSk7XG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./CommonScripts/sharedscripts/sharedscripts-npcommon.js\n");

/***/ }),

/***/ "./CommonScripts/sharedscripts/sharedscripts-sentry.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isSentryInitialized\": function() { return /* binding */ isSentryInitialized; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/@sentry/hub/esm/hub.js\");\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/@sentry/browser/esm/index.js\");\n\nfunction isSentryInitialized() {\n  return _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub().getClient() !== undefined;\n}\n__webpack_require__.g.Sentry = _sentry_browser__WEBPACK_IMPORTED_MODULE_1__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21tb25TY3JpcHRzL3NoYXJlZHNjcmlwdHMvc2hhcmVkc2NyaXB0cy1zZW50cnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL1JlYWN0Q29tcG9uZW50c18vLi9Db21tb25TY3JpcHRzL3NoYXJlZHNjcmlwdHMvc2hhcmVkc2NyaXB0cy1zZW50cnkuanM/ZTk3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTZW50cnkgZnJvbSBcIkBzZW50cnkvYnJvd3NlclwiO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNTZW50cnlJbml0aWFsaXplZCgpIHtcbiAgcmV0dXJuIFNlbnRyeS5nZXRDdXJyZW50SHViKCkuZ2V0Q2xpZW50KCkgIT09IHVuZGVmaW5lZFxufVxuXG5nbG9iYWwuU2VudHJ5ID0gU2VudHJ5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./CommonScripts/sharedscripts/sharedscripts-sentry.js\n");

/***/ }),

/***/ "./finders/resourcefinder.js":
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbstractResource\": function() { return /* binding */ AbstractResource; },\n/* harmony export */   \"AdHoc\": function() { return /* binding */ AdHoc; },\n/* harmony export */   \"ExternalResource\": function() { return /* binding */ ExternalResource; },\n/* harmony export */   \"FinancialAdHoc\": function() { return /* binding */ FinancialAdHoc; },\n/* harmony export */   \"PlaceHolder\": function() { return /* binding */ PlaceHolder; },\n/* harmony export */   \"PlaceHolderInSet\": function() { return /* binding */ PlaceHolderInSet; },\n/* harmony export */   \"ResourceInSet\": function() { return /* binding */ ResourceInSet; },\n/* harmony export */   \"ResourceInstance\": function() { return /* binding */ ResourceInstance; },\n/* harmony export */   \"ResourceSet\": function() { return /* binding */ ResourceSet; },\n/* harmony export */   \"addEntities\": function() { return /* binding */ addEntities; },\n/* harmony export */   \"addOpenSets\": function() { return /* binding */ addOpenSets; },\n/* harmony export */   \"archiveOpenSets\": function() { return /* binding */ archiveOpenSets; },\n/* harmony export */   \"clearEntities\": function() { return /* binding */ clearEntities; },\n/* harmony export */   \"clickRow\": function() { return /* binding */ clickRow; },\n/* harmony export */   \"displayQueryResultIn\": function() { return /* binding */ displayQueryResultIn; },\n/* harmony export */   \"expandOpenSets\": function() { return /* binding */ expandOpenSets; },\n/* harmony export */   \"finderQueryChanged\": function() { return /* binding */ finderQueryChanged; },\n/* harmony export */   \"finderQueryChangedInteractive\": function() { return /* binding */ finderQueryChangedInteractive; },\n/* harmony export */   \"finders\": function() { return /* binding */ finders; },\n/* harmony export */   \"getCurrentRole\": function() { return /* binding */ getCurrentRole; },\n/* harmony export */   \"getCurrentRoleInSE\": function() { return /* binding */ getCurrentRoleInSE; },\n/* harmony export */   \"lockTable\": function() { return /* binding */ lockTable; },\n/* harmony export */   \"openRoleSelector\": function() { return /* binding */ openRoleSelector; },\n/* harmony export */   \"refreshOpenTimelines\": function() { return /* binding */ refreshOpenTimelines; },\n/* harmony export */   \"removeEntities\": function() { return /* binding */ removeEntities; },\n/* harmony export */   \"selectRow\": function() { return /* binding */ selectRow; },\n/* harmony export */   \"setContextMenuPermissionInFinder\": function() { return /* binding */ setContextMenuPermissionInFinder; },\n/* harmony export */   \"sortInstanceDown\": function() { return /* binding */ sortInstanceDown; },\n/* harmony export */   \"sortInstanceUp\": function() { return /* binding */ sortInstanceUp; },\n/* harmony export */   \"tickResourcesInBasket\": function() { return /* binding */ tickResourcesInBasket; },\n/* harmony export */   \"toggleBasket\": function() { return /* binding */ toggleBasket; },\n/* harmony export */   \"toggleMultiple\": function() { return /* binding */ toggleMultiple; },\n/* harmony export */   \"toggleSet\": function() { return /* binding */ toggleSet; },\n/* harmony export */   \"triggerFinderUpdates\": function() { return /* binding */ triggerFinderUpdates; },\n/* harmony export */   \"unlockTable\": function() { return /* binding */ unlockTable; },\n/* harmony export */   \"unselectRow\": function() { return /* binding */ unselectRow; }\n/* harmony export */ });\n/* harmony import */ var _CommonScripts_sharedscripts_sharedscripts_npcommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./CommonScripts/sharedscripts/sharedscripts-npcommon.js\");\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n/* eslint-disable no-unused-vars, func-names */\n/* global permissions */\n/* NextPlan - Floating finders\n *\n * Copyright (c) 2011\t2Rivers NV\n * All rights reserved\n */\n\n\n/* maxMatches is the maximum number of resources to start showing interactively */\nvar maxInteractiveMatches = 50;\nvar maxMatches = 500;\nvar resourcePath = '/resources';\n\n// holds data and callbacks for the different floating finders\nvar finders = [];\nvar currentRegExps = [];\nfinders.tasksFinder = {};\nfinders.resourceFinder = {};\n/* labels in these arrays: */\n// queryCallback - callback function for complex queries\n// buildFinderContextMenu - function to activate the context menu\n// inplaceeditcallbacks - in-place edit callbacks per column\n// inplaceeditconfigs - in-place edit configs per column\n// entities - is an array of objects. Each object is an entity to display in the table */\n// matches - matches are kept in a var so we can redisplay the table when needed\n// setsToOpenAfterSearch - keep ids of sets to re-open after redisplay of the table\n// sortInstanceUpCallback -  function to sort an instance upward (resource finder specific)\n// sortInstanceDownCallback - function to sort an instance downward (resource finder specific)\n// addToBasket - function to add an item to the basket (resource finder specific)\n// idsWithConflicts - ids for which a conflict must be displayed (resource finder specific - in manager mode only)\n// finderMode - keeps the mode the finder is in (resource finder specific)\n// searchKeys - keys to search on\n// svgResourceUrl - the url needed for fetching svg icons\n\n// Triggered when a new query is entered\nvar complexQueryRegExp = /[\\\"\\+\\-\\(\\)\\:]/;\nvar currentProcess;\nfunction finderQueryChanged(searchId, data, closeOpenSets, interactive) {\n  $(searchId).parent().find('.loading').show();\n  var query = $(searchId).val();\n  clearTimeout(currentProcess);\n  var setsToOpen = [];\n  // if we should close the open sets after the search, start with a new array of ids of sets to open when displaying the table\n  if (closeOpenSets) {\n    data.setsToOpenAfterSearch = setsToOpen;\n  }\n  if (requiresQueryOnServer(data, query)) {\n    if (query === '') {\n      data.displayMessage('Too many matches... please refine query');\n      $(searchId).parent().find('.loading').hide();\n    } else {\n      data.queryCallback(query);\n    }\n  } else {\n    if ($('#status').hasClass('busy') && _.keys(data.entities).length === 0) {\n      setTimeout(function () {\n        finderQueryChanged(searchId, data, closeOpenSets, interactive);\n      }, 1000);\n      return;\n    }\n    var searchstrings = query.toLowerCase().split(' ');\n    currentRegExps = [];\n\n    // Create regexps for each search string\n    for (var i = 0; i < searchstrings.length; i++) {\n      if (searchstrings[i] !== '') {\n        try {\n          currentRegExps[i] = new RegExp(searchstrings[i], 'i');\n        } catch (err) {\n          data.displayMessage('Syntax error. ', err.message);\n          $(searchId).parent().find('.loading').hide();\n          return;\n        }\n      }\n    }\n    ;\n\n    // Search them!\n    data.matches = getEntitiesMatchingIn(currentRegExps, data.entities, data.searchKeys, setsToOpen);\n    if (interactive && data.matches.length > maxInteractiveMatches) {\n      return;\n    }\n    if (data.matches.length > maxMatches) {\n      data.displayMessage('Too many matches... please refine query');\n      $(searchId).parent().find('.loading').hide();\n      return;\n    }\n    // Special case: a search with an empty query should never open sets... (also only do this when required to close open sets...)\n    if (closeOpenSets && searchstrings.length === 1 && searchstrings[0] === '') {\n      data.setsToOpenAfterSearch = [];\n    }\n\n    // display results\n    if (data.matches.length === 0) {\n      data.displayMessage('No matches found');\n    } else {\n      var html = '';\n      var entities = [];\n      for (var _i = 0; _i < data.matches.length; _i++) {\n        entities[_i] = buildFromJSON(data.matches[_i], currentRegExps);\n        html += entities[_i].tableRow(0, '', true);\n      }\n      data.displayTable(data.matches, html);\n    }\n    $(searchId).parent().find('.loading').hide();\n  }\n}\n\n// Should the query happen server side?\nfunction requiresQueryOnServer(data, query) {\n  return data.queryOnServer || _.any(query, function (e) {\n    return complexQueryRegExp.test(e);\n  });\n}\n\n// Triggered for interactive refinement\nfunction finderQueryChangedInteractive(ev, searchId, data, closeOpenSets) {\n  clearTimeout(currentProcess);\n  var value = $(searchId).val();\n\n  // start updating interactively after more than 2 chars\n  if (value.length > 3 && !requiresQueryOnServer(data, value)) {\n    currentProcess = setTimeout(finderQueryChanged, 300, searchId, data, closeOpenSets, true);\n  }\n}\n\n// Retrieves the matching resources\nfunction getEntitiesMatchingIn(regexps, dict, searchKeys, setsToOpenAfterSearch) {\n  var filtered = [];\n  var amount = regexps.length;\n\n  // For each entity, see if it matches the query\n  _.each(dict, function (object, key) {\n    var matchesAll = true;\n\n    // Matching the query means matching all words in the query\n    for (var k = 0; k < amount; k++) {\n      var found = false;\n      // Matching a word means having a field that matches the word\n      for (var s = 0; s < searchKeys.length; s++) {\n        if (searchKeys[s] in object && object[searchKeys[s]].search(regexps[k]) != -1) {\n          found = true;\n          break;\n        }\n      }\n      if (!found && isSet(object)) {\n        if (getEntitiesMatchingIn([regexps[k]], object.children, searchKeys, setsToOpenAfterSearch).length != 0) {\n          found = true;\n          setsToOpenAfterSearch.push(object.id);\n        }\n      }\n      matchesAll = matchesAll && found;\n    }\n    if (matchesAll) {\n      filtered.push(object);\n    }\n  });\n  return filtered;\n}\nfunction displayQueryResultIn(message, ids, data) {\n  data.matches = [];\n  data.setsToOpenAfterSearch = [];\n  if (message !== '') {\n    data.displayMessage(message);\n  } else {\n    for (var i in ids) {\n      data.matches.push(data.entities[ids[i]]);\n    }\n\n    // display results\n    var html = '';\n    var entities = [];\n    for (var _i2 = 0; _i2 < data.matches.length; _i2++) {\n      entities[_i2] = buildFromJSON(data.matches[_i2], currentRegExps);\n      if (isSet(entities[_i2])) {\n        data.setsToOpenAfterSearch.push(entities[_i2].id);\n      }\n      html += entities[_i2].tableRow(0, '', true);\n    }\n    data.displayTable(data.matches, html);\n  }\n  $('.loading').hide();\n}\n\n// Function to render an SVG icon\nfunction svgIcon(iconClassName, resourceUrl) {\n  return \"<span title=\\\"\\\" class=\\\"svg-icon svg-icon--16 u-vertical-align-text-bottom svg-icon--black\\\">\\t\\t<svg class=\\\"svg-icon-\".concat(iconClassName, \"\\\">\\t\\t<use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"\").concat(resourceUrl, \"#\").concat(iconClassName, \"\\\"></use>\\t\\t</svg></span>\");\n}\n\n// Function to add entities incrementally to the entities for a finder\nfunction addEntities(finder, bodyId, entities, silent) {\n  var dict = finder.entities;\n  var table = $(\"#\".concat(bodyId)).parent();\n  for (var key in entities) {\n    dict[key] = entities[key]; // replace the entity in our local db\n    if (!silent) {\n      var renderObject = buildFromJSON(dict[key], currentRegExps); // create the object to render it\n      if (renderObject.myScope != undefined) {\n        $(\".\".concat(renderObject.myScope())).remove();\n      } // remove all containing items (when applicable)\n      var toplevelexisting = $(\"[objectid=\".concat(key, \"]\")).not('.setitem'); // replace only toplevel items\n      if (toplevelexisting.length == 0) {\n        $(\"#\".concat(bodyId)).append(renderObject.tableRow(0, '', true));\n      } else {\n        toplevelexisting.not('.singleton,.setitem').replaceWith(renderObject.tableRow(0, '', true));\n      }\n    }\n  }\n}\n\n// Function to remove entities incrementally from a finder\nfunction removeEntities(finder, ids, silent) {\n  for (var i in ids) {\n    delete finder.entities[ids[i]];\n    if (!silent) {\n      $(\"[objectid=\".concat(ids[i], \"]\")).remove();\n      $(\"[insetid=\".concat(ids[i], \"]\")).remove();\n    }\n  }\n}\n\n// Function to delete all entities from the finder\nfunction clearEntities(finder) {\n  finder.entities = {};\n}\n\n// Function that triggers the necessary updates on the table for context menu and sorter\nfunction triggerFinderUpdates(finder, bodyId) {\n  if (finder.buildFinderContextMenu !== undefined) {\n    finder.buildFinderContextMenu($(\"#\".concat(bodyId, \" tr\")));\n  }\n  $(\"#\".concat(bodyId)).on('click', clickRow);\n  var table = $(\"#\".concat(bodyId)).parent();\n  table.trigger('update');\n}\n\n/** **********\n FinderEntity\n *********** */\n\n// Object creation\nfunction buildFromJSON(object, myregexps) {\n  if (myregexps.length === 0) {\n    myregexps = [];\n    myregexps.push(new RegExp('', 'i'));\n  }\n  var clazz = eval(object._classname);\n  var obj = new clazz(object, myregexps);\n  if (obj.children !== undefined) {\n    obj.children = _.map(obj.children, function (child, key) {\n      return buildFromJSON(child, myregexps);\n    });\n  }\n  return obj;\n}\nvar FinderEntity = /*#__PURE__*/function () {\n  function FinderEntity(obj, myregexps) {\n    _classCallCheck(this, FinderEntity);\n    // copy the entity\n    for (var key in obj) {\n      var el = obj[key];\n      if (key !== 'id' && typeof obj[key] === 'string') {\n        el = encodeString(el);\n      }\n      for (var i = 0; i < myregexps.length; i++) {\n        if (key[0] !== '_' && key !== 'id' && key !== 'email' && typeof obj[key] === 'string' && myregexps[i].source !== '(?:)' && myregexps[i].source !== '') {\n          this[key] = el.replace(myregexps[i], '<em>$&</em>');\n        } else if (obj[key] != null && _typeof(obj[key]) === 'object')\n          // shallow copy arrays!\n          {\n            this[key] = _.clone(el);\n          } // still needed?\n        else {\n          this[key] = el;\n        }\n      }\n    }\n  }\n  _createClass(FinderEntity, [{\n    key: \"visibilityMarkup\",\n    value: function visibilityMarkup(token) {\n      var display;\n      if (this.visibleTableColumns().indexOf(token) === -1) {\n        display = 'none';\n      } else {\n        display = 'default';\n      }\n      return \"class=\\\"column-\".concat(token, \"\\\" style=\\\"display:\").concat(display, \"\\\"\");\n    }\n\n    // Display the property in a td with markup for visibility added\n  }, {\n    key: \"simpleTableDataFor\",\n    value: function simpleTableDataFor(property) {\n      if (this[property] === undefined) {\n        return \"<td \".concat(this.visibilityMarkup(property), \" columnKey=\\\"\").concat(property, \"\\\"></td>\");\n      } else {\n        var propertyValue = this[property];\n        switch (property) {\n          case 'email':\n            propertyValue = propertyValue.link(\"mailto:\".concat(propertyValue));\n            break;\n          case 'website':\n            propertyValue = \"<a target=\\\"_blank\\\" href=\\\"\".concat(propertyValue.addhttp(), \"\\\">\").concat(propertyValue, \"</a>\");\n            break;\n        }\n        return \"<td \".concat(this.visibilityMarkup(property), \" columnKey=\\\"\").concat(property, \"\\\">\").concat(propertyValue, \"</td>\");\n      }\n    }\n  }, {\n    key: \"checkboxTableData\",\n    value: function checkboxTableData() {\n      return '<td class=\"select-col\"><input type=\"checkbox\"></td>';\n    }\n  }]);\n  return FinderEntity;\n}();\nvar AbstractResource = /*#__PURE__*/function (_FinderEntity) {\n  _inherits(AbstractResource, _FinderEntity);\n  var _super = _createSuper(AbstractResource);\n  function AbstractResource() {\n    _classCallCheck(this, AbstractResource);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AbstractResource, [{\n    key: \"visibleTableColumns\",\n    value: function visibleTableColumns() {\n      return AbstractResource.visibleTableColumns;\n    }\n  }, {\n    key: \"getPermissions\",\n    value: function getPermissions() {\n      // Returns the permissions for an entity\n      var perms = this.permissions;\n      if (isFinderUnlocked()) {\n        perms.push('unlocked');\n      }\n      return perms;\n    }\n  }, {\n    key: \"abstractCssClasses\",\n    value: function abstractCssClasses(level) {\n      var result = '';\n      if (this.amount > 1) {\n        result += 'multiple';\n      }\n      if (level > 0) {\n        result += \" expand-child setitem sub\".concat(level);\n      }\n      return result;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return this.abstractCssClasses(level);\n    }\n  }, {\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      return false;\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      var result = '';\n      if (finders.resourceFinder.finderMode === 'listing') {\n        result += ' planned';\n        if (isConflictId(this.id)) {\n          result += ' conflict';\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"serializedId\",\n    value: function serializedId(sep) {\n      return serializedIdOf(this, sep);\n    }\n  }, {\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      // setting the right css classes for the row\n      // The setscope is a set of classes that depends on the sets we are (visually) located in. It allows us to remove this row if the set is closed!\n      var classes = \"\".concat(setscope, \" \").concat(this.cssClasses(level));\n      var style = '';\n      if (!visible) {\n        style = 'style=\"display:none\"';\n      }\n\n      // Generate the table row\n      var html = \"<tr \".concat(style, \" cMenu=\\\"finderMenu\\\" class=\\\"\").concat(classes, \"\\\" permissions=\\\"\").concat(toSource(this.getPermissions()), \"\\\" objectid=\\\"\").concat(this.serializedId(','), \"\\\" insetid=\\\"\").concat(this.setid, \"\\\">\");\n      // html += this.checkboxTableData();\n      html += this.nameTableData(level, setscope);\n      html += this.amountTableData(level);\n      for (var i = 0; i < AbstractResource.switchableTableColumns.length; i++) {\n        html += this.simpleTableDataFor(AbstractResource.switchableTableColumns[i]);\n      }\n      html += this.timelineTableData();\n      return \"\".concat(html, \"</tr>\");\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      var html = '';\n\n      // If we are in finder mode, we can add things to the basket using this link\n      if (finders.resourceFinder.finderMode === 'finder' && this.permissions.indexOf('use') !== -1) {\n        html += \"<a href=\\\"javascript:{}\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.finders.resourceFinder.addToBasket('\".concat(this.id, \"',ReactComponents_resourceandtaskfinder.getCurrentRole('\").concat(this.id, \"'))\\\" class=\\\"add\\\"><span id=\\\"R\").concat(this.id, \"\\\">\").concat(this.name, \"</span></a>\");\n        // If we have roles to show, show them.\n        if (this.type === 'Human' && this.defaultrole !== undefined && this.roles.length > 0 && !this.hasPlaceholders()) {\n          html += \" <span class=\\\"role\\\">(<span href=\\\"javascript:{}\\\" onclick=\\\"openRoleSelector('\".concat(this.id, \"')\\\" title=\\\"change role\\\">\").concat(this.defaultrole, \"</span>)</span>\");\n        }\n      } else {\n        html += \"<span id=\\\"R\".concat(this.id, \"\\\">\").concat(this.name, \"</span>\");\n      }\n      html += '</td>';\n      return html;\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td id=\\\"\".concat(this.myScope(), \"\\\" class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\").concat(this.amount, \"</span></td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      var inset = '';\n      if (this.setid !== undefined) {\n        inset = \"inset=\\\"\".concat(this.setid, \"\\\"\");\n      }\n      return \"<td timeline=\\\"\".concat(this.serializedId('_'), \"\\\" \").concat(inset, \" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }], [{\n    key: \"displayTable\",\n    value:\n    // Display a table with resulting entities and the words matching the regexps highlighted\n    function displayTable(entities, html) {\n      $('#finderTableBody').html(html).on('click', clickRow);\n\n      // Sets context menu\n      finders.resourceFinder.buildFinderContextMenu($('#finderTableBody'));\n\n      // In listing mode, we show the timelines again after a search\n      if (finders.resourceFinder.finderMode === 'listing') {\n        refreshOpenTimelines();\n      }\n      if (finders.resourceFinder.finderMode === 'finder' || finders.resourceFinder.finderMode === 'external') {\n        hideTimelines();\n        // Tick resources that are in the basket\n        tickResourcesInBasket();\n      }\n\n      // Create draggables\n      if (finders.resourceFinder.allowDragging) {\n        for (var i = 0; i < entities.length; i++) {\n          if (entities[i].permissions.indexOf('use') !== -1) {\n            createDraggable(entities[i]);\n          }\n        }\n      }\n\n      // trigger the update of the sorter cache (required!)\n      $('#finderTable').trigger('update');\n    }\n  }, {\n    key: \"displayMessage\",\n    value: function displayMessage(aString) {\n      $('#finderTableBody').html(\"<tr><td colspan=\\\"\".concat(AbstractResource.visibleTableColumns.length + 3, \"\\\">\").concat(aString, \"</td></tr>\"));\n    }\n  }, {\n    key: \"displayInitialTable\",\n    value: function displayInitialTable() {\n      $('#finderTableBody').html('');\n    }\n  }]);\n  return AbstractResource;\n}(FinderEntity);\n_defineProperty(AbstractResource, \"switchableTableColumns\", ['type', 'group', 'roles', 'serial', 'productcode', 'date', 'cost', 'price', 'rosterpublisheduntil']);\n_defineProperty(AbstractResource, \"visibleTableColumns\", null);\nfunction openRoleSelector(id) {\n  $(\"[objectid=\".concat(id, \"] .role span\")).editable(finders.resourceFinder.inplaceeditcallbacks.role, finders.resourceFinder.inplaceeditconfigs.role).editable('enable');\n}\nfunction getCurrentRole(id) {\n  return $(\"[objectid=\".concat(id, \"] .role span\")).html();\n}\nfunction getCurrentRoleInSE(id) {\n  // in SE, we use an id that starts with R...\n  return $(\"[objectid=\".concat(id.substring(1, id.size), \"] .role span\")).html();\n}\nvar Resource = /*#__PURE__*/function (_AbstractResource) {\n  _inherits(Resource, _AbstractResource);\n  var _super2 = _createSuper(Resource);\n  function Resource() {\n    _classCallCheck(this, Resource);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(Resource, [{\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      var html = _get(_getPrototypeOf(Resource.prototype), \"tableRow\", this).call(this, level, setscope, visible);\n      if (this.amount > 1) {\n        for (var i = 0; i < this.children.length; i++) {\n          html += this.children[i].tableRow(level, \"\".concat(setscope, \" \").concat(this.myScope()), false);\n        }\n      }\n      return html;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      var cssClasses = _get(_getPrototypeOf(Resource.prototype), \"abstractCssClasses\", this).call(this, level);\n      if (this.children.length === 1 && this.children[0].isInSet) {\n        cssClasses += ' fixed';\n      }\n      return cssClasses;\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\" columnKey=\\\"name\\\">\".concat(this.user ? svgIcon('icon-user', finders.resourceFinder.svgResourceUrl) : '').concat(this.suspendeduser ? svgIcon('icon-suspended-user', finders.resourceFinder.svgResourceUrl) : '').concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      if (this.children.length === 1 && this.children[0].isInSet) {\n        return \"<td class=\\\"amount\\\" title=\\\"Fixed in set \".concat(this.children[0].isInSet.replace('<em>', '').replace('</em>', ''), \"\\\">  Fixed \");\n      } // need to remove the <em> because that crashes xml page\n      else {\n        var resourceId = this.myScope();\n        var html = \"<td id=\\\"\".concat(resourceId, \"\\\" class=\\\"amount\\\" columnKey=\\\"amount\\\">\");\n\n        // A bulk resource with an unspecified amount or a human resource is not editable in-place\n        if (this.amount === '-' || this.type === 'Human') {\n          html += this.amount;\n        } else {\n          html += \"<span>\".concat(this.amount, \"</span>\");\n        }\n        if (this.hasOwnProperty('actualamount')) {\n          html += \" <span class=\\\"actual\\\">(\".concat(this.actualamount, \")</span>\");\n        }\n        if (this.children.length > 1) {\n          html += \"<a class=\\\"openme\\\" href=\\\"javascript:{}\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.toggleMultiple(this,'\".concat(resourceId, \"');event.stopPropagation()\\\" > </a></td>\");\n        } else {\n          html += '</td>';\n        }\n        return html;\n      }\n    }\n  }, {\n    key: \"myScope\",\n    value: function myScope() {\n      return \"resource\".concat(this.serializedId(''));\n    }\n  }]);\n  return Resource;\n}(AbstractResource);\nfunction toggleMultiple(el, resourceId) {\n  if ($(el).parent().parent().hasClass('open')) {\n    $(\".\".concat(resourceId)).hide();\n    $(el).parent().parent().removeClass('open');\n  } else {\n    refreshTimelineOfRows($(\".\".concat(resourceId)).show());\n    finders.resourceFinder.buildFinderContextMenu($(\".\".concat(resourceId)));\n    $(el).parent().parent().addClass('open');\n  }\n}\nvar ResourceInSet = /*#__PURE__*/function (_Resource) {\n  _inherits(ResourceInSet, _Resource);\n  var _super3 = _createSuper(ResourceInSet);\n  function ResourceInSet() {\n    _classCallCheck(this, ResourceInSet);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(ResourceInSet, [{\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\" columnKey=\\\"name\\\">\".concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n    }\n  }]);\n  return ResourceInSet;\n}(Resource);\nvar ExternalResource = /*#__PURE__*/function (_Resource2) {\n  _inherits(ExternalResource, _Resource2);\n  var _super4 = _createSuper(ExternalResource);\n  function ExternalResource() {\n    _classCallCheck(this, ExternalResource);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(ExternalResource, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"external \".concat(_get(_getPrototypeOf(ExternalResource.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return ExternalResource;\n}(Resource);\nvar AdHoc = /*#__PURE__*/function (_Resource3) {\n  _inherits(AdHoc, _Resource3);\n  var _super5 = _createSuper(AdHoc);\n  function AdHoc() {\n    _classCallCheck(this, AdHoc);\n    return _super5.apply(this, arguments);\n  }\n  _createClass(AdHoc, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"adhoc \".concat(_get(_getPrototypeOf(AdHoc.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return AdHoc;\n}(Resource);\nvar FinancialAdHoc = /*#__PURE__*/function (_Resource4) {\n  _inherits(FinancialAdHoc, _Resource4);\n  var _super6 = _createSuper(FinancialAdHoc);\n  function FinancialAdHoc() {\n    _classCallCheck(this, FinancialAdHoc);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(FinancialAdHoc, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"adhoc-financial \".concat(_get(_getPrototypeOf(FinancialAdHoc.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }]);\n  return FinancialAdHoc;\n}(Resource);\nvar PlaceHolder = /*#__PURE__*/function (_Resource5) {\n  _inherits(PlaceHolder, _Resource5);\n  var _super7 = _createSuper(PlaceHolder);\n  function PlaceHolder() {\n    _classCallCheck(this, PlaceHolder);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(PlaceHolder, [{\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      return true;\n    }\n  }, {\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      return \"placeholder \".concat(_get(_getPrototypeOf(PlaceHolder.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      return \"<td class=\\\"name\\\">\".concat(AbstractResource.prototype.nameTableData.call(this, level, setscope));\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\">\".concat(this.amount, \"</td>\");\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      if (AbstractResource.finderMode === 'listing') {\n        return \"\".concat(Resource.prototype.timelineClasses.call(this), \" empty-box-conflict\");\n      } else {\n        return '';\n      }\n    }\n  }]);\n  return PlaceHolder;\n}(Resource);\nvar PlaceHolderInSet = /*#__PURE__*/function (_PlaceHolder) {\n  _inherits(PlaceHolderInSet, _PlaceHolder);\n  var _super8 = _createSuper(PlaceHolderInSet);\n  function PlaceHolderInSet() {\n    _classCallCheck(this, PlaceHolderInSet);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(PlaceHolderInSet, [{\n    key: \"getPermissions\",\n    value: function getPermissions() {\n      var perms = AbstractResource.prototype.getPermissions.call(this);\n      return perms.concat(['writeResource']);\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      return \"<td timeline=\\\"\".concat(this.id, \"\\\" inset=\\\"\").concat(this.setid, \"\\\" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }]);\n  return PlaceHolderInSet;\n}(PlaceHolder);\nvar ResourceInstance = /*#__PURE__*/function (_AbstractResource2) {\n  _inherits(ResourceInstance, _AbstractResource2);\n  var _super9 = _createSuper(ResourceInstance);\n  function ResourceInstance() {\n    _classCallCheck(this, ResourceInstance);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(ResourceInstance, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      if (this.isInSet) {\n        if (this.setid === undefined)\n          // in singleton list\n          {\n            return ' expand-child fixed';\n          } else {\n          return \"\".concat(_get(_getPrototypeOf(ResourceInstance.prototype), \"abstractCssClasses\", this).call(this, level), \" fixed\");\n        }\n      } else {\n        return 'expand-child singleton ';\n      }\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      // only display the name in a set (otherwise we are in the instances listing)\n      if (level > 0) {\n        return \"<td class=\\\"name\\\">\".concat(this.name, \"</td>\");\n      } else {\n        return '<td class=\"name\"></td>';\n      }\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData() {\n      var html;\n      if (this.isInSet) {\n        html = \"<td class=\\\"amount\\\" title=\\\"Fixed in set \".concat(this.isInSet.replace('<em>', '').replace('</em>', ''), \"\\\">  Fixed \");\n      } // need to remove the <em> because that crashes xml page\n      else {\n        html = \"<td class=\\\"amount\\\"> <span>#\".concat(this.preference, \"</span>\");\n        if (isFinderUnlocked() && _.indexOf(this.getPermissions(), 'write') !== -1) {\n          html += sortingActionsForId(this.id);\n        }\n      }\n      return \"\".concat(html, \"</td>\");\n    }\n  }, {\n    key: \"timelineTableData\",\n    value: function timelineTableData() {\n      var insetattr = '';\n      if (this.setid !== undefined)\n        // if the inset attribute is set (ie. I am located inside the set here - not just displayed in the instances list)\n        {\n          insetattr = \"inset=\\\"\".concat(this.setid, \"\\\"\");\n        }\n      return \"<td timeline=\\\"\".concat(this.id, \"\\\" \").concat(insetattr, \" class=\\\"availability \").concat(this.timelineClasses(), \"\\\"></td>\");\n    }\n  }]);\n  return ResourceInstance;\n}(AbstractResource);\nvar ResourceSet = /*#__PURE__*/function (_AbstractResource3) {\n  _inherits(ResourceSet, _AbstractResource3);\n  var _super10 = _createSuper(ResourceSet);\n  function ResourceSet() {\n    _classCallCheck(this, ResourceSet);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(ResourceSet, [{\n    key: \"cssClasses\",\n    value: function cssClasses(level) {\n      var open = '';\n      if (this.contentsVisible()) {\n        open = 'open ';\n      }\n      return \"set \".concat(open).concat(_get(_getPrototypeOf(ResourceSet.prototype), \"abstractCssClasses\", this).call(this, level));\n    }\n  }, {\n    key: \"hasPlaceholders\",\n    value: function hasPlaceholders() {\n      var has = false;\n      for (var i = 0; i < this.children.length; i++)\n      // have to make the objects here (did not work in constructor(yet))\n      {\n        has = has || this.children[i].hasPlaceholders();\n      }\n      return has;\n    }\n  }, {\n    key: \"contentsVisible\",\n    value: function contentsVisible() {\n      return finders.resourceFinder.setsToOpenAfterSearch.indexOf(this.serializedId('')) !== -1;\n    }\n  }, {\n    key: \"tableRow\",\n    value: function tableRow(level, setscope, visible) {\n      var html = AbstractResource.prototype.tableRow.call(this, level, setscope, visible);\n      var contentsVisible = this.contentsVisible();\n      for (var i = 0; i < this.children.length; i++) {\n        html += this.children[i].tableRow(level + 1, \"\".concat(setscope, \" \").concat(this.myScope()), contentsVisible);\n      }\n      return html;\n    }\n  }, {\n    key: \"nameTableData\",\n    value: function nameTableData(level, setscope) {\n      // If the row represents a set, add the click link and register a function that will register the click when the row is generated\n      var myScope = this.myScope();\n      var html = \"<td id=\\\"\".concat(myScope, \"\\\" class=\\\"name\\\" columnkey=\\\"name\\\"><a class=\\\"openme show-set\\\" onclick=\\\"ReactComponents_resourceandtaskfinder.toggleSet($(this),'\").concat(myScope, \"',\").concat(level, \");event.stopPropagation();\\\"> </a>\");\n      return html + AbstractResource.prototype.nameTableData.call(this, level, setscope);\n    }\n  }, {\n    key: \"amountTableData\",\n    value: function amountTableData(level) {\n      if (finders.resourceFinder.finderMode === 'listing') {\n        return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n      } else if (this.setid == undefined) {\n        return '<td> - </td>';\n      } else {\n        return \"<td class=\\\"amount\\\" columnKey=\\\"amount\\\"><span>\".concat(this.amount, \"</span></td>\");\n      }\n    }\n  }, {\n    key: \"timelineClasses\",\n    value: function timelineClasses() {\n      if (finders.resourceFinder.finderMode === 'listing' && this.hasPlaceholders()) {\n        return \"\".concat(AbstractResource.prototype.timelineClasses.call(this), \" empty-box-conflict\");\n      } else {\n        return AbstractResource.prototype.timelineClasses.call(this);\n      }\n    }\n  }, {\n    key: \"myScope\",\n    value: function myScope() {\n      return \"set\".concat(this.id);\n    }\n  }]);\n  return ResourceSet;\n}(AbstractResource);\nfunction toggleSet(el, setId, level) {\n  if (el.parent().parent().hasClass('open')) {\n    // clicked on an open set or multiple\n    $(\".\".concat(setId)).hide().removeClass('open');\n    el.parent().parent().removeClass('open');\n  } else {\n    // clicked on a closed set or multiple\n    refreshTimelineOfRows($(\".\".concat(setId, \".sub\").concat(level + 1)).show());\n    finders.resourceFinder.buildFinderContextMenu($(\".\".concat(setId, \".sub\").concat(level + 1)));\n    el.parent().parent().addClass('open');\n  }\n}\n\n/** **********************\n Helper functions\n *********************** */\nvar htmlId = 0;\nfunction nextId() {\n  htmlId += 1;\n  return htmlId;\n}\nfunction sortingActionsForId(id) {\n  return \"<div><a href=\\\"javascript:{}\\\" class=\\\"sort-up\\\" onclick=\\\"sortInstanceUp('\".concat(id, \"',this);return false\\\">up</a> <a href=\\\"javascript:{}\\\" class=\\\"sort-down\\\" onclick=\\\"sortInstanceDown('\").concat(id, \"',this);return false\\\">down</a></div>\");\n}\nfunction isSet(anArray) {\n  return 'children' in anArray;\n}\nfunction isFinderUnlocked() {\n  return $('#finderlock').hasClass('unlocked');\n}\n\n// Function called by server-side when it refreshes the table after an operation\nfunction archiveOpenSets(data) {\n  data.setsToOpenAfterSearch = new Array();\n  $('.set.open,.multiple.open').each(function () {\n    data.setsToOpenAfterSearch.unshift($(this).attr('objectid'));\n  });\n}\n\n// Function to be used to open sets when rendering happens server-side\nfunction expandOpenSets(data) {\n  $(data.setsToOpenAfterSearch).each(function () {\n    $(\"[objectid=\".concat(this, \"]\")).not('.open').find('.show-set').trigger('click');\n  });\n}\n\n// Function to be used to open sets when rendering happens server-side\nfunction addOpenSets(data, newSets) {\n  data.setsToOpenAfterSearch = _.uniq(data.setsToOpenAfterSearch.concat(newSets));\n}\n\n// the following function implements the Mozilla-like toSource() method only for arrays with strings\n// because toSource() does not exist outside firefox\nfunction toSource(anArray) {\n  // replace with anArray.toSource() if everyone decides to implement this mozilla-specific method\n  return \"['\".concat($.map(anArray, function (each) {\n    return each.toString();\n  }).join('\\',\\''), \"']\");\n}\nfunction serializedIdOf(anObject, sep) {\n  if (_typeof(anObject.id) === 'object') {\n    return anObject.id.join(sep);\n  } else {\n    return \"\".concat(anObject.id);\n  } // make sure it's a string!;\n}\n\n/** **********************\n Context menu\n *********************** */\n\n// Permissions of the menu\nfunction setContextMenuPermissionInFinder(focusElement) {\n  var allPermissions = $(focusElement).map(function (i, el) {\n    return eval($(el).attr('permissions'));\n  });\n  var currentmenuClass = $(focusElement).attr('cmenu');\n\n  // disable all menu items that have a permission entry\n  $(\"#\".concat(currentmenuClass, \" li [permissions]\")).attr('isdisable', 'true');\n  // for each such menu item, check if all its required permissions are in our currently given permissions\n  $(\"#\".concat(currentmenuClass, \" li a[permissions]\")).not('.disabled').each(function () {\n    var myPerms = eval($(this).attr('permissions'));\n    // make the intersection of the required and given permissions to see if all required permissions are given\n    if (_.intersection(myPerms, allPermissions).length === myPerms.length) {\n      $(this).removeAttr('isdisable');\n    }\n  });\n}\n\n/** **********************\n Sort operations for resource instances\n *********************** */\n\nfunction sortInstanceUp(id, aEl) {\n  var rowEl = $(aEl).closest('tr');\n  // If we can move up...\n  if (rowEl.prev().hasClass('singleton')) {\n    // First swap the numbers\n    var temp = $(aEl).parent().parent().children('span').clone(true);\n    $(aEl).parent().parent().children('span').replaceWith(rowEl.prev().find('.amount span').clone(true));\n    rowEl.prev().find('.amount span').replaceWith(temp);\n\n    // Swap the rows and make the callback to server\n    rowEl.clone(true).insertBefore(rowEl.prev());\n    rowEl.remove();\n    finders.resourceFinder.sortInstanceUpCallback(id);\n  }\n}\nfunction sortInstanceDown(id, aEl) {\n  var rowEl = $(aEl).closest('tr');\n  if (rowEl.next().hasClass('singleton')) {\n    // First swap the numbers\n    var temp = $(aEl).parent().parent().children('span').clone(true);\n    $(aEl).parent().parent().children('span').replaceWith(rowEl.next().find('.amount span').clone(true));\n    rowEl.next().find('.amount span').replaceWith(temp);\n\n    // Swap the rows and make the callback to server\n    rowEl.clone(true).insertAfter(rowEl.next());\n    rowEl.remove();\n    finders.resourceFinder.sortInstanceDownCallback(id);\n  }\n}\n\n// variable that will contain a function to callback to the server (set by an onload script)\n__webpack_require__.g.getAvailabilityTimelinesFor = null;\n\n// trigger the update of the availability timelines\nfunction refreshTimelineOfRows(rows) {\n  if ($('#availabilityButton:visible').length === 0) {\n    rows.children('td[timeline]').html(\"<img src=\\\"\".concat(resourcePath, \"/images/ajax-loader.gif\\\"/>\"));\n    __webpack_require__.g.getAvailabilityTimelinesFor(rows.map(function () {\n      return this.getAttribute('objectid');\n    }).toArray().join(';'), rows.map(function () {\n      return this.getAttribute('insetid');\n    }).toArray().join(','));\n  }\n}\nfunction refreshOpenTimelines() {\n  if ($('#availabilityButton:visible').length === 0) {\n    $('.resolving').parent().remove();\n    var all = $('td[timeline]:visible');\n    if (all.length < 100) {\n      all.html(\"<img src=\\\"\".concat(resourcePath, \"/images/ajax-loader.gif\\\"/>\"));\n      __webpack_require__.g.getAvailabilityTimelinesFor($.map(all, function (each) {\n        return $(each).attr('timeline');\n      }).join(';'), $.map(all, function (each) {\n        if ($(each).attr('inset') != undefined) return $(each).attr('inset');else return 'null';\n      }).join(','));\n    } else {\n      hideTimelines();\n    }\n  }\n}\n\n// Hides the timelines\nfunction hideTimelines() {\n  $('#availabilityButton').show();\n  $('#timelineHeaderInFinder').hide();\n}\nfunction isConflictId(id) {\n  return finders.resourceFinder.idsWithConflicts.indexOf(id) !== -1;\n}\n\n// Locking and unlocking the table\nfunction unlockTable(id) {\n  // unlocking\n  $(\"#\".concat(id, \" tr[permissions]\")).each(function () {\n    var perms = eval($(this).attr('permissions'));\n    perms.push('unlocked');\n    $(this).attr('permissions', toSource(perms));\n  });\n  // adding the singleton in-place movement -- should only happen in resource finder!\n  $('.singleton[permissions*=write]').not('.contact-singleton').each(function () {\n    $(this).children('.amount').append(sortingActionsForId($(this).attr('objectid')));\n  });\n  // adding the in-place edits\n  // addInPlaceEdits();\n}\n\nfunction lockTable(id) {\n  // locking\n  $(\"#\".concat(id, \" tr[permissions]\")).each(function () {\n    $(this).attr('permissions', toSource(_.without(eval($(this).attr('permissions')), 'unlocked')));\n  });\n  // removing the singleton in-place movement\n  $('.singleton .amount a').remove();\n  // removing the inplace edits\n  $(\"#\".concat(id, \" .name span\")).off('click');\n}\n\n/** ****************************\n Generic row selection functions\n ****************************** */\nfunction clickRow(event) {\n  if (event.originalEvent == null) return; // jQuery-generated events in Chrome that are triggered on the set-open anchor still propagate to this handler, which is wrong wrong wrong...\n  var theRow = $(event.originalEvent.target).closest('tr');\n  var multiSelect = theRow.hasClass('ui-selected') || (0,_CommonScripts_sharedscripts_sharedscripts_npcommon__WEBPACK_IMPORTED_MODULE_0__.hasMetaKey)(event);\n  if (!multiSelect) {\n    $('.ui-selected').each(function () {\n      unselectRow(event, theRow);\n    }).removeClass('ui-selected').find('.select-col [type=checkbox]').attr('checked', false);\n  }\n  theRow.addClass('ui-selected').find('.select-col [type=checkbox]').attr('checked', true);\n  selectRow(event, theRow);\n}\nfunction selectRow(event, row) {\n  // The target of the click event (and the edit) must be a span\n  var theTarget = $(event.originalEvent.target).closest('span');\n  var theColumnKey = $(theTarget).closest('[columnKey]').attr('columnKey'); // need to start from span to allow multi-value columns\n  var theTd = theTarget.closest('td');\n  var finderId = theTd.closest('div').parent().attr('id');\n  // We can write if the column does not have a 'noedit' class and if the row is writable and ready for edit\n  var canWrite = !theTd.hasClass('noedit') && theTd.closest('tr').filter('.editready').filter('[permissions*=write]').length === 1 && finders[finderId].inplaceeditcallbacks[theColumnKey] !== undefined;\n  // Also verify the writer lock\n  var finderLock = theTd.closest('div').parent().find('.lock.dev-finderlock');\n  var finderHasLock = finderLock.length === 1;\n  var finderIsLocked = !finderLock.hasClass('unlocked');\n\n  // If the finder has a lock that is locked, we do nothing\n  if (finderHasLock && finderIsLocked) {\n    return;\n  }\n\n  // If we can write, set the editable. If not, we prepare the row for editing (this ensures a double click is needed).\n  if (canWrite) {\n    theTarget.editable(finders[finderId].inplaceeditcallbacks[theColumnKey], finders[finderId].inplaceeditconfigs[theColumnKey]).editable('enable');\n  } else {\n    theTd.closest('tr').addClass('editready');\n  }\n}\nfunction unselectRow(event, row) {\n  row.removeClass('editready').editable('disable');\n}\n\n// Function to toggle the basket\nfunction toggleBasket() {\n  $('#finderbasket').slideToggle(50).removeClass('automaticOpen');\n}\n\n// Adds a tick image to the resources in the table which are already in the basket\nfunction tickResourcesInBasket() {\n  var resourceIdsInBasket = $('#finderbasket li').map(function (i, el) {\n    return $(el).attr('inBasket');\n  });\n  var tickedResourceIds = $('#finderTable .name.added').map(function (i, el) {\n    return $(el).parent().attr('objectid');\n  });\n\n  // Remove the ticks for resources that are not in the basket\n  for (var i = 0; i < tickedResourceIds.length; i++) {\n    if (jQuery.inArray(tickedResourceIds[i], resourceIdsInBasket) === -1) {\n      $('#finderTable tr').filter(\"[objectid=\".concat(tickedResourceIds[i], \"]\")).children('.name').removeClass('added');\n    }\n  }\n\n  // Add a tick for all resources in the basket\n  for (var _i3 = 0; _i3 < resourceIdsInBasket.length; _i3++) {\n    $('#finderTable tr').filter(\"[objectid=\".concat(resourceIdsInBasket[_i3], \"]\")).children('.name').addClass('added');\n  }\n}\n\n// function to ensure that special chars are correctly encoded (on xml page)\nfunction encodeString(aString) {\n  return $('<span/>').text(aString).html();\n}\n\n// some fixed items for the finders data\nfinders.resourceFinder.displayTable = AbstractResource.displayTable;\nfinders.resourceFinder.displayMessage = AbstractResource.displayMessage;\nfinders.resourceFinder.displayInitialTable = AbstractResource.displayInitialTable;\nfinders.resourceFinder.entities = {};\nfinders.resourceFinder.queryOnServer = false;\nfinders.resourceFinder.setsToOpenAfterSearch = [];\nfinders.resourceFinder.searchKeys = ['name', 'type', 'roles', 'group', 'serial', 'productcode', 'date'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./finders/resourcefinder.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["vendor"], function() { return __webpack_exec__("./finders/resourcefinder.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ ReactComponents_resourceandtaskfinder = __webpack_exports__;
/******/ }
]);